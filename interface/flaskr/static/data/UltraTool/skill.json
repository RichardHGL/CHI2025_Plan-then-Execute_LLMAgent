{
    "Document": {
        "file_write": {
            "name": "file_write",
            "description": "Used to write content to a specified file. If the file does not exist, a new file will be created.",
            "arguments": {
                "type": "object",
                "properties": {
                    "file_path": {
                        "description": "The file path where the content will be written",
                        "type": "string"
                    },
                    "content": {
                        "description": "The content to be written",
                        "type": "string"
                    }
                }
            },
            "results": {
                "type": "object",
                "properties": {
                    "status": {
                        "description": "Whether the write operation was successful",
                        "type": "boolean"
                    }
                }
            }
        },
        "check_file_content": {
            "name": "check_file_content",
            "description": "Verify if the content of the specified file is consistent with the expectation",
            "arguments": {
                "type": "object",
                "properties": {
                    "file_path": {
                        "type": "string",
                        "description": "The file path of the content to be verified"
                    },
                    "expected_content": {
                        "type": "string",
                        "description": "The expected file content"
                    }
                }
            },
            "results": {
                "type": "object",
                "properties": {
                    "check_status": {
                        "type": "boolean",
                        "description": "Whether the content is consistent with the expectation"
                    }
                }
            }
        },
        "file_delete": {
            "name": "file_delete",
            "description": "Used to delete a file at a specified path. After performing file_write or file_modify operations, if the related file is no longer needed, this API can be executed to delete it.",
            "arguments": {
                "type": "object",
                "properties": {
                    "file_path": {
                        "description": "The file path to be deleted",
                        "type": "string"
                    }
                }
            },
            "results": {
                "type": "object",
                "properties": {
                    "status": {
                        "description": "Whether the delete operation was successful",
                        "type": "boolean"
                    }
                }
            }
        },
        "file_modify": {
            "name": "file_modify",
            "description": "Used to modify the content of an existing file.",
            "arguments": {
                "type": "object",
                "properties": {
                    "file_path": {
                        "description": "The file path of the content to be modified",
                        "type": "string"
                    },
                    "new_file_path": {
                        "description": "The new file path",
                        "type": "string"
                    },
                    "content": {
                        "description": "The new content to be modified to",
                        "type": "string"
                    },
                    "append_content": {
                        "description": "The new content to be appended",
                        "type": "string"
                    },
                    "original_content": {
                        "description": "The original text to be modified",
                        "type": "string"
                    },
                    "section": {
                        "description": "The section position to be modified",
                        "type": "string"
                    },
                    "new_title": {
                        "description": "The new title after modification",
                        "type": "string"
                    }
                }
            },
            "results": {
                "type": "object",
                "properties": {
                    "status": {
                        "description": "Whether the modification operation was successful",
                        "type": "boolean"
                    }
                }
            }
        },
        "ssh_connect": {
            "name": "ssh_connect",
            "description": "Connect to a server using SSH protocol",
            "arguments": {
                "type": "object",
                "properties": {
                    "server_address": {
                        "type": "string",
                        "description": "The IP address or domain name of the server"
                    },
                    "username": {
                        "type": "string",
                        "description": "The username to log in to the server"
                    },
                    "password": {
                        "type": "string",
                        "description": "The password to log in to the server"
                    },
                    "key": {
                        "type": "string",
                        "description": "The key"
                    }
                }
            },
            "results": {
                "type": "object",
                "properties": {
                    "connection_status": {
                        "type": "string",
                        "description": "Whether the connection to the server was successful"
                    },
                    "status": {
                        "type": "boolean",
                        "description": "Whether the connection operation was successful"
                    }
                }
            }
        },
        "check_file_existence": {
            "name": "check_file_existence",
            "description": "Check if the file at the specified path exists",
            "arguments": {
                "type": "object",
                "properties": {
                    "file_path": {
                        "type": "string",
                        "description": "The file path to check"
                    }
                }
            },
            "results": {
                "type": "object",
                "properties": {
                    "existence": {
                        "type": "boolean",
                        "description": "Whether the file exists"
                    }
                }
            }
        },
        "delete_specific_content": {
            "name": "delete_specific_content",
            "description": "Delete specific content in a file",
            "arguments": {
                "type": "object",
                "properties": {
                    "file_path": {
                        "type": "string",
                        "description": "The file path containing the content to be deleted"
                    },
                    "content_to_delete": {
                        "type": "string",
                        "description": "The content to be deleted"
                    }
                }
            },
            "results": {
                "type": "object",
                "properties": {
                    "status": {
                        "description": "Whether the operation to delete specific content was successful",
                        "type": "boolean"
                    }
                }
            }
        },
        "rename_file": {
            "name": "rename_file",
            "description": "Rename the file",
            "arguments": {
                "type": "object",
                "properties": {
                    "original_file_path": {
                        "description": "Original file path",
                        "type": "string"
                    },
                    "new_file_name": {
                        "description": "New file name",
                        "type": "string"
                    },
                    "new_file_path": {
                        "description": "New file path",
                        "type": "string"
                    }
                }
            },
            "results": {
                "type": "object",
                "properties": {
                    "status": {
                        "description": "Whether the rename operation was successful",
                        "type": "boolean"
                    }
                }
            }
        },
        "file_backup": {
            "name": "file_backup",
            "description": "Used for backing up specified files.",
            "arguments": {
                "type": "object",
                "properties": {
                    "source_file_path": {
                        "type": "string",
                        "description": "Source file path"
                    },
                    "backup_file_path": {
                        "type": "string",
                        "description": "Backup file path"
                    }
                }
            },
            "results": {
                "type": "object",
                "properties": {
                    "status": {
                        "description": "Whether the backup operation was successful",
                        "type": "boolean"
                    }
                }
            }
        },
        "weather_query": {
            "name": "weather_query",
            "description": "Get the weather forecast for a specified location and date",
            "arguments": {
                "type": "object",
                "properties": {
                    "date": {
                        "type": "string",
                        "description": "The date for which to obtain the weather forecast"
                    },
                    "location": {
                        "type": "string",
                        "description": "The location for which to query the weather"
                    },
                    "forecast_hours": {
                        "type": "integer",
                        "description": "Forecast time (hours)",
                        "minimum": 1,
                        "maximum": 24
                    }
                }
            },
            "results": {
                "type": "object",
                "properties": {
                    "weather_info": {
                        "type": "string",
                        "description": "Weather forecast information"
                    },
                    "weather_data": {
                        "type": "object",
                        "description": "The obtained weather data, including temperature, probability of precipitation, wind speed, etc."
                    },
                    "status": {
                        "type": "boolean",
                        "description": "Whether the retrieval operation was successful"
                    },
                    "temperature": {
                        "type": "string",
                        "description": "Temperature information"
                    },
                    "humidity": {
                        "type": "string",
                        "description": "Humidity information"
                    },
                    "weather_status": {
                        "type": "string",
                        "description": "Current weather condition description"
                    }
                }
            }
        },
        "verify_file_content": {
            "name": "verify_file_content",
            "description": "Verify if the content of the specified file matches the expectation",
            "arguments": {
                "type": "object",
                "properties": {
                    "file_path": {
                        "type": "string",
                        "description": "The path of the file"
                    },
                    "expected_content": {
                        "type": "string",
                        "description": "The expected content of the file"
                    },
                    "required_contents": {
                        "type": "array",
                        "description": "List of contents that must be included in the file",
                        "items": {
                            "type": "string"
                        }
                    }
                }
            },
            "results": {
                "type": "object",
                "properties": {
                    "match": {
                        "type": "boolean",
                        "description": "Whether the file content matches the expectation"
                    },
                    "verification_status": {
                        "type": "string",
                        "description": "The verification status of the file content"
                    }
                }
            }
        },
        "server_login": {
            "name": "server_login",
            "description": "Used for server login",
            "arguments": {
                "type": "object",
                "properties": {
                    "credentials": {
                        "type": "string",
                        "description": "Server login credentials"
                    }
                }
            },
            "results": {
                "type": "object",
                "properties": {
                    "login_status": {
                        "type": "string",
                        "description": "Whether the login operation was successful"
                    }
                }
            }
        },
        "cloud_service_login": {
            "name": "cloud_service_login",
            "description": "Used for logging into cloud service accounts",
            "arguments": {
                "type": "object",
                "properties": {
                    "service_url": {
                        "type": "string",
                        "description": "URL of the cloud service website/application"
                    },
                    "account_name": {
                        "type": "string",
                        "description": "User account name"
                    },
                    "password": {
                        "type": "string",
                        "description": "User password"
                    }
                }
            },
            "results": {
                "type": "object",
                "properties": {
                    "login_status": {
                        "type": "string",
                        "description": "Status of whether the login operation was successful"
                    }
                }
            }
        },
        "file_copy": {
            "name": "file_copy",
            "description": "Used for copying files to a specified path.",
            "arguments": {
                "type": "object",
                "properties": {
                    "source_file_path": {
                        "type": "string",
                        "description": "Source file path"
                    },
                    "destination_file_path": {
                        "type": "string",
                        "description": "Destination file path"
                    }
                }
            },
            "results": {
                "type": "object",
                "properties": {
                    "status": {
                        "description": "Whether the copy operation was successful",
                        "type": "boolean"
                    }
                }
            }
        },
        "send_notifications": {
            "name": "send_notifications",
            "description": "Send notifications to users",
            "arguments": {
                "type": "object",
                "properties": {
                    "message": {
                        "type": "string",
                        "description": "Notification content"
                    },
                    "event": {
                        "type": "string",
                        "description": "Event name"
                    },
                    "time": {
                        "type": "string",
                        "description": "Time"
                    },
                    "phone": {
                        "type": "string",
                        "description": "Phone number"
                    },
                    "participants": {
                        "type": "array",
                        "description": "List of participant emails",
                        "items": {
                            "type": "string",
                            "format": "email"
                        }
                    },
                    "notification_type": {
                        "type": "string",
                        "description": "Type of notification"
                    },
                    "meeting_id": {
                        "type": "string",
                        "description": "Meeting ID to notify"
                    },
                    "schedule_id": {
                        "type": "string",
                        "description": "Schedule ID of the meeting"
                    },
                    "agenda_id": {
                        "type": "string",
                        "description": "Agenda ID of the meeting"
                    },
                    "start_time": {
                        "type": "string",
                        "description": "Meeting start time"
                    },
                    "end_time": {
                        "type": "string",
                        "description": "Meeting end time"
                    },
                    "gate_info": {
                        "type": "string",
                        "description": "Boarding gate information"
                    },
                    "seatNumber": {
                        "type": "string",
                        "description": "Seat number"
                    },
                    "location": {
                        "type": "string",
                        "description": "Location"
                    },
                    "meeting_topic": {
                        "type": "string",
                        "description": "Meeting topic"
                    },
                    "contact": {
                        "type": "string",
                        "description": "Contact information"
                    },
                    "transactionID": {
                        "type": "string",
                        "description": "Transaction ID"
                    },
                    "activities": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "name": {
                                    "type": "string",
                                    "description": "Activity name"
                                },
                                "date": {
                                    "type": "string",
                                    "format": "date-time",
                                    "description": "Activity date and time"
                                }
                            }
                        },
                        "description": "List of activities"
                    },
                    "student_count": {
                        "type": "integer",
                        "description": "Number of students to notify",
                        "minimum": 1
                    },
                    "notification_method": {
                        "type": "string",
                        "description": "Method of sending notifications"
                    },
                    "recipients": {
                        "type": "array",
                        "description": "List of notification recipients",
                        "items": {
                            "type": "string"
                        }
                    }
                }
            },
            "results": {
                "type": "object",
                "properties": {
                    "notification_status": {
                        "type": "string",
                        "description": "Notification sending status"
                    }
                }
            }
        },
        "file_read": {
            "name": "file_read",
            "description": "Used to read the content of a specified file.",
            "arguments": {
                "type": "object",
                "properties": {
                    "file_path": {
                        "description": "The file path of the content to be read",
                        "type": "string"
                    }
                }
            },
            "results": {
                "type": "object",
                "properties": {
                    "status": {
                        "description": "Whether the read operation was successful",
                        "type": "boolean"
                    },
                    "content": {
                        "description": "The content of the file",
                        "type": "string"
                    },
                    "encoding": {
                        "description": "The encoding format of the file",
                        "type": "string"
                    }
                }
            }
        }
    },
    "Finance": {
        "account_login": {
            "name": "account_login",
            "description": "Account Login Tool",
            "arguments": {
                "type": "object",
                "properties": {
                    "account_id": {
                        "description": "Account ID",
                        "type": "integer"
                    },
                    "verification_code": {
                        "description": "Verification Code",
                        "type": "string"
                    },
                    "username": {
                        "description": "Username",
                        "type": "string"
                    },
                    "password": {
                        "description": "User Password",
                        "type": "string"
                    }
                }
            },
            "results": {
                "type": "object",
                "properties": {
                    "login_status": {
                        "description": "Login Status",
                        "type": "string"
                    }
                }
            }
        },
        "account_balance_query": {
            "name": "account_balance_query",
            "description": "Account Balance Retrieval Tool",
            "arguments": {
                "type": "object",
                "properties": {
                    "account_id": {
                        "type": "integer",
                        "description": "Account ID"
                    },
                    "date": {
                        "type": "string",
                        "description": "Date for querying balance"
                    }
                }
            },
            "results": {
                "type": "object",
                "properties": {
                    "balance_info": {
                        "description": "Account Balance Information",
                        "type": "string"
                    }
                }
            }
        },
        "weather_query": {
            "name": "weather_query",
            "description": "Get the weather forecast for a specified location and date",
            "arguments": {
                "type": "object",
                "properties": {
                    "date": {
                        "type": "string",
                        "description": "The date for which to obtain the weather forecast"
                    },
                    "location": {
                        "type": "string",
                        "description": "The location for which to query the weather"
                    },
                    "forecast_hours": {
                        "type": "integer",
                        "description": "Forecast time (hours)",
                        "minimum": 1,
                        "maximum": 24
                    }
                }
            },
            "results": {
                "type": "object",
                "properties": {
                    "weather_info": {
                        "type": "string",
                        "description": "Weather forecast information"
                    },
                    "weather_data": {
                        "type": "object",
                        "description": "The obtained weather data, including temperature, probability of precipitation, wind speed, etc."
                    },
                    "status": {
                        "type": "boolean",
                        "description": "Whether the retrieval operation was successful"
                    },
                    "temperature": {
                        "type": "string",
                        "description": "Temperature information"
                    },
                    "humidity": {
                        "type": "string",
                        "description": "Humidity information"
                    },
                    "weather_status": {
                        "type": "string",
                        "description": "Current weather condition description"
                    }
                }
            }
        },
        "stock_buy": {
            "name": "stock_buy",
            "description": "Submit a stock purchase order on the trading platform",
            "arguments": {
                "type": "object",
                "properties": {
                    "stock_code": {
                        "type": "string",
                        "description": "Stock code"
                    },
                    "quantity": {
                        "type": "integer",
                        "description": "Purchase quantity"
                    },
                    "purchase_price": {
                        "type": "number",
                        "description": "Purchase price"
                    },
                    "deadline": {
                        "type": "string",
                        "description": "Transaction deadline"
                    }
                }
            },
            "results": {
                "type": "object",
                "properties": {
                    "order_status": {
                        "type": "string",
                        "description": "Order setup status"
                    },
                    "transaction_status": {
                        "type": "string",
                        "description": "Transaction completion status"
                    }
                }
            }
        },
        "account_details": {
            "name": "account_details",
            "description": "Get detailed account information",
            "arguments": {
                "type": "object",
                "properties": {
                    "account_id": {
                        "type": "integer",
                        "description": "Account ID"
                    }
                }
            },
            "results": {
                "type": "object",
                "properties": {
                    "details_status": {
                        "type": "string",
                        "description": "Status of obtaining details"
                    },
                    "account_details": {
                        "type": "object",
                        "description": "Detailed account information"
                    }
                }
            }
        },
        "balance_query": {
            "name": "balance_query",
            "description": "Query and return account balance information",
            "arguments": {
                "type": "object",
                "properties": {
                    "account_id": {
                        "type": "integer",
                        "description": "Account ID"
                    },
                    "threshold_amount": {
                        "type": "number",
                        "description": "Balance threshold"
                    }
                }
            },
            "results": {
                "type": "object",
                "properties": {
                    "balance_info": {
                        "description": "Account balance information",
                        "type": "string"
                    },
                    "balance": {
                        "type": "integer",
                        "description": "Current account balance"
                    }
                }
            }
        },
        "query_bill_details": {
            "name": "query_bill_details",
            "description": "Query and obtain bill details",
            "arguments": {
                "type": "object",
                "properties": {
                    "account_id": {
                        "type": "integer",
                        "description": "Account ID"
                    },
                    "time_range": {
                        "type": "string",
                        "description": "Time range for the query"
                    }
                }
            },
            "results": {
                "type": "object",
                "properties": {
                    "bill_details": {
                        "type": "string",
                        "description": "Bill details information"
                    }
                }
            }
        },
        "recent_transaction_query": {
            "name": "recent_transaction_query",
            "description": "Query the most recent transaction record of a specified account",
            "arguments": {
                "type": "object",
                "properties": {
                    "account_id": {
                        "type": "integer",
                        "description": "Account ID"
                    }
                }
            },
            "results": {
                "type": "object",
                "properties": {
                    "transaction_info": {
                        "description": "Information of the most recent transaction record",
                        "type": "string"
                    }
                }
            }
        },
        "compare_balance_with_expense": {
            "name": "compare_balance_with_expense",
            "description": "Compare account balance with estimated expenses",
            "arguments": {
                "type": "object",
                "properties": {
                    "balance": {
                        "description": "Account balance",
                        "type": "number"
                    },
                    "expected_expense": {
                        "description": "Estimated expenses",
                        "type": "number"
                    }
                }
            },
            "results": {
                "type": "object",
                "properties": {
                    "comparison_result": {
                        "description": "Whether the balance is sufficient to cover expenses",
                        "type": "boolean"
                    }
                }
            }
        },
        "stock_query": {
            "name": "stock_query",
            "description": "Query the trading information of a specified stock",
            "arguments": {
                "type": "object",
                "properties": {
                    "stock_code": {
                        "type": "string",
                        "description": "The stock code to query"
                    }
                }
            },
            "results": {
                "type": "object",
                "properties": {
                    "query_status": {
                        "type": "string",
                        "description": "The status of whether the query was successful"
                    },
                    "stock_info": {
                        "type": "string",
                        "description": "The trading information of the stock"
                    }
                }
            }
        },
        "check_balance": {
            "name": "check_balance",
            "description": "Account Balance Check Tool",
            "arguments": {
                "type": "object",
                "properties": {
                    "account_id": {
                        "description": "Account ID",
                        "type": "string"
                    },
                    "card_number": {
                        "type": "string",
                        "description": "Bank Card Number"
                    },
                    "required_amount": {
                        "type": "number",
                        "description": "Required Amount of Money"
                    }
                }
            },
            "results": {
                "type": "object",
                "properties": {
                    "balance": {
                        "description": "Account Balance",
                        "type": "number"
                    },
                    "balance_status": {
                        "description": "Whether the Balance Meets the Conditions",
                        "type": "boolean"
                    }
                }
            }
        },
        "foreign_currency_purchase": {
            "name": "foreign_currency_purchase",
            "description": "Foreign Exchange Purchase Tool",
            "arguments": {
                "type": "object",
                "properties": {
                    "currency_type": {
                        "description": "Currency Type",
                        "type": "string"
                    },
                    "buy_price": {
                        "description": "Purchase Price, if not provided then the current latest price",
                        "type": "number"
                    },
                    "exchange_rate": {
                        "description": "Exchange Rate at the time of purchase",
                        "type": "number"
                    },
                    "buy_amount": {
                        "description": "Amount of Money to Purchase",
                        "type": "integer"
                    },
                    "account_balance": {
                        "description": "Account Balance",
                        "type": "number"
                    }
                }
            },
            "results": {
                "type": "object",
                "properties": {
                    "purchased_info": {
                        "description": "Information on whether the purchase was successful",
                        "type": "string"
                    }
                }
            }
        },
        "credit_card_info_retrieval": {
            "name": "credit_card_info_retrieval",
            "description": "Used to retrieve detailed information of credit card accounts",
            "arguments": {
                "type": "object",
                "properties": {
                    "account_id": {
                        "type": "integer",
                        "description": "Account ID"
                    }
                }
            },
            "results": {
                "type": "object",
                "properties": {
                    "balance": {
                        "type": "number",
                        "description": "Account Balance"
                    },
                    "recent_transactions": {
                        "type": "array",
                        "description": "Recent Transaction Records"
                    },
                    "bill_date": {
                        "type": "string",
                        "description": "Billing Date"
                    },
                    "payment_due_date": {
                        "type": "string",
                        "description": "Payment Due Date"
                    }
                }
            }
        },
        "query_balance": {
            "name": "query_balance",
            "description": "Query the account balance for a specified date",
            "arguments": {
                "type": "object",
                "properties": {
                    "date": {
                        "description": "The date for which to query the balance",
                        "type": "string"
                    }
                }
            },
            "results": {
                "type": "object",
                "properties": {
                    "balance_info": {
                        "description": "The balance information retrieved",
                        "type": "string"
                    }
                }
            }
        },
        "stock_trade_query": {
            "name": "stock_trade_query",
            "description": "Query the trading situation of a specified stock code on the given day",
            "arguments": {
                "type": "object",
                "properties": {
                    "stock_code": {
                        "type": "string",
                        "description": "Stock code"
                    },
                    "date": {
                        "type": "string",
                        "description": "Query date"
                    }
                }
            },
            "results": {
                "type": "object",
                "properties": {
                    "buy_trades": {
                        "type": "array",
                        "description": "List of buy trades for the day"
                    },
                    "sell_trades": {
                        "type": "array",
                        "description": "List of sell trades for the day"
                    }
                }
            }
        },
        "unemployment_rate_query": {
            "name": "unemployment_rate_query",
            "description": "Query the unemployment rate data for a specified country and year",
            "arguments": {
                "type": "object",
                "properties": {
                    "country": {
                        "type": "string",
                        "description": "Country name"
                    },
                    "year": {
                        "type": "string",
                        "description": "Year"
                    }
                }
            },
            "results": {
                "type": "object",
                "properties": {
                    "unemployment_rate": {
                        "type": "string",
                        "description": "Unemployment rate data"
                    }
                }
            }
        },
        "unemployment_rate_compare": {
            "name": "unemployment_rate_compare",
            "description": "Compare unemployment rate data between two years",
            "arguments": {
                "type": "object",
                "properties": {
                    "rate_previous_year": {
                        "type": "string",
                        "description": "Unemployment rate data for the previous year"
                    },
                    "rate_current_year": {
                        "type": "string",
                        "description": "Unemployment rate data for the current year"
                    }
                }
            },
            "results": {
                "type": "object",
                "properties": {
                    "comparison_result": {
                        "type": "string",
                        "description": "Comparison result of unemployment rates"
                    }
                }
            }
        },
        "get_account_statement": {
            "name": "get_account_statement",
            "description": "Get the account statement details for a specified account",
            "arguments": {
                "type": "object",
                "properties": {
                    "account_id": {
                        "type": "integer",
                        "description": "Account ID"
                    },
                    "time_range": {
                        "type": "string",
                        "description": "Time range for the query"
                    }
                }
            },
            "results": {
                "type": "object",
                "properties": {
                    "statement": {
                        "description": "Statement details",
                        "type": "string"
                    }
                }
            }
        },
        "foreign_currency_query": {
            "name": "foreign_currency_query",
            "description": "Query the amount of specific foreign currency held in the account",
            "arguments": {
                "type": "object",
                "properties": {
                    "currency_type": {
                        "description": "Currency type",
                        "type": "string"
                    }
                }
            },
            "results": {
                "type": "object",
                "properties": {
                    "foreign_currency_info": {
                        "description": "Current foreign currency holding information",
                        "type": "string"
                    }
                }
            }
        },
        "submit_remittance": {
            "name": "submit_remittance",
            "description": "Submit domestic remittance request",
            "arguments": {
                "type": "object",
                "properties": {
                    "account_id": {
                        "type": "integer",
                        "description": "Remitter's account ID"
                    },
                    "recipient_name": {
                        "type": "string",
                        "description": "Recipient's name"
                    },
                    "recipient_account": {
                        "type": "string",
                        "description": "Recipient's account number"
                    },
                    "recipient_bank": {
                        "type": "string",
                        "description": "Recipient's bank name"
                    },
                    "amount": {
                        "type": "integer",
                        "description": "Remittance amount"
                    }
                }
            },
            "results": {
                "type": "object",
                "properties": {
                    "remittance_status": {
                        "type": "string",
                        "description": "Remittance request submission status"
                    },
                    "transaction_id": {
                        "type": "string",
                        "description": "Transaction ID"
                    }
                }
            }
        },
        "credit_card_points_query": {
            "name": "credit_card_points_query",
            "description": "Credit Card Points Query Tool",
            "arguments": {
                "type": "object",
                "properties": {
                    "account_id": {
                        "description": "Account ID",
                        "type": "integer"
                    }
                }
            },
            "results": {
                "type": "object",
                "properties": {
                    "points_info": {
                        "description": "Credit Card Points Information",
                        "type": "string"
                    }
                }
            }
        },
        "account_logout": {
            "name": "account_logout",
            "description": "Account Logout Tool",
            "arguments": {
                "type": "object",
                "properties": {
                    "account_id": {
                        "description": "Account ID",
                        "type": "string"
                    }
                }
            },
            "results": {
                "type": "object",
                "properties": {
                    "logout_status": {
                        "description": "Logout Status",
                        "type": "string"
                    }
                }
            }
        },
        "get_exchange_rate": {
            "name": "get_exchange_rate",
            "description": "Get the latest exchange rate for the specified currency pair",
            "arguments": {
                "type": "object",
                "properties": {
                    "from_currency": {
                        "type": "string",
                        "description": "Source currency type"
                    },
                    "to_currency": {
                        "type": "string",
                        "description": "Target currency type"
                    }
                }
            },
            "results": {
                "type": "object",
                "properties": {
                    "exchange_rate": {
                        "type": "number",
                        "description": "Current exchange rate"
                    }
                }
            }
        },
        "calculate_exchange_amount": {
            "name": "calculate_exchange_amount",
            "description": "Calculate the currency exchange amount based on the exchange rate",
            "arguments": {
                "type": "object",
                "properties": {
                    "target_amount": {
                        "type": "integer",
                        "description": "The amount of the target currency"
                    },
                    "exchange_rate": {
                        "type": "number",
                        "description": "The exchange rate between currencies"
                    },
                    "currency_from": {
                        "type": "string",
                        "description": "Source currency type"
                    },
                    "currency_to": {
                        "type": "string",
                        "description": "Target currency type"
                    }
                }
            },
            "results": {
                "type": "object",
                "properties": {
                    "conversion_amount": {
                        "type": "number",
                        "description": "The amount of currency after conversion"
                    }
                }
            }
        },
        "credit_card_debt": {
            "name": "credit_card_debt",
            "description": "Query credit card debt amount",
            "arguments": {
                "type": "object",
                "properties": {
                    "credit_card_number": {
                        "description": "Credit card number",
                        "type": "string"
                    },
                    "currency": {
                        "description": "Currency",
                        "type": "string",
                        "default": "CNY"
                    },
                    "account_id": {
                        "type": "integer",
                        "description": "Credit card account ID"
                    },
                    "card_last_digits": {
                        "type": "string",
                        "description": "Last digits of credit card"
                    },
                    "date_range": {
                        "type": "string",
                        "description": "Date range for the query"
                    }
                }
            },
            "results": {
                "type": "object",
                "properties": {
                    "debt": {
                        "description": "Current credit card debt amount",
                        "type": "number"
                    }
                }
            }
        },
        "get_recent_transaction": {
            "name": "get_recent_transaction",
            "description": "Get the account's recent transaction records",
            "arguments": {
                "type": "object",
                "properties": {
                    "account_id": {
                        "type": "integer",
                        "description": "Account ID"
                    },
                    "transaction_count": {
                        "description": "The number of transaction records to retrieve",
                        "type": "integer"
                    }
                }
            },
            "results": {
                "type": "object",
                "properties": {
                    "transaction_info": {
                        "description": "Information of the most recent transaction",
                        "type": "string"
                    },
                    "transactions": {
                        "type": "array",
                        "description": "List of transaction records"
                    }
                }
            }
        },
        "get_asset_overview": {
            "name": "get_asset_overview",
            "description": "Get account asset overview",
            "arguments": {
                "type": "object",
                "properties": {
                    "account_id": {
                        "type": "integer",
                        "description": "Account ID"
                    }
                }
            },
            "results": {
                "type": "object",
                "properties": {
                    "asset_total": {
                        "type": "number",
                        "description": "Total assets"
                    },
                    "asset_distribution": {
                        "type": "object",
                        "description": "Asset distribution"
                    }
                }
            }
        },
        "get_transaction_history": {
            "name": "get_transaction_history",
            "description": "Retrieve account transaction history",
            "arguments": {
                "type": "object",
                "properties": {
                    "account_id": {
                        "type": "integer",
                        "description": "Account ID"
                    },
                    "time_range": {
                        "type": "string",
                        "description": "Time range for the query"
                    }
                }
            },
            "results": {
                "type": "object",
                "properties": {
                    "transactions": {
                        "type": "array",
                        "description": "Details of transaction records"
                    }
                }
            }
        },
        "secure_logout": {
            "name": "secure_logout",
            "description": "Perform secure logout operation for account",
            "arguments": {
                "type": "object",
                "properties": {
                    "account_id": {
                        "type": "integer",
                        "description": "Account ID"
                    }
                }
            },
            "results": {
                "type": "object",
                "properties": {
                    "logout_status": {
                        "type": "string",
                        "description": "Logout status"
                    }
                }
            }
        },
        "foreign_currency_sale": {
            "name": "foreign_currency_sale",
            "description": "Foreign Exchange Selling Tool",
            "arguments": {
                "type": "object",
                "properties": {
                    "currency_type": {
                        "description": "Currency Type",
                        "type": "string"
                    },
                    "sell_price": {
                        "description": "Selling Price, if not provided, the latest price will be used",
                        "type": "number"
                    },
                    "sell_amount": {
                        "description": "Amount of Money to Sell",
                        "type": "integer"
                    }
                }
            },
            "results": {
                "type": "object",
                "properties": {
                    "sale_info": {
                        "description": "Information on whether the sale was successful",
                        "type": "string"
                    }
                }
            }
        },
        "fetch_net_profit": {
            "name": "fetch_net_profit",
            "description": "Retrieve net profit data for a specified date",
            "arguments": {
                "type": "object",
                "properties": {
                    "date": {
                        "type": "string",
                        "description": "The date for which to query the net profit"
                    }
                }
            },
            "results": {
                "type": "object",
                "properties": {
                    "net_profit": {
                        "type": "number",
                        "description": "The net profit data for the day"
                    }
                }
            }
        },
        "report_net_profit": {
            "name": "report_net_profit",
            "description": "Report the net profit situation to users",
            "arguments": {
                "type": "object",
                "properties": {
                    "method": {
                        "type": "string",
                        "description": "The method of reporting, such as email or written report"
                    },
                    "net_profit_data": {
                        "type": "number",
                        "description": "The data of net profit"
                    }
                }
            },
            "results": {
                "type": "object",
                "properties": {
                    "report_status": {
                        "type": "string",
                        "description": "The status of whether the report was successful"
                    }
                }
            }
        },
        "stock_price_query": {
            "name": "stock_price_query",
            "description": "Query the current price of a specified stock",
            "arguments": {
                "type": "object",
                "properties": {
                    "stock_code": {
                        "type": "string",
                        "description": "Stock code"
                    }
                }
            },
            "results": {
                "type": "object",
                "properties": {
                    "price": {
                        "type": "number",
                        "description": "Current stock price"
                    }
                }
            }
        },
        "change_password": {
            "name": "change_password",
            "description": "Tool for changing account password",
            "arguments": {
                "type": "object",
                "properties": {
                    "account_id": {
                        "type": "integer",
                        "description": "Account ID"
                    },
                    "old_password": {
                        "type": "string",
                        "description": "Current password"
                    },
                    "new_password": {
                        "type": "string",
                        "description": "New password"
                    }
                }
            },
            "results": {
                "type": "object",
                "properties": {
                    "change_status": {
                        "type": "string",
                        "description": "Password change status"
                    }
                }
            }
        },
        "search_deposit_products": {
            "name": "search_deposit_products",
            "description": "Search and filter fixed deposit products that meet the criteria",
            "arguments": {
                "type": "object",
                "properties": {
                    "bank_name": {
                        "type": "string",
                        "description": "Bank name"
                    },
                    "product_type": {
                        "type": "string",
                        "description": "Product type"
                    },
                    "min_annual_rate": {
                        "type": "number",
                        "description": "Minimum annual interest rate"
                    },
                    "max_initial_amount": {
                        "type": "number",
                        "description": "Maximum initial deposit amount"
                    }
                }
            },
            "results": {
                "type": "object",
                "properties": {
                    "search_status": {
                        "type": "string",
                        "description": "Search status"
                    },
                    "products": {
                        "type": "array",
                        "description": "List of products that meet the criteria"
                    }
                }
            }
        },
        "deposit_money": {
            "name": "deposit_money",
            "description": "Perform deposit operations in user's account",
            "arguments": {
                "type": "object",
                "properties": {
                    "account_id": {
                        "type": "integer",
                        "description": "Account ID"
                    },
                    "deposit_product": {
                        "type": "string",
                        "description": "Selected deposit product"
                    },
                    "deposit_amount": {
                        "type": "number",
                        "description": "Deposit amount"
                    }
                }
            },
            "results": {
                "type": "object",
                "properties": {
                    "deposit_status": {
                        "type": "string",
                        "description": "Deposit operation status"
                    }
                }
            }
        },
        "transfer_money": {
            "name": "transfer_money",
            "description": "Perform transfer operation",
            "arguments": {
                "type": "object",
                "properties": {
                    "account_name": {
                        "type": "string",
                        "description": "Name of the bank receiving the remittance"
                    },
                    "account_number": {
                        "type": "string",
                        "description": "Account number of the remittance recipient"
                    },
                    "swift_code": {
                        "type": "string",
                        "description": "SWIFT code or other international remittance required information"
                    },
                    "amount": {
                        "type": "number",
                        "description": "Remittance amount"
                    },
                    "recipient_info": {
                        "type": "string",
                        "description": "Recipient's account information"
                    },
                    "account_id": {
                        "type": "integer",
                        "description": "Account ID"
                    },
                    "recipient_name": {
                        "type": "string",
                        "description": "Recipient's name"
                    },
                    "transfer_mode": {
                        "type": "string",
                        "description": "Transfer method"
                    },
                    "security_code": {
                        "description": "Security verification code",
                        "type": "string"
                    }
                }
            },
            "results": {
                "type": "object",
                "properties": {
                    "transfer_status": {
                        "type": "string",
                        "description": "Status of the transfer operation"
                    },
                    "transfer_receipt": {
                        "type": "string",
                        "description": "Remittance receipt information"
                    },
                    "transaction_id": {
                        "type": "string",
                        "description": "Transaction number"
                    },
                    "completion_time": {
                        "type": "string",
                        "description": "Completion time"
                    }
                }
            }
        },
        "confirm_transfer": {
            "name": "confirm_transfer",
            "description": "Confirm whether the transfer operation is successful",
            "arguments": {
                "type": "object",
                "properties": {
                    "account_id": {
                        "type": "integer",
                        "description": "Source account ID"
                    },
                    "recipient_account": {
                        "type": "string",
                        "description": "Recipient account"
                    },
                    "transfer_amount": {
                        "type": "number",
                        "description": "Transfer amount"
                    }
                }
            },
            "results": {
                "type": "object",
                "properties": {
                    "confirmation_status": {
                        "description": "Transfer confirmation status",
                        "type": "string"
                    }
                }
            }
        },
        "transfer_all_to_main_account": {
            "name": "transfer_all_to_main_account",
            "description": "Transfer the entire balance from the specified account to the main account",
            "arguments": {
                "type": "object",
                "properties": {
                    "source_account_id": {
                        "type": "string",
                        "description": "Source account ID"
                    },
                    "target_account_id": {
                        "type": "string",
                        "description": "Target account ID"
                    },
                    "amount": {
                        "type": "string",
                        "description": "Transfer amount"
                    }
                }
            },
            "results": {
                "type": "object",
                "properties": {
                    "transfer_status": {
                        "type": "string",
                        "description": "Status of whether the transfer was successful"
                    }
                }
            }
        },
        "purchase_fixed_deposit": {
            "name": "purchase_fixed_deposit",
            "description": "Purchase fixed deposit product tool",
            "arguments": {
                "type": "object",
                "properties": {
                    "product_amount": {
                        "type": "integer",
                        "description": "The amount of money to purchase the fixed deposit"
                    },
                    "interest_rate": {
                        "type": "number",
                        "description": "Annual interest rate"
                    },
                    "duration_years": {
                        "type": "integer",
                        "description": "The duration of the deposit in years"
                    },
                    "card_ending": {
                        "type": "string",
                        "description": "The last few digits of the payment bank card"
                    }
                }
            },
            "results": {
                "type": "object",
                "properties": {
                    "purchase_status": {
                        "type": "string",
                        "description": "The status of whether the fixed deposit was purchased successfully"
                    }
                }
            }
        },
        "get_loan_interest_rate": {
            "name": "get_loan_interest_rate",
            "description": "Retrieve loan interest rate information for a specified bank",
            "arguments": {
                "type": "object",
                "properties": {
                    "bank_name": {
                        "type": "string",
                        "description": "Bank name"
                    },
                    "loan_amount": {
                        "type": "string",
                        "description": "Loan amount"
                    },
                    "loan_period": {
                        "type": "string",
                        "description": "Loan period"
                    }
                }
            },
            "results": {
                "type": "object",
                "properties": {
                    "interest_rate": {
                        "type": "string",
                        "description": "Retrieved loan interest rate"
                    }
                }
            }
        },
        "calculate_total_interest": {
            "name": "calculate_total_interest",
            "description": "Calculate the total interest of a loan",
            "arguments": {
                "type": "object",
                "properties": {
                    "loan_amount": {
                        "type": "string",
                        "description": "Loan amount"
                    },
                    "loan_period": {
                        "type": "string",
                        "description": "Loan period"
                    },
                    "interest_rate": {
                        "type": "string",
                        "description": "Loan interest rate"
                    },
                    "calculation_method": {
                        "type": "string",
                        "description": "Interest calculation method"
                    }
                }
            },
            "results": {
                "type": "object",
                "properties": {
                    "total_interest": {
                        "type": "string",
                        "description": "Calculated total interest amount"
                    }
                }
            }
        },
        "create_transaction": {
            "name": "create_transaction",
            "description": "Create a new transaction for submitting merchant and customer transaction information to the platform",
            "arguments": {
                "type": "object",
                "properties": {
                    "account_id": {
                        "description": "User account ID",
                        "type": "string"
                    },
                    "merchant_id": {
                        "description": "Merchant ID",
                        "type": "string"
                    },
                    "amount": {
                        "description": "Transaction amount in RMB",
                        "type": "integer"
                    },
                    "transaction_time": {
                        "description": "Transaction time",
                        "type": "string",
                        "format": "date-time"
                    },
                    "description": {
                        "description": "Transaction description",
                        "type": "string"
                    }
                }
            },
            "results": {
                "type": "object",
                "properties": {
                    "transaction_id": {
                        "description": "Generated transaction ID",
                        "type": "string"
                    }
                }
            }
        },
        "generate_transaction_report": {
            "name": "generate_transaction_report",
            "description": "Generate a detailed transaction report based on transaction ID",
            "arguments": {
                "type": "object",
                "properties": {
                    "transaction_id": {
                        "type": "string",
                        "description": "The transaction ID for which the report is to be generated"
                    }
                }
            },
            "results": {
                "type": "object",
                "properties": {
                    "report_status": {
                        "type": "string",
                        "description": "The status of the report generation"
                    },
                    "report_path": {
                        "type": "string",
                        "description": "The file path of the generated report"
                    }
                }
            }
        },
        "modify_transaction": {
            "name": "modify_transaction",
            "description": "Modify the content of a transaction, based on the transaction ID",
            "arguments": {
                "type": "object",
                "properties": {
                    "transaction_id": {
                        "description": "The transaction ID to modify",
                        "type": "string"
                    },
                    "amount": {
                        "description": "The new transaction amount, in RMB",
                        "type": "integer"
                    },
                    "description": {
                        "description": "The new transaction description",
                        "type": "string"
                    }
                }
            },
            "results": {
                "type": "object",
                "properties": {
                    "status": {
                        "description": "The status of the modification",
                        "type": "string"
                    }
                }
            }
        },
        "deposit_product_selection": {
            "name": "deposit_product_selection",
            "description": "Deposit Product Selection Tool",
            "arguments": {
                "type": "object",
                "properties": {
                    "product_name": {
                        "description": "Name of the deposit product",
                        "type": "string"
                    }
                }
            },
            "results": {
                "type": "object",
                "properties": {
                    "product_details": {
                        "description": "Detailed information of the deposit product",
                        "type": "string"
                    }
                }
            }
        },
        "loan_application": {
            "name": "loan_application",
            "description": "Online Banking Loan Application Tool",
            "arguments": {
                "type": "object",
                "properties": {
                    "account": {
                        "description": "Card (Account) Number/Mobile Number/Username",
                        "type": "string"
                    },
                    "password": {
                        "description": "Account Password",
                        "type": "string"
                    },
                    "captcha": {
                        "description": "Verification Code",
                        "type": "string"
                    }
                }
            },
            "results": {
                "type": "object",
                "properties": {
                    "application_status": {
                        "description": "Loan Application Status",
                        "type": "string"
                    }
                }
            }
        },
        "loan_application_time": {
            "name": "loan_application_time",
            "description": "Retrieve the audit time of loan application",
            "arguments": {
                "type": "object",
                "properties": {
                    "account": {
                        "type": "string",
                        "description": "Card (account) number/mobile number/username"
                    },
                    "password": {
                        "type": "string",
                        "description": "Account password"
                    },
                    "captcha": {
                        "type": "string",
                        "description": "Verification code"
                    }
                }
            },
            "results": {
                "type": "object",
                "properties": {
                    "application_time": {
                        "type": "string",
                        "description": "Audit time of the loan application"
                    }
                }
            }
        },
        "detailed_inquiry": {
            "name": "detailed_inquiry",
            "description": "Business Inquiry - Detailed Inquiry Tool",
            "arguments": {
                "type": "object",
                "properties": {
                    "identity": {
                        "description": "Card (Account) Number/Phone Number/Username",
                        "type": "string"
                    },
                    "password": {
                        "description": "Account Password",
                        "type": "string"
                    },
                    "verification_code": {
                        "description": "Verification Code",
                        "type": "string"
                    }
                }
            },
            "results": {
                "type": "object",
                "properties": {
                    "detailed_info": {
                        "description": "Business Detailed Information",
                        "type": "string"
                    }
                }
            }
        },
        "deposit_product_search": {
            "name": "deposit_product_search",
            "description": "Deposit Product Inquiry",
            "arguments": {
                "type": "object",
                "properties": {
                    "product_type": {
                        "description": "Product Type (Demand Deposit/Time Deposit/Large Certificate of Deposit/)",
                        "type": "string"
                    },
                    "product_rate": {
                        "description": "Product Interest Rate (%)",
                        "type": "number"
                    },
                    "minimum_deposit": {
                        "description": "Minimum Deposit Amount (CNY)",
                        "type": "number"
                    }
                }
            },
            "results": {
                "type": "object",
                "properties": {
                    "product_name": {
                        "type": "string",
                        "description": "Product Name"
                    },
                    "product_type": {
                        "type": "string",
                        "description": "Product Type"
                    },
                    "product_rate": {
                        "type": "number",
                        "description": "Product Interest Rate (%)"
                    },
                    "minimum_deposit": {
                        "type": "number",
                        "description": "Minimum Deposit Amount (CNY)"
                    },
                    "currency": {
                        "type": "string",
                        "description": "Currency"
                    },
                    "term": {
                        "type": "string",
                        "description": "Deposit Term"
                    }
                }
            }
        },
        "fixed_deposit_transaction": {
            "name": "fixed_deposit_transaction",
            "description": "Handling fixed deposit transactions",
            "arguments": {
                "type": "object",
                "properties": {
                    "product_name": {
                        "description": "Product Name",
                        "type": "string"
                    },
                    "transfer_card_number": {
                        "description": "Transfer Card Number",
                        "type": "string"
                    },
                    "amount": {
                        "description": "Amount",
                        "type": "number"
                    },
                    "account": {
                        "description": "Card (Account) Number/Mobile Number/Username",
                        "type": "string"
                    },
                    "password": {
                        "description": "Account Password",
                        "type": "string"
                    },
                    "deposit_term": {
                        "description": "Deposit Term",
                        "type": "string"
                    },
                    "verification_code": {
                        "description": "Verification Code",
                        "type": "string"
                    }
                }
            },
            "results": {
                "type": "object",
                "properties": {
                    "transaction_status": {
                        "description": "Transaction Handling Status",
                        "type": "string"
                    }
                }
            }
        },
        "bank_balance_query": {
            "name": "bank_balance_query",
            "description": "Query the balance information for a specified bank card number",
            "arguments": {
                "type": "object",
                "properties": {
                    "bank_card_number": {
                        "description": "Bank card number",
                        "type": "string",
                        "default": ""
                    }
                }
            },
            "results": {
                "type": "object",
                "properties": {
                    "balance": {
                        "description": "Bank card balance",
                        "type": "number"
                    }
                }
            }
        },
        "del_transaction": {
            "name": "del_transaction",
            "description": "Delete a transaction by transaction ID",
            "arguments": {
                "type": "object",
                "properties": {
                    "transaction_id": {
                        "description": "Transaction ID",
                        "type": "string"
                    }
                }
            },
            "results": {
                "type": "object",
                "properties": {
                    "status": {
                        "description": "Deletion status",
                        "type": "string"
                    }
                }
            }
        },
        "customer_service": {
            "name": "customer_service",
            "description": "Users contact customer service through the platform to submit questions and requests",
            "arguments": {
                "type": "object",
                "properties": {
                    "account_id": {
                        "description": "User account ID",
                        "type": "string"
                    },
                    "content": {
                        "description": "The content of the user's questions and requests",
                        "type": "string"
                    },
                    "merchant_id": {
                        "description": "Merchant ID",
                        "type": "string"
                    }
                }
            },
            "results": {
                "type": "object",
                "properties": {
                    "status": {
                        "description": "Status of the submission",
                        "type": "string"
                    },
                    "response": {
                        "description": "Customer service's reply",
                        "type": "string"
                    }
                }
            }
        },
        "stock_market_trend": {
            "name": "stock_market_trend",
            "description": "Stock Market Trend Analysis Tool",
            "arguments": {
                "type": "object",
                "properties": {
                    "stock_code": {
                        "description": "Stock Code",
                        "type": "string"
                    },
                    "start_date": {
                        "description": "Start Date",
                        "type": "string",
                        "format": "date-time"
                    },
                    "end_date": {
                        "description": "End Date",
                        "type": "string",
                        "format": "date-time"
                    },
                    "historical_data": {
                        "type": "string",
                        "description": "Stock Historical Data"
                    },
                    "external_information": {
                        "type": "string",
                        "description": "External Information That May Affect the Stock Market"
                    }
                }
            },
            "results": {
                "type": "object",
                "properties": {
                    "trend": {
                        "description": "Stock Market Trend",
                        "type": "string"
                    }
                }
            }
        },
        "stock_trend_predictor": {
            "name": "stock_trend_predictor",
            "description": "Stock Market Trend Prediction Tool",
            "arguments": {
                "type": "object",
                "properties": {
                    "stock_code": {
                        "description": "Stock Code",
                        "type": "string"
                    },
                    "start_time": {
                        "description": "Start Time",
                        "type": "string"
                    },
                    "end_time": {
                        "description": "End Time",
                        "type": "string"
                    }
                }
            },
            "results": {
                "type": "object",
                "properties": {
                    "trend": {
                        "description": "Stock Market Trend",
                        "enum": [
                            "Rising",
                            "Falling",
                            "Stable"
                        ]
                    }
                }
            }
        },
        "credit_card_progress": {
            "name": "credit_card_progress",
            "description": "Query the progress of credit card application/handling",
            "arguments": {
                "type": "object",
                "properties": {
                    "name": {
                        "description": "Name",
                        "type": "string"
                    },
                    "id_type": {
                        "description": "Type of Identification",
                        "type": "string"
                    },
                    "id_number": {
                        "description": "Identification Number",
                        "type": "string"
                    },
                    "verification_code": {
                        "description": "Verification Code",
                        "type": "string"
                    }
                }
            },
            "results": {
                "type": "object",
                "properties": {
                    "status": {
                        "description": "Application Status",
                        "type": "string"
                    },
                    "progress_details": {
                        "description": "Progress Details",
                        "type": "string"
                    }
                }
            }
        },
        "special_foreign_currency_purchase": {
            "name": "special_foreign_currency_purchase",
            "description": "A tool for purchasing foreign currency at the current exchange rate, limited to US dollars, Euros, and Australian dollars",
            "arguments": {
                "type": "object",
                "properties": {
                    "currency_type": {
                        "description": "Currency type",
                        "type": "string",
                        "enum": [
                            "US dollar",
                            "Euro",
                            "Australian dollar"
                        ]
                    },
                    "purchased_amount": {
                        "description": "Amount purchased",
                        "type": "number"
                    },
                    "account_balance": {
                        "description": "Account balance",
                        "type": "number"
                    }
                }
            },
            "results": {
                "type": "object",
                "properties": {
                    "purchased_status": {
                        "description": "Purchase information",
                        "type": "string"
                    }
                }
            }
        },
        "archive_file_tool": {
            "name": "archive_file_tool",
            "description": "File Archiving Tool",
            "arguments": {
                "type": "object",
                "properties": {
                    "filePath": {
                        "type": "string",
                        "description": "The path of the file or folder to be archived"
                    },
                    "archivePath": {
                        "type": "string",
                        "description": "The path where the archived file will be stored"
                    },
                    "archiveType": {
                        "type": "string",
                        "description": "The type of the archive file (e.g., zip, rar, etc.)"
                    }
                }
            },
            "results": {
                "type": "object",
                "properties": {
                    "archiveStatus": {
                        "type": "boolean",
                        "description": "Whether the archiving operation was successful"
                    },
                    "archiveFilePath": {
                        "type": "string",
                        "description": "The full path of the archived file"
                    }
                }
            }
        },
        "internal_person_search": {
            "name": "internal_person_search",
            "description": "Internal Staff Information Query Tool",
            "arguments": {
                "type": "object",
                "properties": {
                    "name": {
                        "description": "Employee name, must be two to four characters",
                        "type": "string"
                    },
                    "mobile": {
                        "description": "Employee mobile number, must start with 1 and be 11 digits long",
                        "type": "integer",
                        "example": 13312340987
                    },
                    "level": {
                        "description": "Employee level, can only query employees between levels 10 to 20",
                        "type": "integer",
                        "example": 16
                    },
                    "firstOrganization": {
                        "description": "Employee's first-level department",
                        "type": "string"
                    },
                    "secondOrganization": {
                        "description": "Employee's second-level department",
                        "type": "string"
                    },
                    "thirdOrganization": {
                        "description": "Employee's third-level department",
                        "type": "string"
                    },
                    "fourthOrganization": {
                        "description": "Employee's fourth-level department",
                        "type": "string"
                    }
                }
            },
            "results": {
                "type": "object",
                "properties": {
                    "person_info": {
                        "description": "Internal Staff Information",
                        "type": "object"
                    }
                }
            }
        },
        "get_last_login_info": {
            "name": "get_last_login_info",
            "description": "Get the account's last login time and location record",
            "arguments": {
                "type": "object",
                "properties": {
                    "account_id": {
                        "type": "integer",
                        "description": "Account ID"
                    }
                }
            },
            "results": {
                "type": "object",
                "properties": {
                    "last_login_time": {
                        "type": "string",
                        "description": "Time of the last login"
                    },
                    "last_login_ip": {
                        "type": "string",
                        "description": "IP address of the last login"
                    }
                }
            }
        },
        "currency_exchange_rate": {
            "name": "currency_exchange_rate",
            "description": "Query the current exchange rate of a currency pair",
            "arguments": {
                "type": "object",
                "properties": {
                    "currency_from": {
                        "description": "Source currency type",
                        "type": "string"
                    },
                    "currency_to": {
                        "description": "Target currency type",
                        "type": "string"
                    }
                }
            },
            "results": {
                "type": "object",
                "properties": {
                    "exchange_rate": {
                        "description": "Current market exchange rate",
                        "type": "number"
                    }
                }
            }
        },
        "foreign_currency_exchange": {
            "name": "foreign_currency_exchange",
            "description": "Foreign Currency Exchange Tool",
            "arguments": {
                "type": "object",
                "properties": {
                    "amount": {
                        "description": "Amount to be exchanged",
                        "type": "integer"
                    },
                    "sourceCurrency": {
                        "description": "Source currency type",
                        "type": "string"
                    },
                    "targetCurrency": {
                        "description": "Target currency type",
                        "type": "string"
                    },
                    "rate": {
                        "description": "Exchange rate",
                        "type": "number"
                    }
                }
            },
            "results": {
                "type": "object",
                "properties": {
                    "exchangedAmount": {
                        "description": "Amount after exchange",
                        "type": "number"
                    }
                }
            }
        },
        "credit_card_repayment": {
            "name": "credit_card_repayment",
            "description": "Credit Card Repayment",
            "arguments": {
                "type": "object",
                "properties": {
                    "overdraft_card_number": {
                        "description": "Overdraft Card Number",
                        "type": "string"
                    },
                    "repayment_amount": {
                        "description": "Repayment Amount",
                        "type": "number"
                    },
                    "payment_card_number": {
                        "description": "Payment Card Number",
                        "type": "string"
                    },
                    "currency": {
                        "description": "Currency",
                        "type": "string"
                    }
                }
            },
            "results": {
                "type": "object",
                "properties": {
                    "confirmation": {
                        "description": "Repayment Confirmation Information",
                        "type": "string"
                    }
                }
            }
        },
        "confirm_appointment": {
            "name": "confirm_appointment",
            "description": "Confirm appointment information",
            "arguments": {
                "type": "object",
                "properties": {
                    "requestID": {
                        "type": "string",
                        "description": "Maintenance request number"
                    },
                    "confirmation": {
                        "description": "Whether to confirm the appointment",
                        "type": "string",
                        "enum": [
                            "Yes",
                            "No"
                        ]
                    },
                    "date": {
                        "type": "string",
                        "description": "Appointment date"
                    },
                    "time": {
                        "type": "string",
                        "description": "Appointment time"
                    },
                    "technician_name": {
                        "type": "string",
                        "description": "Technician's name"
                    },
                    "contact_method": {
                        "type": "string",
                        "description": "User's contact method"
                    },
                    "company": {
                        "type": "string",
                        "description": "Maintenance company name"
                    },
                    "serviceAddress": {
                        "type": "string",
                        "description": "Service address"
                    },
                    "toolList": {
                        "type": "array",
                        "description": "List of tools the technician needs to carry",
                        "items": {
                            "type": "string"
                        }
                    }
                }
            },
            "results": {
                "type": "object",
                "properties": {
                    "confirmation_details": {
                        "description": "Appointment confirmation details",
                        "type": "string"
                    },
                    "confirmation_status": {
                        "description": "Appointment confirmation status",
                        "type": "string"
                    },
                    "appointment_status": {
                        "description": "Appointment status",
                        "type": "string"
                    },
                    "arrival_time": {
                        "type": "string",
                        "description": "Estimated technician arrival time"
                    }
                }
            }
        },
        "cash_withdrawal_reservation": {
            "name": "cash_withdrawal_reservation",
            "description": "RMB cash withdrawal reservation tool",
            "arguments": {
                "type": "object",
                "properties": {
                    "withdrawal_type": {
                        "description": "Withdrawal type (large amount/new notes/small change)",
                        "type": "string"
                    },
                    "pickup_branch": {
                        "description": "Pickup branch",
                        "type": "string"
                    },
                    "pickup_date": {
                        "description": "Pickup date",
                        "type": "string",
                        "format": "date"
                    },
                    "withdrawal_account": {
                        "description": "Withdrawal account",
                        "type": "string"
                    },
                    "amount": {
                        "description": "Amount",
                        "type": "integer"
                    },
                    "business_notice": {
                        "description": "Business notice",
                        "type": "boolean"
                    }
                }
            },
            "results": {
                "type": "object",
                "properties": {
                    "reservation_status": {
                        "description": "Reservation status",
                        "type": "string"
                    }
                }
            }
        },
        "company_credit_check": {
            "name": "company_credit_check",
            "description": "Enterprise Credit Inquiry Tool",
            "arguments": {
                "type": "object",
                "properties": {
                    "companyName": {
                        "description": "The name of the company being queried",
                        "type": "string"
                    },
                    "country": {
                        "description": "The country or region where the enterprise is located",
                        "type": "string"
                    },
                    "checkDate": {
                        "description": "The date of inquiry",
                        "type": "string",
                        "format": "date-time"
                    },
                    "reportingPeriod": {
                        "description": "Reporting period",
                        "type": "string"
                    },
                    "region": {
                        "description": "The region where the company is located",
                        "type": "string"
                    },
                    "checkType": {
                        "description": "Type of inquiry, conducting queries around various aspects of enterprise credit",
                        "enum": [
                            "financial",
                            "legal",
                            "business"
                        ],
                        "type": "string"
                    }
                }
            },
            "results": {
                "type": "object",
                "properties": {
                    "credit_score": {
                        "description": "The credit score of the enterprise",
                        "type": "integer"
                    },
                    "credit_rating": {
                        "description": "Credit rating of the enterprise",
                        "type": "string"
                    },
                    "credit_status": {
                        "description": "The credit status of the enterprise being queried",
                        "type": "string"
                    }
                }
            }
        },
        "enterprise_credit_search": {
            "name": "enterprise_credit_search",
            "description": "Enterprise Credit Rating Query Tool",
            "arguments": {
                "type": "object",
                "properties": {
                    "companyName": {
                        "description": "Name of the company",
                        "type": "string"
                    },
                    "fiscalYear": {
                        "description": "Fiscal year",
                        "type": "string"
                    },
                    "sector": {
                        "description": "Industry sector of the company",
                        "type": "string"
                    }
                }
            },
            "results": {
                "type": "object",
                "properties": {
                    "credit_rating": {
                        "description": "Credit rating of the company",
                        "type": "string"
                    }
                }
            }
        },
        "enterprise_credit_assessment": {
            "name": "enterprise_credit_assessment",
            "description": "Enterprise Credit Assessment Tool",
            "arguments": {
                "type": "object",
                "properties": {
                    "enterpriseName": {
                        "description": "Enterprise Name",
                        "type": "string"
                    },
                    "evaluationDate": {
                        "description": "Evaluation Date",
                        "type": "string"
                    },
                    "industryType": {
                        "description": "Industry Type",
                        "type": "string"
                    }
                }
            },
            "results": {
                "type": "object",
                "properties": {
                    "credit_score": {
                        "description": "Enterprise Credit Score",
                        "type": "integer"
                    }
                }
            }
        },
        "domestic_remittance": {
            "name": "domestic_remittance",
            "description": "Make a single remittance to a designated domestic account",
            "arguments": {
                "type": "object",
                "properties": {
                    "payee_name": {
                        "description": "Payee Name",
                        "type": "string"
                    },
                    "payee_card_number": {
                        "description": "Payee Card Number",
                        "type": "string"
                    },
                    "payee_bank": {
                        "description": "Payee Bank",
                        "type": "string"
                    },
                    "remittance_amount": {
                        "description": "Remittance Amount",
                        "type": "number"
                    },
                    "remittance_method": {
                        "description": "Remittance Method (Instant/Regular/Next Day)",
                        "type": "string"
                    },
                    "payer_card_number": {
                        "description": "Payer Card Number",
                        "type": "string"
                    },
                    "postscript": {
                        "description": "Postscript (Optional)",
                        "type": "string"
                    },
                    "sms_notification": {
                        "description": "SMS Notification (Optional)",
                        "type": "string"
                    }
                }
            },
            "results": {
                "type": "object",
                "properties": {
                    "transaction_id": {
                        "description": "Transaction ID",
                        "type": "string"
                    },
                    "status": {
                        "description": "Remittance Status",
                        "type": "string"
                    },
                    "timestamp": {
                        "description": "Transaction Timestamp",
                        "type": "string"
                    }
                }
            }
        },
        "complaint_merchant": {
            "name": "complaint_merchant",
            "description": "Users complain about merchants to customer service through the platform",
            "arguments": {
                "type": "object",
                "properties": {
                    "account_id": {
                        "description": "User Account ID",
                        "type": "string"
                    },
                    "merchant_id": {
                        "description": "Merchant ID",
                        "type": "string"
                    },
                    "content": {
                        "description": "Content of the complaint",
                        "type": "string"
                    }
                }
            },
            "results": {
                "type": "object",
                "properties": {
                    "status": {
                        "description": "Status of the complaint",
                        "type": "string"
                    },
                    "response": {
                        "description": "Customer service response",
                        "type": "string"
                    }
                }
            }
        },
        "get_refund_transaction_details": {
            "name": "get_refund_transaction_details",
            "description": "Retrieve detailed information of refund transactions between a specified account and merchant within a specified time frame",
            "arguments": {
                "type": "object",
                "properties": {
                    "account_id": {
                        "type": "string",
                        "description": "User Account ID"
                    },
                    "merchant_id": {
                        "type": "string",
                        "description": "Merchant ID"
                    },
                    "transaction_time": {
                        "type": "string",
                        "description": "Transaction Time",
                        "format": "date-time"
                    }
                }
            },
            "results": {
                "type": "object",
                "properties": {
                    "status": {
                        "type": "string",
                        "description": "Status of the information retrieval"
                    },
                    "transaction_details": {
                        "type": "string",
                        "description": "Detailed information of the refund transaction"
                    }
                }
            }
        },
        "flight_price_query": {
            "name": "flight_price_query",
            "description": "Query flight price information for a specific time range from departure to destination",
            "arguments": {
                "type": "object",
                "properties": {
                    "departure": {
                        "type": "string",
                        "description": "Departure location"
                    },
                    "destination": {
                        "type": "string",
                        "description": "Destination"
                    },
                    "time_range": {
                        "type": "string",
                        "description": "Time range for the query"
                    }
                }
            },
            "results": {
                "type": "object",
                "properties": {
                    "flights": {
                        "type": "array",
                        "description": "List of flights",
                        "items": {
                            "type": "object",
                            "properties": {
                                "flight_number": {
                                    "type": "string",
                                    "description": "Flight number"
                                },
                                "price": {
                                    "type": "number",
                                    "description": "Price"
                                },
                                "departure_time": {
                                    "type": "string",
                                    "description": "Departure time"
                                },
                                "arrival_time": {
                                    "type": "string",
                                    "description": "Arrival time"
                                }
                            }
                        }
                    }
                }
            }
        },
        "company_credit_score": {
            "name": "company_credit_score",
            "description": "Corporate Credit Scoring Tool",
            "arguments": {
                "type": "object",
                "properties": {
                    "companyName": {
                        "description": "Company Name",
                        "type": "string"
                    },
                    "industry": {
                        "description": "Industry Type",
                        "type": "string"
                    },
                    "establishmentDate": {
                        "description": "Establishment Date",
                        "type": "string"
                    }
                }
            },
            "results": {
                "type": "object",
                "properties": {
                    "credit_score": {
                        "description": "Corporate Credit Score",
                        "type": "integer"
                    }
                }
            }
        },
        "exchange_rate_query": {
            "name": "exchange_rate_query",
            "description": "Query the latest exchange rate for a specific currency",
            "arguments": {
                "type": "object",
                "properties": {
                    "currency_type": {
                        "type": "string",
                        "description": "The type of currency for which the exchange rate is being queried"
                    }
                }
            },
            "results": {
                "type": "object",
                "properties": {
                    "exchange_rate": {
                        "type": "number",
                        "description": "The exchange rate of the current currency"
                    }
                }
            }
        },
        "currency_conversion": {
            "name": "currency_conversion",
            "description": "Currency Conversion Tool",
            "arguments": {
                "type": "object",
                "properties": {
                    "amount": {
                        "description": "Amount to be converted",
                        "type": "integer"
                    },
                    "from_currency": {
                        "description": "Original currency type (e.g., USD, CNY, etc.)",
                        "type": "string"
                    },
                    "to_currency": {
                        "description": "Target currency type (e.g., EUR, JPY, etc.)",
                        "type": "string"
                    },
                    "exchange_rate": {
                        "type": "number",
                        "description": "Current exchange rate of foreign currency"
                    },
                    "date": {
                        "type": "string",
                        "description": "The date of the exchange rate query, must be a past date",
                        "format": "date-time",
                        "example": "2022-01-01"
                    }
                }
            },
            "results": {
                "type": "object",
                "properties": {
                    "conversion_result": {
                        "description": "Result after conversion",
                        "type": "number"
                    },
                    "exchange_status": {
                        "type": "string",
                        "description": "Information on whether the exchange was successful"
                    },
                    "date": {
                        "type": "string",
                        "description": "Date of the exchange rate used",
                        "format": "date-time"
                    }
                }
            }
        },
        "check_delivery_status": {
            "name": "check_delivery_status",
            "description": "Check the delivery status of a specified order number",
            "arguments": {
                "type": "object",
                "properties": {
                    "order_id": {
                        "type": "string",
                        "description": "The order number for which to check the delivery status"
                    }
                }
            },
            "results": {
                "type": "object",
                "properties": {
                    "status": {
                        "description": "Delivery status",
                        "type": "string"
                    }
                }
            }
        },
        "find_transaction": {
            "name": "find_transaction",
            "description": "Find transaction records based on account ID and transaction information",
            "arguments": {
                "type": "object",
                "properties": {
                    "transaction_time": {
                        "type": "string",
                        "description": "Transaction time"
                    },
                    "amount": {
                        "type": "integer",
                        "description": "Transaction amount"
                    },
                    "account_id": {
                        "type": "string",
                        "description": "User account ID"
                    },
                    "merchant_name": {
                        "type": "string",
                        "description": "Merchant name"
                    },
                    "merchant_id": {
                        "type": "string",
                        "description": "Merchant ID"
                    }
                }
            },
            "results": {
                "type": "object",
                "properties": {
                    "transaction_id": {
                        "description": "Found transaction ID",
                        "type": "string"
                    }
                }
            }
        },
        "precious_metals_quotes_search": {
            "name": "precious_metals_quotes_search",
            "description": "Precious Metals Quotation Search Tool",
            "arguments": {
                "type": "object",
                "properties": {
                    "metalsType": {
                        "description": "Type of precious metal",
                        "type": "string"
                    }
                }
            },
            "results": {
                "type": "object",
                "properties": {
                    "current_price": {
                        "description": "Current price",
                        "type": "number"
                    },
                    "day_change": {
                        "description": "Daily change",
                        "type": "number"
                    },
                    "week_change": {
                        "description": "Weekly change",
                        "type": "number"
                    },
                    "month_change": {
                        "description": "Monthly change",
                        "type": "number"
                    },
                    "year_change": {
                        "description": "Annual change",
                        "type": "number"
                    }
                }
            }
        },
        "contract_content_search": {
            "name": "contract_content_search",
            "description": "Contract Content Retrieval Tool",
            "arguments": {
                "type": "object",
                "properties": {
                    "input": {
                        "description": "User Input",
                        "type": "string"
                    },
                    "contractType": {
                        "description": "Contract Type",
                        "type": "string"
                    },
                    "contractName": {
                        "description": "Contract Name",
                        "type": "string"
                    },
                    "subContractName": {
                        "description": "Subcontract Name",
                        "type": "string"
                    }
                }
            },
            "results": {
                "type": "object",
                "properties": {
                    "contract_content": {
                        "description": "Contract Content",
                        "type": "string"
                    }
                }
            }
        },
        "insurance_product_search": {
            "name": "insurance_product_search",
            "description": "Insurance Product Query Tool",
            "arguments": {
                "type": "object",
                "properties": {
                    "insuranceCompany": {
                        "description": "Insurance Company Name",
                        "type": "string"
                    },
                    "productCategory": {
                        "description": "Product Category",
                        "type": "string"
                    },
                    "paymentMethod": {
                        "description": "Payment Method",
                        "type": "string"
                    },
                    "paymentPeriod": {
                        "description": "Payment Period",
                        "type": "integer"
                    },
                    "insurancePeriod": {
                        "description": "Insurance Period",
                        "type": "integer"
                    },
                    "targetAudience": {
                        "description": "Target Customer Group",
                        "type": "string"
                    }
                }
            },
            "results": {
                "type": "object",
                "properties": {
                    "insurance_product_info": {
                        "description": "Insurance Product Information",
                        "type": "array",
                        "items": {
                            "properties": {
                                "productName": {
                                    "description": "Product Name",
                                    "type": "string"
                                },
                                "productBenefits": {
                                    "description": "Product Benefits",
                                    "type": "string"
                                },
                                "productPremium": {
                                    "description": "Product Premium",
                                    "type": "number"
                                }
                            }
                        }
                    }
                }
            }
        },
        "insurance_customer_update": {
            "name": "insurance_customer_update",
            "description": "Update insurance customer's personal information",
            "arguments": {
                "type": "object",
                "properties": {
                    "customerID": {
                        "description": "Customer ID",
                        "type": "string"
                    },
                    "newAddress": {
                        "description": "New address",
                        "type": "string"
                    },
                    "newPhoneNumber": {
                        "description": "New phone number",
                        "type": "string"
                    },
                    "newEmail": {
                        "description": "New email address",
                        "type": "string"
                    }
                }
            },
            "results": {
                "type": "object",
                "properties": {
                    "updateStatus": {
                        "description": "Update status",
                        "type": "string"
                    }
                }
            }
        },
        "price_comparison_tool": {
            "name": "price_comparison_tool",
            "description": "Product price query and comparison tool",
            "arguments": {
                "type": "object",
                "properties": {
                    "productID1": {
                        "description": "Product identification code 1",
                        "type": "string"
                    },
                    "productID2": {
                        "description": "Product identification code 2",
                        "type": "string"
                    },
                    "productID": {
                        "description": "Unique product identification code",
                        "type": "string"
                    },
                    "date1": {
                        "description": "Date 1",
                        "type": "string"
                    },
                    "date2": {
                        "description": "Date 2",
                        "type": "string"
                    },
                    "price1": {
                        "description": "Price 1",
                        "type": "string"
                    },
                    "price2": {
                        "description": "Price 2",
                        "type": "string"
                    },
                    "storeName1": {
                        "description": "Store name 1",
                        "type": "string"
                    },
                    "storeName2": {
                        "description": "Store name 2",
                        "type": "string"
                    },
                    "storeName": {
                        "description": "Store name",
                        "type": "string"
                    },
                    "date": {
                        "description": "Query date",
                        "type": "string"
                    }
                }
            },
            "results": {
                "type": "object",
                "properties": {
                    "price": {
                        "description": "Product price",
                        "type": "number"
                    },
                    "lowestStore": {
                        "description": "Store name with the lowest price",
                        "type": "string"
                    }
                }
            }
        },
        "mortgage_calculator_tool": {
            "name": "mortgage_calculator_tool",
            "description": "A tool for calculating mortgage loans, capable of computing both equal principal and equal repayment methods",
            "arguments": {
                "type": "object",
                "properties": {
                    "loanAmount": {
                        "type": "number",
                        "description": "Total loan amount, unit: Yuan",
                        "example": 1000000
                    },
                    "loanTerm": {
                        "type": "integer",
                        "description": "Loan term, unit: years",
                        "example": 20
                    },
                    "annualInterestRate": {
                        "type": "number",
                        "description": "Annual interest rate, unit: %, please represent 4.9% as 4.9",
                        "example": 4.9
                    },
                    "repaymentMethod": {
                        "type": "string",
                        "description": "Repayment method, options are \"Equal principal\" and \"Equal repayment\"",
                        "enum": [
                            "Equal principal",
                            "Equal repayment"
                        ]
                    }
                }
            },
            "results": {
                "type": "object",
                "properties": {
                    "monthlyPayment": {
                        "type": "array",
                        "description": "Monthly repayment amount, each element in the array represents the repayment amount for one month, unit: Yuan"
                    },
                    "totalPayment": {
                        "type": "number",
                        "description": "Total repayment amount, unit: Yuan"
                    },
                    "totalInterest": {
                        "type": "number",
                        "description": "Total interest paid, unit: Yuan"
                    }
                }
            }
        },
        "professional_photography_tips": {
            "name": "professional_photography_tips",
            "description": "A tool providing photography techniques, including the effects of different lighting, composition tips, color matching suggestions, and camera settings",
            "arguments": {
                "type": "object",
                "properties": {
                    "lighting_conditions": {
                        "description": "Description of lighting conditions, such as strong sunlight, dim light, indoor lighting, etc.",
                        "type": "string",
                        "enum": [
                            "strong sunlight",
                            "dim light",
                            "indoor lighting",
                            "natural light"
                        ]
                    },
                    "scene": {
                        "description": "Type of scene, such as landscape, city, indoors, animals, etc.",
                        "type": "string"
                    },
                    "burst_mode": {
                        "description": "Whether to use burst mode",
                        "type": "boolean"
                    },
                    "iso": {
                        "description": "ISO value",
                        "type": "string"
                    },
                    "shutter_speed": {
                        "description": "Shutter speed",
                        "type": "string"
                    },
                    "color_match": {
                        "description": "Color matching requirements, such as bright, soft, black and white, etc.",
                        "type": "string",
                        "enum": [
                            "bright",
                            "soft",
                            "black and white",
                            "colorful"
                        ]
                    },
                    "camera_settings": {
                        "description": "Camera setting requirements, such as automatic, manual, depth of field, etc.",
                        "type": "string",
                        "enum": [
                            "automatic",
                            "manual",
                            "depth of field"
                        ]
                    }
                }
            },
            "results": {
                "type": "object",
                "properties": {
                    "photography_tips": {
                        "description": "Photography techniques",
                        "type": "string"
                    }
                }
            }
        },
        "investment_portfolio_builder": {
            "name": "investment_portfolio_builder",
            "description": "A tool for building investment portfolios, suitable for stocks, bonds, money market securities, commodity futures, and foreign exchange investments",
            "arguments": {
                "type": "object",
                "properties": {
                    "investment_type": {
                        "description": "Type of investment",
                        "type": "string",
                        "enum": [
                            "stocks",
                            "bonds",
                            "money market securities",
                            "commodity futures",
                            "foreign exchange"
                        ]
                    },
                    "investment_amount": {
                        "description": "Amount of investment",
                        "type": "number"
                    },
                    "risk_tolerance": {
                        "description": "Risk tolerance",
                        "type": "string",
                        "enum": [
                            "conservative",
                            "moderate",
                            "aggressive"
                        ]
                    },
                    "investment_period": {
                        "description": "Investment period, in years",
                        "type": "integer",
                        "format": "int32",
                        "example": 3
                    },
                    "expected_return_rate": {
                        "description": "Expected annualized return rate, e.g., 0.05 represents 5%",
                        "type": "number",
                        "example": 0.05
                    }
                }
            },
            "results": {
                "type": "object",
                "properties": {
                    "portfolio": {
                        "description": "Investment portfolio information",
                        "type": "string"
                    }
                }
            }
        },
        "parenting_advice_tool": {
            "name": "parenting_advice_tool",
            "description": "Parenting Guidance Tool",
            "arguments": {
                "type": "object",
                "properties": {
                    "parent_age": {
                        "description": "Parent's age, only accepts numbers between 20 to 60",
                        "type": "integer"
                    },
                    "parent_education": {
                        "description": "Parent's educational level, can be 'primary school', 'junior high school', 'high school', 'university' or 'postgraduate'",
                        "type": "string",
                        "enum": [
                            "primary school",
                            "junior high school",
                            "high school",
                            "university",
                            "postgraduate"
                        ]
                    },
                    "child_age": {
                        "description": "Child's age, only accepts numbers between 0 to 18",
                        "type": "integer",
                        "format": "integer"
                    },
                    "child_sex": {
                        "description": "Child's sex, only accepts 'male' or 'female'",
                        "type": "string",
                        "enum": [
                            "male",
                            "female"
                        ]
                    },
                    "parent_sex": {
                        "description": "Parent's sex, only accepts 'male' or 'female'",
                        "type": "string",
                        "enum": [
                            "male",
                            "female"
                        ]
                    },
                    "issue": {
                        "description": "Guidance issue, must be 5 to 200 characters long",
                        "type": "string"
                    }
                }
            },
            "results": {
                "type": "object",
                "properties": {
                    "advice": {
                        "description": "Parenting guidance advice",
                        "type": "string"
                    }
                }
            }
        },
        "generate_kline_chart": {
            "name": "generate_kline_chart",
            "description": "Generate and display the K-line trend chart",
            "arguments": {
                "type": "object",
                "properties": {
                    "kline_data": {
                        "type": "string",
                        "description": "K-line data"
                    },
                    "title": {
                        "type": "string",
                        "description": "Chart title"
                    },
                    "x_label": {
                        "type": "string",
                        "description": "X-axis label"
                    },
                    "y_label": {
                        "type": "string",
                        "description": "Y-axis label"
                    },
                    "legend": {
                        "type": "string",
                        "description": "Legend"
                    }
                }
            },
            "results": {
                "type": "object",
                "properties": {
                    "chart": {
                        "description": "Generated K-line chart",
                        "type": "string"
                    }
                }
            }
        },
        "receive_and_input_verification_code": {
            "name": "receive_and_input_verification_code",
            "description": "Receive and input verification code to complete verification",
            "arguments": {
                "type": "object",
                "properties": {
                    "phone_number": {
                        "type": "string",
                        "description": "The mobile number to receive the verification code"
                    }
                }
            },
            "results": {
                "type": "object",
                "properties": {
                    "verification_code": {
                        "type": "string",
                        "description": "The received verification code"
                    },
                    "input_status": {
                        "type": "string",
                        "description": "Verification code input status"
                    }
                }
            }
        }
    },
    "Tracking": {
        "hotel_booking_query": {
            "name": "hotel_booking_query",
            "description": "Hotel Booking Inquiry Tool",
            "arguments": {
                "type": "object",
                "properties": {
                    "checkInDate": {
                        "description": "Expected Check-in Date",
                        "type": "string"
                    },
                    "checkOutDate": {
                        "description": "Expected Check-out Date",
                        "type": "string"
                    },
                    "hotelName": {
                        "description": "Hotel Name",
                        "type": "string"
                    },
                    "confirmation_number": {
                        "description": "Booking Confirmation Number",
                        "type": "string"
                    },
                    "hotel_id": {
                        "type": "string",
                        "description": "Hotel Identifier ID"
                    },
                    "room_type": {
                        "type": "string",
                        "description": "Room Type"
                    },
                    "number_of_rooms": {
                        "type": "integer",
                        "description": "Number of Rooms Inquired"
                    }
                }
            },
            "results": {
                "type": "object",
                "properties": {
                    "availability": {
                        "description": "Booking Availability",
                        "type": "boolean"
                    },
                    "order_details": {
                        "type": "object",
                        "description": "Booking Order Details",
                        "properties": {
                            "customer_name": {
                                "description": "Customer Name",
                                "type": "string"
                            },
                            "hotel_id": {
                                "description": "Hotel Identifier ID",
                                "type": "string"
                            },
                            "check_in": {
                                "description": "Check-in Date",
                                "type": "string",
                                "format": "date"
                            },
                            "check_out": {
                                "description": "Check-out Date",
                                "type": "string",
                                "format": "date"
                            },
                            "room_type": {
                                "description": "Room Type",
                                "type": "string"
                            },
                            "number_of_rooms": {
                                "description": "Number of Rooms",
                                "type": "integer"
                            },
                            "status": {
                                "description": "Order Status",
                                "type": "string"
                            }
                        }
                    },
                    "availability_status": {
                        "type": "string",
                        "description": "Room Availability Status"
                    }
                }
            }
        },
        "geolocation_tracker": {
            "name": "geolocation_tracker",
            "description": "Geolocation Tracking Tool",
            "arguments": {
                "type": "object",
                "properties": {
                    "deviceID": {
                        "description": "The unique identifier of the device",
                        "type": "string"
                    },
                    "startTime": {
                        "description": "The start time of tracking",
                        "type": "string"
                    },
                    "endTime": {
                        "description": "The end time of tracking",
                        "type": "string"
                    }
                }
            },
            "results": {
                "type": "object",
                "properties": {
                    "location_data": {
                        "description": "Geographical location data of the device within the specified time period",
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "lat": {
                                    "type": "number",
                                    "description": "Latitude"
                                },
                                "lon": {
                                    "type": "number",
                                    "description": "Longitude"
                                },
                                "timestamp": {
                                    "type": "string",
                                    "description": "The time when the location was captured"
                                }
                            }
                        }
                    }
                }
            }
        },
        "visualize_location_data": {
            "name": "visualize_location_data",
            "description": "Convert geographic location data into a visual map",
            "arguments": {
                "type": "object",
                "properties": {
                    "location_data": {
                        "type": "array",
                        "description": "Device movement route data",
                        "items": {
                            "type": "object",
                            "properties": {
                                "lat": {
                                    "type": "number",
                                    "description": "Latitude"
                                },
                                "lon": {
                                    "type": "number",
                                    "description": "Longitude"
                                },
                                "timestamp": {
                                    "type": "string",
                                    "description": "Time when the location was captured"
                                }
                            }
                        }
                    }
                }
            },
            "results": {
                "type": "object",
                "properties": {
                    "visualization": {
                        "description": "Generated visual map",
                        "type": "string"
                    }
                }
            }
        },
        "create_movement_report": {
            "name": "create_movement_report",
            "description": "Create a report based on device movement trajectory data",
            "arguments": {
                "type": "object",
                "properties": {
                    "location_data": {
                        "type": "array",
                        "description": "Device movement trajectory data",
                        "items": {
                            "type": "object",
                            "properties": {
                                "lat": {
                                    "type": "number",
                                    "description": "Latitude"
                                },
                                "lon": {
                                    "type": "number",
                                    "description": "Longitude"
                                },
                                "timestamp": {
                                    "type": "string",
                                    "description": "Time when the location was captured"
                                }
                            }
                        }
                    }
                }
            },
            "results": {
                "type": "object",
                "properties": {
                    "report": {
                        "description": "Generated movement trajectory report",
                        "type": "string"
                    }
                }
            }
        },
        "package_status_tracker": {
            "name": "package_status_tracker",
            "description": "Express package status tracking tool",
            "arguments": {
                "type": "object",
                "properties": {
                    "tracking_number": {
                        "description": "Express tracking number",
                        "type": "string"
                    },
                    "courier_name": {
                        "description": "Name of the courier company",
                        "type": "string"
                    },
                    "request_date": {
                        "description": "Date and time of the tracking request",
                        "type": "string",
                        "pattern": "^\\d{4}-\\d{2}-\\d{2} \\d{2}:\\d{2}$"
                    },
                    "notificationMethod": {
                        "description": "Notification method",
                        "type": "string"
                    },
                    "expectedDeliveryDate": {
                        "description": "Expected delivery date",
                        "type": "string"
                    }
                }
            },
            "results": {
                "type": "object",
                "properties": {
                    "status": {
                        "description": "Current status of the express package",
                        "type": "string"
                    }
                }
            }
        },
        "package_status_tracking": {
            "name": "package_status_tracking",
            "description": "Package Status Tracking Tool",
            "arguments": {
                "type": "object",
                "properties": {
                    "trackingNumber": {
                        "description": "Package Tracking Number",
                        "type": "string"
                    },
                    "carrierName": {
                        "description": "Carrier Name",
                        "type": "string"
                    },
                    "dateShipped": {
                        "description": "Date and Time of Shipment",
                        "type": "string",
                        "format": "date-time"
                    }
                }
            },
            "results": {
                "type": "object",
                "properties": {
                    "currentLocation": {
                        "description": "Current Location of the Package",
                        "type": "string"
                    },
                    "currentStatus": {
                        "description": "Current Status of the Package",
                        "type": "string"
                    }
                }
            }
        },
        "vehicle_tracker": {
            "name": "vehicle_tracker",
            "description": "Vehicle Tracking Tool",
            "arguments": {
                "type": "object",
                "properties": {
                    "vehicleId": {
                        "description": "Vehicle ID",
                        "type": "string"
                    },
                    "startTime": {
                        "description": "Start Tracking Time",
                        "type": "string"
                    },
                    "stopTime": {
                        "description": "Stop Tracking Time",
                        "type": "string"
                    },
                    "vehicleNumber": {
                        "description": "Vehicle License Plate Number",
                        "type": "string"
                    },
                    "duration": {
                        "description": "Tracking Duration (hours)",
                        "type": "integer"
                    }
                }
            },
            "results": {
                "type": "object",
                "properties": {
                    "location_history": {
                        "description": "Vehicle Location Tracking History",
                        "type": "array"
                    },
                    "location": {
                        "description": "Real-time Location of the Vehicle",
                        "type": "string"
                    }
                }
            }
        },
        "mobile_number_info": {
            "name": "mobile_number_info",
            "description": "Query the location and service provider information of a mobile number",
            "arguments": {
                "type": "object",
                "properties": {
                    "phoneNumber": {
                        "type": "string",
                        "description": "The mobile number to query"
                    }
                }
            },
            "results": {
                "type": "object",
                "properties": {
                    "location": {
                        "type": "string",
                        "description": "The location of the mobile number"
                    },
                    "serviceProvider": {
                        "type": "string",
                        "description": "The service provider of the mobile number"
                    }
                }
            }
        },
        "mobile_number_location": {
            "name": "mobile_number_location",
            "description": "Mobile Number Location Query Tool",
            "arguments": {
                "type": "object",
                "properties": {
                    "mobileNumber": {
                        "description": "Mobile Number",
                        "type": "string"
                    },
                    "serviceProvider": {
                        "description": "Service Provider",
                        "type": "string"
                    },
                    "time": {
                        "description": "Query Time",
                        "type": "string"
                    },
                    "countryCode": {
                        "description": "Country Code",
                        "type": "string"
                    }
                }
            },
            "results": {
                "type": "object",
                "properties": {
                    "location": {
                        "description": "Number Location Information",
                        "type": "string"
                    }
                }
            }
        },
        "mobile_phone_locator": {
            "name": "mobile_phone_locator",
            "description": "Mobile Phone Number Locator Tool",
            "arguments": {
                "type": "object",
                "properties": {
                    "phoneNumber": {
                        "description": "The phone number to be located",
                        "type": "string"
                    },
                    "country": {
                        "description": "The country to which the phone number belongs",
                        "type": "string"
                    },
                    "serviceProvider": {
                        "description": "The service provider of the phone number",
                        "type": "string"
                    }
                }
            },
            "results": {
                "type": "object",
                "properties": {
                    "location": {
                        "description": "The location information of the phone number",
                        "type": "string"
                    }
                }
            }
        },
        "order_tracking": {
            "name": "order_tracking",
            "description": "Order Tracking Tool",
            "arguments": {
                "type": "object",
                "properties": {
                    "orderNumber": {
                        "description": "Order Number",
                        "type": "string"
                    },
                    "customerID": {
                        "description": "Customer ID",
                        "type": "string"
                    },
                    "orderDate": {
                        "description": "Order Date",
                        "type": "string"
                    }
                }
            },
            "results": {
                "type": "object",
                "properties": {
                    "orderStatus": {
                        "description": "Order Status",
                        "type": "string"
                    }
                }
            }
        },
        "delay_delivery": {
            "name": "delay_delivery",
            "description": "Request the courier service provider to postpone the delivery time",
            "arguments": {
                "type": "object",
                "properties": {
                    "trackingNumber": {
                        "type": "string",
                        "description": "Courier tracking number"
                    },
                    "courierCompany": {
                        "type": "string",
                        "description": "Name of the courier company"
                    },
                    "newDeliveryTime": {
                        "type": "string",
                        "description": "New delivery time"
                    }
                }
            },
            "results": {
                "type": "object",
                "properties": {
                    "changeStatus": {
                        "type": "string",
                        "description": "Status of whether the change of delivery time was successful"
                    }
                }
            }
        },
        "visa_status_check": {
            "name": "visa_status_check",
            "description": "Visa Status Inquiry Tool",
            "arguments": {
                "type": "object",
                "properties": {
                    "applicationId": {
                        "description": "Application ID",
                        "type": "integer"
                    },
                    "passportNo": {
                        "description": "Passport Number",
                        "type": "string"
                    },
                    "nationality": {
                        "description": "Nationality",
                        "type": "string"
                    },
                    "birthDate": {
                        "description": "Date of Birth",
                        "type": "string"
                    },
                    "visaType": {
                        "description": "Visa Type",
                        "type": "string"
                    }
                }
            },
            "results": {
                "type": "object",
                "properties": {
                    "application_status": {
                        "description": "Visa Application Status",
                        "type": "string"
                    },
                    "visa_status": {
                        "description": "Visa Status",
                        "type": "string"
                    }
                }
            }
        },
        "product_inventory_search": {
            "name": "product_inventory_search",
            "description": "Product Inventory Search Tool",
            "arguments": {
                "type": "object",
                "properties": {
                    "productID": {
                        "description": "Product ID",
                        "type": "string"
                    },
                    "warehouseID": {
                        "description": "Warehouse ID",
                        "type": "string"
                    },
                    "checkDate": {
                        "description": "Check Date",
                        "type": "string"
                    }
                }
            },
            "results": {
                "type": "object",
                "properties": {
                    "inventory_status": {
                        "description": "Inventory Status",
                        "type": "string"
                    },
                    "product_inventory": {
                        "description": "Product Inventory Quantity",
                        "type": "integer"
                    }
                }
            }
        },
        "product_catalog_create": {
            "name": "product_catalog_create",
            "description": "Product Catalog Creation Tool",
            "arguments": {
                "type": "object",
                "properties": {
                    "productName": {
                        "description": "Product Name",
                        "type": "string"
                    },
                    "productPrice": {
                        "description": "Product Price",
                        "type": "integer"
                    },
                    "launchDate": {
                        "description": "Product Launch Date",
                        "type": "string",
                        "pattern": "^\\d{4}-\\d{2}-\\d{2} \\d{2}:\\d{2}$"
                    },
                    "category": {
                        "description": "Product Category",
                        "type": "string"
                    }
                }
            },
            "results": {
                "type": "object",
                "properties": {
                    "catalogId": {
                        "description": "Product Catalog ID",
                        "type": "integer"
                    },
                    "catalog": {
                        "description": "Generated Product Catalog",
                        "type": "string"
                    }
                }
            }
        },
        "export_to_pdf": {
            "name": "export_to_pdf",
            "description": "Export document content to PDF format",
            "arguments": {
                "type": "object",
                "properties": {
                    "documentName": {
                        "type": "string",
                        "description": "The name of the document to be exported to PDF"
                    },
                    "document_content": {
                        "type": "string",
                        "description": "The content of the document to be exported"
                    },
                    "pdf_path": {
                        "type": "string",
                        "description": "The file path for the exported PDF"
                    }
                }
            },
            "results": {
                "type": "object",
                "properties": {
                    "pdf_status": {
                        "type": "string",
                        "description": "The status of the PDF export operation"
                    }
                }
            }
        }
    },
    "Restaurant": {
        "gourmet_tour_guide": {
            "name": "gourmet_tour_guide",
            "description": "A tool that provides recommendations for local delicacies and dining discounts, supporting only major cities in Europe, Asia, North America, and Australia",
            "arguments": {
                "type": "object",
                "properties": {
                    "continent": {
                        "description": "Continent",
                        "type": "string",
                        "enum": [
                            "Europe",
                            "Asia",
                            "North America",
                            "Australia"
                        ]
                    },
                    "city": {
                        "description": "City",
                        "type": "string"
                    },
                    "cuisine_type": {
                        "description": "Restaurant Type",
                        "type": "string",
                        "enum": [
                            "Chinese Cuisine",
                            "Western Cuisine",
                            "Japanese Cuisine",
                            "Korean Barbecue",
                            "Seafood",
                            "Vegetarian"
                        ]
                    },
                    "budget": {
                        "description": "Budget",
                        "type": "number",
                        "minimum": 0
                    },
                    "special_dietary_requirement": {
                        "description": "Special Dietary Requirement",
                        "type": "string"
                    }
                }
            },
            "results": {
                "type": "object",
                "properties": {
                    "recommended_restaurants": {
                        "description": "Recommended Restaurant Information",
                        "type": "string"
                    }
                }
            }
        },
        "special_weather_forecast_tool": {
            "name": "special_weather_forecast_tool",
            "description": "Forecasts future weather conditions based on city, date, and type of forecast, capable of forecasting within the next 7 days, and limited to major cities within China",
            "arguments": {
                "type": "object",
                "properties": {
                    "city": {
                        "description": "City name, limited to major cities within China",
                        "type": "string",
                        "example": "Shanghai"
                    },
                    "date": {
                        "description": "Forecast date, must be within the next 7 days",
                        "type": "string",
                        "format": "date",
                        "example": "2022-12-30"
                    },
                    "forecast_type": {
                        "description": "Type of forecast, options include temperature, humidity, wind direction and speed",
                        "type": "string",
                        "enum": [
                            "temperature",
                            "humidity",
                            "wind direction and speed"
                        ]
                    }
                }
            },
            "results": {
                "type": "object",
                "properties": {
                    "forecast_status": {
                        "description": "Forecast information",
                        "type": "string"
                    }
                }
            }
        },
        "instant_messaging": {
            "name": "instant_messaging",
            "description": "Instant messaging tool, supports text, voice, and video modes, with options to set push notifications",
            "arguments": {
                "type": "object",
                "properties": {
                    "communication_mode": {
                        "description": "Communication mode",
                        "type": "string",
                        "enum": [
                            "Text",
                            "Voice",
                            "Video"
                        ]
                    },
                    "target_user": {
                        "description": "Target user",
                        "type": "string"
                    },
                    "message_content": {
                        "description": "Message content",
                        "type": "string"
                    },
                    "send_time": {
                        "description": "Send time",
                        "type": "string",
                        "format": "date-time",
                        "example": "2021-12-31T23:59:59Z"
                    },
                    "need_notification": {
                        "description": "Whether push notification is needed",
                        "type": "boolean"
                    },
                    "notification_type": {
                        "description": "Type of push notification",
                        "type": "string",
                        "enum": [
                            "Email",
                            "SMS",
                            "In-app"
                        ]
                    }
                }
            },
            "results": {
                "type": "object",
                "properties": {
                    "send_status": {
                        "description": "Send status information",
                        "type": "string"
                    }
                }
            }
        },
        "menu_select_api": {
            "name": "menu_select_api",
            "description": "Ordering API for selecting dishes",
            "arguments": {
                "type": "object",
                "properties": {
                    "dish_id": {
                        "description": "Dish ID",
                        "type": "integer"
                    },
                    "quantity": {
                        "description": "Quantity of dishes",
                        "type": "integer"
                    }
                }
            },
            "results": {
                "type": "object",
                "properties": {
                    "order_id": {
                        "description": "Generated order ID for subsequent ordering and checkout operations",
                        "type": "integer"
                    }
                }
            }
        },
        "merge_orders": {
            "name": "merge_orders",
            "description": "Merge multiple orders into one order",
            "arguments": {
                "type": "object",
                "properties": {
                    "restaurant_name": {
                        "type": "string",
                        "description": "Restaurant name"
                    },
                    "order_ids": {
                        "type": "array",
                        "description": "List of order IDs to be merged",
                        "items": {
                            "type": "integer"
                        }
                    },
                    "table_id": {
                        "type": "integer",
                        "description": "Table number to merge into"
                    }
                }
            },
            "results": {
                "type": "object",
                "properties": {
                    "merge_status": {
                        "type": "string",
                        "description": "Order merge status"
                    },
                    "merged_order_id": {
                        "description": "Merged order ID",
                        "type": "integer"
                    }
                }
            }
        },
        "assign_random_table": {
            "name": "assign_random_table",
            "description": "Randomly assign a dining table based on the number of diners",
            "arguments": {
                "type": "object",
                "properties": {
                    "number_of_guests": {
                        "description": "Number of diners",
                        "type": "integer"
                    }
                }
            },
            "results": {
                "type": "object",
                "properties": {
                    "table_id": {
                        "description": "Assigned table ID",
                        "type": "integer"
                    }
                }
            }
        },
        "checkout_api": {
            "name": "checkout_api",
            "description": "Checkout API, dependent on the result of the previous Place Order API 'Order ID'",
            "arguments": {
                "type": "object",
                "properties": {
                    "order_id": {
                        "description": "Order ID",
                        "type": "integer"
                    },
                    "amount": {
                        "description": "Payment Amount",
                        "type": "integer"
                    },
                    "payment_method": {
                        "description": "Payment Method",
                        "type": "integer"
                    }
                }
            },
            "results": {
                "type": "object",
                "properties": {
                    "total_bill": {
                        "description": "Total Bill Amount",
                        "type": "integer"
                    },
                    "payment_status": {
                        "description": "Payment Status",
                        "type": "string"
                    }
                }
            }
        },
        "restaurant_review": {
            "name": "restaurant_review",
            "description": "Restaurant Review Query Tool",
            "arguments": {
                "type": "object",
                "properties": {
                    "location": {
                        "description": "Restaurant location",
                        "type": "string"
                    },
                    "cuisine": {
                        "description": "Type of cuisine offered by the restaurant",
                        "type": "string"
                    },
                    "visitDate": {
                        "description": "Visit date",
                        "format": "date",
                        "type": "string"
                    }
                }
            },
            "results": {
                "type": "object",
                "properties": {
                    "avg_rating": {
                        "description": "Average restaurant rating",
                        "type": "number"
                    },
                    "total_reviews": {
                        "description": "Total number of reviews",
                        "type": "integer"
                    },
                    "top_review": {
                        "description": "Details of the highest-rated review",
                        "type": "string"
                    }
                }
            }
        },
        "restaurant_review_analyzer": {
            "name": "restaurant_review_analyzer",
            "description": "Restaurant Review Analysis Tool",
            "arguments": {
                "type": "object",
                "properties": {
                    "reviewText": {
                        "description": "Content of the user's review",
                        "type": "string"
                    },
                    "visitDate": {
                        "description": "Date of the user's visit",
                        "type": "string"
                    },
                    "restaurantName": {
                        "description": "Name of the restaurant",
                        "type": "string"
                    }
                }
            },
            "results": {
                "type": "object",
                "properties": {
                    "sentiment": {
                        "description": "Sentiment analysis result of the review",
                        "type": "string"
                    },
                    "starRating": {
                        "description": "Predicted star rating",
                        "type": "integer"
                    }
                }
            }
        },
        "website_design_tool": {
            "name": "website_design_tool",
            "description": "Help users create and design web pages",
            "arguments": {
                "type": "object",
                "properties": {
                    "template_type": {
                        "description": "Template type",
                        "type": "string",
                        "enum": [
                            "Business",
                            "Running Blog",
                            "Personal Blog",
                            "Photography",
                            "E-commerce"
                        ]
                    },
                    "color_theme": {
                        "description": "Color theme",
                        "type": "string",
                        "enum": [
                            "Light",
                            "Dark"
                        ]
                    },
                    "features_required": {
                        "description": "Required features",
                        "type": "array",
                        "items": {
                            "type": "string",
                            "enum": [
                                "Responsive design",
                                "SEO optimization",
                                "Embedded video",
                                "Online store",
                                "Interactive features"
                            ]
                        }
                    },
                    "page_layout": {
                        "description": "Page layout",
                        "type": "string",
                        "enum": [
                            "Single column",
                            "Double column",
                            "Triple column"
                        ]
                    },
                    "navigation_menu": {
                        "description": "Navigation menu position",
                        "type": "string",
                        "enum": [
                            "Header",
                            "Footer",
                            "Sidebar",
                            "Floating"
                        ]
                    },
                    "website_title": {
                        "description": "Website title",
                        "type": "string"
                    },
                    "website_description": {
                        "description": "Website description",
                        "type": "string"
                    }
                }
            },
            "results": {
                "type": "object",
                "properties": {
                    "design_status": {
                        "description": "Design status",
                        "type": "string"
                    }
                }
            }
        },
        "event_planning_tool": {
            "name": "event_planning_tool",
            "description": "Event planning tool, used for planning and managing various types of events",
            "arguments": {
                "type": "object",
                "properties": {
                    "date": {
                        "type": "string",
                        "description": "Event date"
                    },
                    "scale": {
                        "type": "string",
                        "description": "Event scale"
                    },
                    "donation_type": {
                        "type": "string",
                        "description": "Type of donation items"
                    },
                    "eventType": {
                        "type": "string",
                        "description": "Event type",
                        "enum": [
                            "Exhibition",
                            "Lecture",
                            "Concert",
                            "Singing Performance",
                            "Conference",
                            "Seminar"
                        ]
                    },
                    "location": {
                        "type": "string",
                        "description": "Event location",
                        "example": "Bird's Nest Stadium, Chaoyang District, Beijing"
                    },
                    "budget": {
                        "type": "number",
                        "description": "Event budget",
                        "example": 12000.0
                    },
                    "guestNumber": {
                        "type": "integer",
                        "description": "Estimated number of attendees"
                    },
                    "theme": {
                        "type": "string",
                        "description": "Event theme"
                    },
                    "responsiblePerson": {
                        "type": "string",
                        "description": "Name of the responsible person"
                    }
                }
            },
            "results": {
                "type": "object",
                "properties": {
                    "event_plan": {
                        "description": "Event planning scheme",
                        "type": "string"
                    },
                    "planId": {
                        "type": "string",
                        "description": "Unique identifier for the event planning"
                    },
                    "status": {
                        "type": "string",
                        "description": "Event planning status",
                        "enum": [
                            "Not started",
                            "In progress",
                            "Completed",
                            "Cancelled"
                        ]
                    },
                    "resourceAllocation": {
                        "type": "object",
                        "description": "Resource allocation details",
                        "properties": {
                            "venue": {
                                "type": "string",
                                "description": "Venue booking status"
                            },
                            "equipment": {
                                "type": "string",
                                "description": "Equipment rental status"
                            },
                            "catering": {
                                "type": "string",
                                "description": "Catering arrangements"
                            },
                            "staff": {
                                "type": "array",
                                "description": "List of staff members",
                                "items": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "schedule": {
                        "type": "array",
                        "description": "Event schedule",
                        "items": {
                            "type": "object",
                            "properties": {
                                "time": {
                                    "type": "string",
                                    "description": "Specific time",
                                    "format": "time"
                                },
                                "activity": {
                                    "type": "string",
                                    "description": "Details of the scheduled activity"
                                }
                            }
                        }
                    }
                }
            }
        },
        "order_details_api": {
            "name": "order_details_api",
            "description": "API to get order details, used to confirm the names, quantities, and prices of dishes in the order",
            "arguments": {
                "type": "object",
                "properties": {
                    "order_id": {
                        "description": "Order ID",
                        "type": "integer"
                    }
                }
            },
            "results": {
                "type": "object",
                "properties": {
                    "dishes": {
                        "description": "Details of the dishes in the order",
                        "type": "array"
                    },
                    "total_price": {
                        "description": "Total price of the order",
                        "type": "integer"
                    },
                    "address": {
                        "description": "Delivery address",
                        "type": "string"
                    }
                }
            }
        },
        "restaurant_review_tool": {
            "name": "restaurant_review_tool",
            "description": "For submitting reviews of a specific restaurant",
            "arguments": {
                "type": "object",
                "properties": {
                    "restaurantName": {
                        "description": "Name of the restaurant",
                        "type": "string"
                    },
                    "visitDate": {
                        "description": "Visit date",
                        "type": "string",
                        "format": "date-time"
                    },
                    "stars": {
                        "description": "Star rating",
                        "type": "integer",
                        "minimum": 1,
                        "maximum": 5
                    },
                    "reviewText": {
                        "description": "Content of the review",
                        "type": "string"
                    }
                }
            },
            "results": {
                "type": "object",
                "properties": {
                    "average_stars": {
                        "description": "Average star rating",
                        "type": "number"
                    },
                    "total_reviews": {
                        "description": "Total number of reviews",
                        "type": "integer"
                    },
                    "status": {
                        "description": "Status of the review submission",
                        "type": "string"
                    }
                }
            }
        },
        "complaint_merchant": {
            "name": "complaint_merchant",
            "description": "Users complain about merchants to customer service through the platform",
            "arguments": {
                "type": "object",
                "properties": {
                    "account_id": {
                        "description": "User Account ID",
                        "type": "string"
                    },
                    "merchant_id": {
                        "description": "Merchant ID",
                        "type": "string"
                    },
                    "content": {
                        "description": "Content of the complaint",
                        "type": "string"
                    }
                }
            },
            "results": {
                "type": "object",
                "properties": {
                    "status": {
                        "description": "Status of the complaint",
                        "type": "string"
                    },
                    "response": {
                        "description": "Customer service response",
                        "type": "string"
                    }
                }
            }
        },
        "customer_service": {
            "name": "customer_service",
            "description": "Users contact customer service through the platform to submit questions and requests",
            "arguments": {
                "type": "object",
                "properties": {
                    "account_id": {
                        "description": "User account ID",
                        "type": "string"
                    },
                    "content": {
                        "description": "The content of the user's questions and requests",
                        "type": "string"
                    },
                    "merchant_id": {
                        "description": "Merchant ID",
                        "type": "string"
                    }
                }
            },
            "results": {
                "type": "object",
                "properties": {
                    "status": {
                        "description": "Status of the submission",
                        "type": "string"
                    },
                    "response": {
                        "description": "Customer service's reply",
                        "type": "string"
                    }
                }
            }
        },
        "table_booking_api": {
            "name": "table_booking_api",
            "description": "Restaurant table reservation",
            "arguments": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "User name"
                    },
                    "contact": {
                        "type": "string",
                        "description": "User contact information"
                    },
                    "table_id": {
                        "type": "integer",
                        "description": "Table number"
                    },
                    "time": {
                        "type": "string",
                        "description": "Reservation time"
                    },
                    "restaurant_name": {
                        "type": "string",
                        "description": "Restaurant name"
                    },
                    "date": {
                        "type": "string",
                        "description": "Reservation date"
                    },
                    "number_of_people": {
                        "type": "string",
                        "description": "Number of people for the reservation"
                    },
                    "special_requirements": {
                        "type": "string",
                        "description": "Special dietary requirements"
                    },
                    "restaurant_id": {
                        "type": "integer",
                        "description": "Restaurant ID"
                    },
                    "seats": {
                        "type": "integer",
                        "description": "Number of seats at the table"
                    }
                }
            },
            "results": {
                "type": "object",
                "properties": {
                    "reservation_status": {
                        "type": "string",
                        "description": "Reservation status"
                    },
                    "reservation_id": {
                        "type": "integer",
                        "description": "Reservation ID"
                    },
                    "reservation_details": {
                        "type": "object",
                        "description": "Reservation details"
                    }
                }
            }
        },
        "request_menu": {
            "name": "request_menu",
            "description": "Request the restaurant to provide an electronic menu",
            "arguments": {
                "type": "object",
                "properties": {
                    "restaurant_name": {
                        "type": "string",
                        "description": "Restaurant name"
                    }
                }
            },
            "results": {
                "type": "object",
                "properties": {
                    "menu": {
                        "type": "object",
                        "description": "Electronic menu"
                    }
                }
            }
        },
        "submit_preorder": {
            "name": "submit_preorder",
            "description": "Submit the pre-order menu to the restaurant",
            "arguments": {
                "type": "object",
                "properties": {
                    "dish1": {
                        "type": "string",
                        "description": "Name of the first dish"
                    },
                    "dish2": {
                        "type": "string",
                        "description": "Name of the second dish"
                    },
                    "restaurant_name": {
                        "type": "string",
                        "description": "Restaurant name"
                    }
                }
            },
            "results": {
                "type": "object",
                "properties": {
                    "preorder_status": {
                        "type": "string",
                        "description": "Pre-order submission status"
                    }
                }
            }
        },
        "confirm_payment_method": {
            "name": "confirm_payment_method",
            "description": "Confirm payment method",
            "arguments": {
                "type": "object",
                "properties": {
                    "restaurant_contact": {
                        "type": "string",
                        "description": "Restaurant contact information"
                    },
                    "restaurant_name": {
                        "type": "string",
                        "description": "Restaurant name"
                    },
                    "payment_method": {
                        "type": "string",
                        "description": "Payment method"
                    }
                }
            },
            "results": {
                "type": "object",
                "properties": {
                    "payment_method_confirmed": {
                        "type": "boolean",
                        "description": "Whether the payment method has been confirmed"
                    }
                }
            }
        },
        "modify_transaction": {
            "name": "modify_transaction",
            "description": "Modify the content of a transaction, based on the transaction ID",
            "arguments": {
                "type": "object",
                "properties": {
                    "transaction_id": {
                        "description": "The transaction ID to modify",
                        "type": "string"
                    },
                    "amount": {
                        "description": "The new transaction amount, in RMB",
                        "type": "integer"
                    },
                    "description": {
                        "description": "The new transaction description",
                        "type": "string"
                    }
                }
            },
            "results": {
                "type": "object",
                "properties": {
                    "status": {
                        "description": "The status of the modification",
                        "type": "string"
                    }
                }
            }
        },
        "get_dish_id": {
            "name": "get_dish_id",
            "description": "Get the dish ID based on the dish name",
            "arguments": {
                "type": "object",
                "properties": {
                    "dish_name": {
                        "type": "string",
                        "description": "Dish name"
                    },
                    "menu": {
                        "type": "array",
                        "description": "Restaurant menu"
                    }
                }
            },
            "results": {
                "type": "object",
                "properties": {
                    "dish_id": {
                        "type": "integer",
                        "description": "Queried dish ID"
                    }
                }
            }
        },
        "place_order": {
            "name": "place_order",
            "description": "Place an order based on dish information and table number",
            "arguments": {
                "type": "object",
                "properties": {
                    "dishes": {
                        "type": "array",
                        "description": "List of dishes, each dish includes dish ID and quantity"
                    },
                    "table_id": {
                        "type": "integer",
                        "description": "Table number"
                    },
                    "order_id": {
                        "type": "integer",
                        "description": "Order number"
                    }
                }
            },
            "results": {
                "type": "object",
                "properties": {
                    "order_id": {
                        "type": "integer",
                        "description": "Generated order ID"
                    },
                    "confirmation": {
                        "description": "Order confirmation message",
                        "type": "string"
                    }
                }
            }
        },
        "book_table": {
            "name": "book_table",
            "description": "Reserve a table",
            "arguments": {
                "type": "object",
                "properties": {
                    "restaurant_id": {
                        "type": "string",
                        "description": "Restaurant ID"
                    },
                    "number_of_people": {
                        "type": "integer",
                        "description": "Number of diners"
                    },
                    "reservation_time": {
                        "type": "string",
                        "description": "Reservation time"
                    },
                    "date": {
                        "type": "string",
                        "description": "Reservation date"
                    },
                    "table_number": {
                        "type": "string",
                        "description": "Table number"
                    },
                    "name": {
                        "type": "string",
                        "description": "Reservator's name"
                    },
                    "phone": {
                        "type": "string",
                        "description": "Reservator's contact phone"
                    }
                }
            },
            "results": {
                "type": "object",
                "properties": {
                    "table_id": {
                        "description": "Reserved table ID",
                        "type": "integer"
                    },
                    "booking_status": {
                        "type": "string",
                        "description": "Booking status"
                    },
                    "confirmation": {
                        "type": "string",
                        "description": "Booking confirmation information"
                    }
                }
            }
        },
        "get_contact_information": {
            "name": "get_contact_information",
            "description": "Get the contact information of the restaurant",
            "arguments": {
                "type": "object",
                "properties": {
                    "restaurant_id": {
                        "type": "integer",
                        "description": "Restaurant ID"
                    },
                    "restaurant_name": {
                        "type": "string",
                        "description": "Restaurant Name"
                    }
                }
            },
            "results": {
                "type": "object",
                "properties": {
                    "contact_info": {
                        "type": "string",
                        "description": "Restaurant contact method"
                    },
                    "contact_information": {
                        "type": "object",
                        "properties": {
                            "email": {
                                "type": "string",
                                "description": "Email address"
                            },
                            "phone": {
                                "type": "string",
                                "description": "Phone number"
                            },
                            "address": {
                                "type": "string",
                                "description": "Mailing address"
                            }
                        }
                    },
                    "location": {
                        "type": "string",
                        "description": "Restaurant location"
                    },
                    "business_hours": {
                        "type": "string",
                        "description": "Business hours"
                    }
                }
            }
        },
        "food_recommendation": {
            "name": "food_recommendation",
            "description": "Recommend local delicacies based on tourist attraction location",
            "arguments": {
                "type": "object",
                "properties": {
                    "location": {
                        "description": "Tourist attraction location",
                        "type": "string"
                    },
                    "dietPreferences": {
                        "description": "User's dietary preferences",
                        "type": "string"
                    },
                    "allergies": {
                        "description": "User's food allergies",
                        "type": "string"
                    }
                }
            },
            "results": {
                "type": "object",
                "properties": {
                    "recommended_dish": {
                        "description": "Recommended dish",
                        "type": "string"
                    }
                }
            }
        },
        "book_restaurant": {
            "name": "book_restaurant",
            "description": "Restaurant Reservation Tool",
            "arguments": {
                "type": "object",
                "properties": {
                    "restaurant_name": {
                        "type": "string",
                        "description": "Name of the restaurant to reserve"
                    },
                    "reservation_time": {
                        "type": "string",
                        "description": "Reservation time"
                    },
                    "customer_name": {
                        "type": "string",
                        "description": "Customer's name"
                    },
                    "contact_info": {
                        "type": "string",
                        "description": "Customer contact information"
                    },
                    "party_size": {
                        "type": "integer",
                        "description": "Number of people in the party"
                    },
                    "special_requests": {
                        "type": "string",
                        "description": "Special requests"
                    },
                    "view_requirement": {
                        "type": "string",
                        "description": "Seating requirement, e.g., view of concert stage"
                    },
                    "area": {
                        "type": "string",
                        "description": "Reservation area"
                    },
                    "nearby_location": {
                        "type": "string",
                        "description": "Nearby location"
                    },
                    "budgetPerPerson": {
                        "type": "integer",
                        "description": "Budget per person"
                    },
                    "special_requirements": {
                        "type": "string",
                        "description": "Special dietary requirements"
                    }
                }
            },
            "results": {
                "type": "object",
                "properties": {
                    "reservation_status": {
                        "type": "string",
                        "description": "Reservation status"
                    },
                    "bookingDetails": {
                        "type": "string",
                        "description": "Details of the booking"
                    },
                    "outcome": {
                        "type": "string",
                        "description": "Whether the reservation was successful"
                    },
                    "reservation_details": {
                        "type": "object",
                        "description": "Details of the reservation"
                    },
                    "restaurantDetails": {
                        "type": "string",
                        "description": "Details of the restaurant"
                    },
                    "booking_confirmation": {
                        "type": "string",
                        "description": "Booking confirmation information"
                    },
                    "restaurant_address": {
                        "type": "string",
                        "description": "Restaurant address"
                    },
                    "reservation_proof": {
                        "type": "string",
                        "description": "Proof of reservation"
                    },
                    "table_id": {
                        "type": "integer",
                        "description": "Table ID"
                    }
                }
            }
        },
        "check_table_availability": {
            "name": "check_table_availability",
            "description": "Check the availability of a specific table for tonight",
            "arguments": {
                "type": "object",
                "properties": {
                    "table_id": {
                        "type": "string",
                        "description": "Table ID"
                    }
                }
            },
            "results": {
                "type": "object",
                "properties": {
                    "availability": {
                        "type": "boolean",
                        "description": "Whether the table is available"
                    }
                }
            }
        },
        "find_recommended_dishes": {
            "name": "find_recommended_dishes",
            "description": "Find the recommended dishes based on the restaurant's review information",
            "arguments": {
                "type": "object",
                "properties": {
                    "restaurantName": {
                        "type": "string",
                        "description": "The name of the restaurant"
                    },
                    "location": {
                        "type": "string",
                        "description": "The location of the restaurant"
                    }
                }
            },
            "results": {
                "type": "object",
                "properties": {
                    "recommended_dishes": {
                        "type": "array",
                        "description": "List of recommended dishes"
                    }
                }
            }
        }
    },
    "Flight": {
        "flight_ticket_cancelling": {
            "name": "flight_ticket_cancelling",
            "description": "Flight Ticket Cancellation Tool",
            "arguments": {
                "type": "object",
                "properties": {
                    "departureDate": {
                        "description": "Departure time of the flight to be cancelled",
                        "type": "string"
                    },
                    "flightNumber": {
                        "description": "Flight number to be cancelled",
                        "type": "string"
                    },
                    "bookingName": {
                        "description": "Name of the passenger for the flight to be cancelled",
                        "type": "string"
                    }
                }
            },
            "results": {
                "type": "object",
                "properties": {
                    "booking_status": {
                        "description": "Flight booking cancellation status",
                        "type": "string"
                    }
                }
            }
        },
        "flight_search": {
            "name": "flight_search",
            "description": "Flight Ticket Search Tool",
            "arguments": {
                "type": "object",
                "properties": {
                    "departure_date": {
                        "type": "string",
                        "description": "Departure Date"
                    },
                    "return_date": {
                        "type": "string",
                        "description": "Return Date"
                    },
                    "destination": {
                        "type": "string",
                        "description": "Destination"
                    },
                    "departure_city": {
                        "type": "string",
                        "description": "Departure City"
                    },
                    "arrival_city": {
                        "type": "string",
                        "description": "Arrival City"
                    },
                    "departure_time": {
                        "type": "string",
                        "description": "Earliest Departure Time"
                    },
                    "directFlight": {
                        "type": "boolean",
                        "description": "Direct Flight"
                    },
                    "flightNumber": {
                        "type": "string",
                        "description": "Flight Number"
                    },
                    "priceLimit": {
                        "type": "string",
                        "description": "Price Limit"
                    },
                    "bookingName": {
                        "type": "string",
                        "description": "Booking Name"
                    },
                    "cabinClass": {
                        "type": "string",
                        "description": "Cabin Class"
                    },
                    "timePeriod": {
                        "type": "string",
                        "description": "Time Period, e.g., 'morning'"
                    }
                }
            },
            "results": {
                "type": "object",
                "properties": {
                    "flight_options": {
                        "type": "array",
                        "description": "List of Available Flight Options",
                        "items": {
                            "type": "object"
                        }
                    },
                    "selected_flight_price": {
                        "type": "integer",
                        "description": "Price of the Selected Flight"
                    }
                }
            }
        },
        "flight_ticket_changing": {
            "name": "flight_ticket_changing",
            "description": "Flight Ticket Booking Modification Tool",
            "arguments": {
                "type": "object",
                "properties": {
                    "originalDepartureDate": {
                        "description": "The flight departure time that needs to be changed",
                        "type": "string"
                    },
                    "originalFlightNumber": {
                        "description": "The flight number that needs to be changed",
                        "type": "string"
                    },
                    "originalName": {
                        "description": "The name of the passenger whose ticket information needs to be changed",
                        "type": "string"
                    },
                    "newFlightNumber": {
                        "description": "The new flight number after change",
                        "type": "string"
                    },
                    "newDepartureDate": {
                        "description": "The new flight departure time after change",
                        "type": "string"
                    },
                    "newDepartureCity": {
                        "description": "The departure city after change",
                        "type": "string"
                    },
                    "newArrivalCity": {
                        "description": "The arrival city after change",
                        "type": "string"
                    },
                    "newName": {
                        "description": "The name of the new passenger",
                        "type": "string"
                    },
                    "newID": {
                        "description": "The ID number of the new passenger",
                        "type": "string"
                    }
                }
            },
            "results": {
                "type": "object",
                "properties": {
                    "booking_status": {
                        "description": "The status of the flight ticket booking modification",
                        "type": "string"
                    }
                }
            }
        },
        "book_flight": {
            "name": "book_flight",
            "description": "Flight booking tool",
            "arguments": {
                "type": "object",
                "properties": {
                    "ticket_info": {
                        "description": "Flight information, including flight number, date, time, departure place, and destination",
                        "type": "string"
                    },
                    "passenger_info": {
                        "description": "Passenger information, including name and ID number",
                        "type": "string"
                    },
                    "payment_info": {
                        "description": "Payment information, including payment method and amount",
                        "type": "string"
                    },
                    "departure_date": {
                        "type": "string",
                        "description": "Departure date"
                    },
                    "departure_city": {
                        "type": "string",
                        "description": "Departure city"
                    },
                    "departure_time": {
                        "type": "string",
                        "description": "Departure time"
                    },
                    "destination_city": {
                        "type": "string",
                        "description": "Destination city"
                    },
                    "flight_number": {
                        "type": "string",
                        "description": "Flight number"
                    },
                    "airline": {
                        "type": "string",
                        "description": "Airline"
                    },
                    "price": {
                        "type": "number",
                        "description": "Ticket price"
                    },
                    "seat_preference": {
                        "type": "string",
                        "description": "Seat preference"
                    },
                    "seat_class": {
                        "type": "string",
                        "description": "Seat class"
                    },
                    "passenger_name": {
                        "type": "string",
                        "description": "Passenger name"
                    },
                    "passenger_id": {
                        "type": "string",
                        "description": "Passenger ID number"
                    },
                    "flight": {
                        "type": "object",
                        "description": "Selected flight"
                    },
                    "group_size": {
                        "type": "integer",
                        "description": "Group size for travel"
                    },
                    "amenities": {
                        "type": "array",
                        "description": "List of required amenities",
                        "items": {
                            "type": "string"
                        }
                    },
                    "flight_details": {
                        "type": "string",
                        "description": "Flight details"
                    },
                    "number_of_passengers": {
                        "type": "integer",
                        "description": "Number of passengers"
                    },
                    "passenger_details": {
                        "type": "string",
                        "description": "Passenger details"
                    },
                    "window_seat": {
                        "type": "boolean",
                        "description": "Whether a window seat is required"
                    },
                    "mealService": {
                        "description": "Whether meal service is provided",
                        "type": "boolean"
                    },
                    "mealPreference": {
                        "description": "Meal preference",
                        "type": "string"
                    },
                    "contactInfo": {
                        "description": "User contact information",
                        "type": "string"
                    },
                    "options": {
                        "type": "object",
                        "properties": {
                            "cancellation": {
                                "type": "boolean",
                                "description": "Whether a free cancellation option is needed"
                            },
                            "change": {
                                "type": "boolean",
                                "description": "Whether a free change option is needed"
                            }
                        },
                        "required": [
                            "cancellation",
                            "change"
                        ]
                    }
                }
            },
            "results": {
                "type": "object",
                "properties": {
                    "booking_status": {
                        "description": "Booking status",
                        "type": "string"
                    },
                    "booking_details": {
                        "type": "string",
                        "description": "Booking details"
                    },
                    "e_ticket": {
                        "type": "string",
                        "description": "E-ticket information"
                    },
                    "booking_reference": {
                        "type": "string",
                        "description": "Booking reference information"
                    },
                    "ticket_price": {
                        "type": "number",
                        "description": "Ticket price"
                    },
                    "booking_confirmation": {
                        "type": "object",
                        "description": "Booking confirmation information, including booking status and ticket details"
                    },
                    "flight_details": {
                        "type": "object",
                        "description": "Flight details"
                    },
                    "ticket_info": {
                        "description": "Booked ticket information",
                        "type": "string"
                    }
                }
            }
        },
        "select_flight_by_time": {
            "name": "select_flight_by_time",
            "description": "Select a flight based on the provided time",
            "arguments": {
                "type": "object",
                "properties": {
                    "flights_list": {
                        "type": "string",
                        "description": "List of flights found"
                    },
                    "desired_time": {
                        "type": "string",
                        "description": "Expected flight departure time"
                    }
                }
            },
            "results": {
                "type": "object",
                "properties": {
                    "selected_flight": {
                        "description": "Information of the selected flight",
                        "type": "string"
                    }
                }
            }
        },
        "confirm_reschedule_and_pay": {
            "name": "confirm_reschedule_and_pay",
            "description": "Confirm rescheduling information and complete payment",
            "arguments": {
                "type": "object",
                "properties": {
                    "bookingName": {
                        "type": "string",
                        "description": "Passenger name"
                    },
                    "newFlightNumber": {
                        "type": "string",
                        "description": "New flight number"
                    },
                    "newDepartureDate": {
                        "type": "string",
                        "description": "New flight departure time"
                    }
                }
            },
            "results": {
                "type": "object",
                "properties": {
                    "reschedule_status": {
                        "type": "string",
                        "description": "Rescheduling status"
                    },
                    "payment_status": {
                        "type": "string",
                        "description": "Payment status"
                    }
                }
            }
        },
        "check_flight_availability": {
            "name": "check_flight_availability",
            "description": "Check the seat availability of a specified flight",
            "arguments": {
                "type": "object",
                "properties": {
                    "flight_number": {
                        "type": "string",
                        "description": "Flight number"
                    },
                    "departureDate": {
                        "type": "string",
                        "description": "Departure date and time"
                    },
                    "flight": {
                        "type": "object",
                        "description": "Selected flight"
                    }
                }
            },
            "results": {
                "type": "object",
                "properties": {
                    "availability": {
                        "type": "boolean",
                        "description": "Whether seats are available"
                    },
                    "policy": {
                        "type": "string",
                        "description": "Details of the rebooking policy"
                    }
                }
            }
        },
        "confirm_ticket_change": {
            "name": "confirm_ticket_change",
            "description": "Confirm the change of ticket information and complete the payment",
            "arguments": {
                "type": "object",
                "properties": {
                    "identityNumber": {
                        "type": "string",
                        "description": "Identity card number of the ticket purchaser"
                    },
                    "selectedTrainID": {
                        "type": "string",
                        "description": "Train ID selected for ticket change"
                    },
                    "originalDepartureDate": {
                        "type": "string",
                        "description": "Original departure date"
                    },
                    "newFlightNumber": {
                        "type": "string",
                        "description": "New flight number"
                    },
                    "newDepartureDate": {
                        "type": "string",
                        "description": "New departure date"
                    }
                }
            },
            "results": {
                "type": "object",
                "properties": {
                    "change_confirmation_status": {
                        "type": "string",
                        "description": "Ticket change confirmation status"
                    },
                    "confirmation": {
                        "type": "boolean",
                        "description": "Whether the ticket change is confirmed"
                    },
                    "cost": {
                        "type": "number",
                        "description": "Ticket change fee"
                    }
                }
            }
        },
        "book_flight_inquiry": {
            "name": "book_flight_inquiry",
            "description": "Flight Booking Inquiry Service",
            "arguments": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "User Name"
                    },
                    "contact": {
                        "type": "string",
                        "description": "User Contact Information"
                    },
                    "time": {
                        "type": "string",
                        "description": "Inquiry Time"
                    },
                    "location": {
                        "type": "string",
                        "description": "Inquiry Location"
                    }
                }
            },
            "results": {
                "type": "object",
                "properties": {
                    "booking_status": {
                        "type": "string",
                        "description": "Status of the Booking Success"
                    }
                }
            }
        },
        "check_weather": {
            "name": "check_weather",
            "description": "Check the weather forecast for a specified date and location",
            "arguments": {
                "type": "object",
                "properties": {
                    "date": {
                        "type": "string",
                        "description": "Specified date"
                    },
                    "location": {
                        "type": "string",
                        "description": "Weather query location"
                    }
                }
            },
            "results": {
                "type": "object",
                "properties": {
                    "weather_status": {
                        "type": "string",
                        "description": "Weather condition"
                    },
                    "temperature": {
                        "type": "string",
                        "description": "Temperature"
                    },
                    "precipitation": {
                        "type": "string",
                        "description": "Probability of precipitation"
                    },
                    "weather_info": {
                        "type": "string",
                        "description": "Weather forecast information"
                    },
                    "suggestions": {
                        "type": "string",
                        "description": "Suggestions based on weather conditions"
                    }
                }
            }
        },
        "set_task_reminder": {
            "name": "set_task_reminder",
            "description": "Set task reminder",
            "arguments": {
                "type": "object",
                "properties": {
                    "time": {
                        "type": "string",
                        "description": "Reminder time"
                    },
                    "content": {
                        "type": "string",
                        "description": "Reminder content"
                    },
                    "taskType": {
                        "type": "string",
                        "description": "Task type"
                    }
                }
            },
            "results": {
                "type": "object",
                "properties": {
                    "reminder_status": {
                        "type": "string",
                        "description": "Status of whether the reminder was set successfully"
                    }
                }
            }
        },
        "book_earliest_flight": {
            "name": "book_earliest_flight",
            "description": "Book the earliest available flight that meets the criteria",
            "arguments": {
                "type": "object",
                "properties": {
                    "departure": {
                        "type": "string",
                        "description": "Departure location"
                    },
                    "destination": {
                        "type": "string",
                        "description": "Destination"
                    },
                    "date": {
                        "type": "string",
                        "description": "Departure date"
                    },
                    "bookingName": {
                        "type": "string",
                        "description": "Name of the person booking"
                    },
                    "latestDepartureTime": {
                        "type": "string",
                        "description": "Latest departure time"
                    }
                }
            },
            "results": {
                "type": "object",
                "properties": {
                    "booking_status": {
                        "type": "string",
                        "description": "Booking status"
                    },
                    "flight_details": {
                        "type": "string",
                        "description": "Flight details"
                    },
                    "departureTime": {
                        "type": "string",
                        "description": "Actual departure time"
                    }
                }
            }
        },
        "get_flight_change_policy": {
            "name": "get_flight_change_policy",
            "description": "Get the flight change policy information",
            "arguments": {
                "type": "object",
                "properties": {
                    "airline": {
                        "type": "string",
                        "description": "Airline name"
                    },
                    "flight_number": {
                        "type": "string",
                        "description": "Flight number"
                    }
                }
            },
            "results": {
                "type": "object",
                "properties": {
                    "policy": {
                        "type": "string",
                        "description": "Flight change policy"
                    }
                }
            }
        },
        "airline_policy_query": {
            "name": "airline_policy_query",
            "description": "Query the ticket change policy of a specified airline",
            "arguments": {
                "type": "object",
                "properties": {
                    "airline": {
                        "type": "string",
                        "description": "Airline name"
                    }
                }
            },
            "results": {
                "type": "object",
                "properties": {
                    "change_policy": {
                        "type": "string",
                        "description": "Details of the ticket change policy"
                    }
                }
            }
        },
        "flight_selection_and_booking": {
            "name": "flight_selection_and_booking",
            "description": "Select and book flights that meet the criteria",
            "arguments": {
                "type": "object",
                "properties": {
                    "departureCity": {
                        "type": "string",
                        "description": "Departure city"
                    },
                    "arrivalCity": {
                        "type": "string",
                        "description": "Destination city"
                    },
                    "arrivalDateBefore": {
                        "type": "string",
                        "description": "Required arrival time at the destination before"
                    },
                    "passengerName": {
                        "type": "string",
                        "description": "Passenger name"
                    },
                    "identityNumber": {
                        "type": "string",
                        "description": "Passenger ID number"
                    }
                }
            },
            "results": {
                "type": "object",
                "properties": {
                    "booking_status": {
                        "type": "string",
                        "description": "Booking status"
                    },
                    "flight_details": {
                        "type": "string",
                        "description": "Details of the booked flight"
                    }
                }
            }
        },
        "select_and_book_flight": {
            "name": "select_and_book_flight",
            "description": "Select and book a flight",
            "arguments": {
                "type": "object",
                "properties": {
                    "flight_options": {
                        "type": "string",
                        "description": "List of flight options found"
                    },
                    "name": {
                        "type": "string",
                        "description": "Passenger's name"
                    },
                    "identityNumber": {
                        "type": "string",
                        "description": "Passenger's ID number"
                    },
                    "departureDate": {
                        "type": "string",
                        "description": "Departure date",
                        "format": "date-time"
                    },
                    "departureCity": {
                        "type": "string",
                        "description": "Departure city"
                    },
                    "arrivalCity": {
                        "type": "string",
                        "description": "Arrival city"
                    }
                }
            },
            "results": {
                "type": "object",
                "properties": {
                    "booking_status": {
                        "type": "string",
                        "description": "Flight booking status"
                    },
                    "flightNumber": {
                        "type": "string",
                        "description": "Booked flight number"
                    }
                }
            }
        },
        "send_ticket": {
            "name": "send_ticket",
            "description": "Send ticketing information to the user",
            "arguments": {
                "type": "object",
                "properties": {
                    "email": {
                        "type": "string",
                        "description": "User's email address"
                    },
                    "eTicket": {
                        "type": "string",
                        "description": "The electronic ticket to be sent"
                    },
                    "bookingName": {
                        "type": "string",
                        "description": "Passenger's name"
                    },
                    "ticketID": {
                        "type": "string",
                        "description": "Ticket number"
                    },
                    "identityNumber": {
                        "type": "string",
                        "description": "Identity card number of the person purchasing the ticket"
                    },
                    "ticket_info": {
                        "type": "string",
                        "description": "Electronic flight ticket information"
                    },
                    "flightNumber": {
                        "type": "string",
                        "description": "Flight number"
                    },
                    "departureDate": {
                        "type": "string",
                        "description": "Departure date"
                    }
                }
            },
            "results": {
                "type": "object",
                "properties": {
                    "send_status": {
                        "type": "string",
                        "description": "Status of the electronic ticket being sent"
                    }
                }
            }
        }
    },
    "Hotel": {
        "hotel_booking": {
            "name": "hotel_booking",
            "description": "Complete the hotel room booking process",
            "arguments": {
                "type": "object",
                "properties": {
                    "hotelName": {
                        "type": "string",
                        "description": "Hotel Name"
                    },
                    "checkInDate": {
                        "type": "string",
                        "description": "Check-in Date"
                    },
                    "checkOutDate": {
                        "type": "string",
                        "description": "Check-out Date"
                    },
                    "room_orientation": {
                        "type": "string",
                        "description": "Room Orientation"
                    },
                    "roomType": {
                        "type": "string",
                        "description": "Room Type"
                    },
                    "contactPhone": {
                        "type": "string",
                        "description": "Contact Phone"
                    },
                    "hotel_id": {
                        "type": "string",
                        "description": "Hotel Identifier ID"
                    },
                    "number_of_rooms": {
                        "type": "integer",
                        "description": "Number of Rooms Booked"
                    },
                    "city": {
                        "type": "string",
                        "description": "City of Stay"
                    },
                    "area": {
                        "type": "string",
                        "description": "Area of Stay"
                    },
                    "brand": {
                        "type": "string",
                        "description": "Hotel Brand"
                    },
                    "contact_info": {
                        "type": "integer",
                        "description": "Contact Information"
                    },
                    "budget": {
                        "type": "integer",
                        "description": "Accommodation Budget"
                    },
                    "nights": {
                        "type": "integer",
                        "description": "Number of Nights"
                    },
                    "personal_info": {
                        "type": "string",
                        "description": "Personal Information of the User"
                    },
                    "payment_info": {
                        "type": "string",
                        "description": "Payment Information of the User"
                    },
                    "breakfast_included": {
                        "type": "string",
                        "description": "Breakfast Included"
                    },
                    "special_request": {
                        "type": "string",
                        "description": "Special Request"
                    },
                    "guestName": {
                        "type": "string",
                        "description": "Guest Name"
                    },
                    "guestID": {
                        "type": "string",
                        "description": "Guest ID Number"
                    },
                    "phoneNumber": {
                        "type": "string",
                        "description": "Customer Phone Number"
                    },
                    "email": {
                        "type": "string",
                        "description": "Customer Email"
                    }
                }
            },
            "results": {
                "type": "object",
                "properties": {
                    "reservation_status": {
                        "type": "string",
                        "description": "Reservation Status"
                    },
                    "reservation_details": {
                        "type": "string",
                        "description": "Reservation Details"
                    },
                    "confirmation_number": {
                        "type": "string",
                        "description": "Booking Confirmation Number"
                    },
                    "bookingDetails": {
                        "type": "object",
                        "properties": {
                            "confirmationNumber": {
                                "type": "string",
                                "description": "Booking Confirmation Number"
                            },
                            "totalPrice": {
                                "type": "integer",
                                "description": "Total Price"
                            }
                        }
                    }
                }
            }
        },
        "hotel_booking_query": {
            "name": "hotel_booking_query",
            "description": "Hotel Booking Inquiry Tool",
            "arguments": {
                "type": "object",
                "properties": {
                    "checkInDate": {
                        "description": "Expected Check-in Date",
                        "type": "string"
                    },
                    "checkOutDate": {
                        "description": "Expected Check-out Date",
                        "type": "string"
                    },
                    "hotelName": {
                        "description": "Hotel Name",
                        "type": "string"
                    },
                    "confirmation_number": {
                        "description": "Booking Confirmation Number",
                        "type": "string"
                    },
                    "hotel_id": {
                        "type": "string",
                        "description": "Hotel Identifier ID"
                    },
                    "room_type": {
                        "type": "string",
                        "description": "Room Type"
                    },
                    "number_of_rooms": {
                        "type": "integer",
                        "description": "Number of Rooms Inquired"
                    }
                }
            },
            "results": {
                "type": "object",
                "properties": {
                    "availability": {
                        "description": "Booking Availability",
                        "type": "boolean"
                    },
                    "order_details": {
                        "type": "object",
                        "description": "Booking Order Details",
                        "properties": {
                            "customer_name": {
                                "description": "Customer Name",
                                "type": "string"
                            },
                            "hotel_id": {
                                "description": "Hotel Identifier ID",
                                "type": "string"
                            },
                            "check_in": {
                                "description": "Check-in Date",
                                "type": "string",
                                "format": "date"
                            },
                            "check_out": {
                                "description": "Check-out Date",
                                "type": "string",
                                "format": "date"
                            },
                            "room_type": {
                                "description": "Room Type",
                                "type": "string"
                            },
                            "number_of_rooms": {
                                "description": "Number of Rooms",
                                "type": "integer"
                            },
                            "status": {
                                "description": "Order Status",
                                "type": "string"
                            }
                        }
                    },
                    "availability_status": {
                        "type": "string",
                        "description": "Room Availability Status"
                    }
                }
            }
        },
        "check_availability_and_price": {
            "name": "check_availability_and_price",
            "description": "Check the availability and price of a specific hotel room type within a given date range",
            "arguments": {
                "type": "object",
                "properties": {
                    "hotel_name": {
                        "type": "string",
                        "description": "Hotel name"
                    },
                    "room_type": {
                        "type": "string",
                        "description": "Room type"
                    },
                    "check_in": {
                        "type": "string",
                        "description": "Check-in date"
                    },
                    "check_out": {
                        "type": "string",
                        "description": "Check-out date"
                    },
                    "number_of_rooms": {
                        "type": "integer",
                        "description": "Number of rooms to book"
                    },
                    "hotel_id": {
                        "type": "string",
                        "description": "Hotel identifier ID"
                    },
                    "price_limit": {
                        "type": "number",
                        "description": "Price limit per night"
                    },
                    "platform": {
                        "type": "string",
                        "description": "Booking platform name"
                    }
                }
            },
            "results": {
                "type": "object",
                "properties": {
                    "availability": {
                        "type": "boolean",
                        "description": "Whether there are enough rooms available for booking"
                    },
                    "price": {
                        "type": "number",
                        "description": "Room price"
                    },
                    "within_budget": {
                        "type": "boolean",
                        "description": "Whether the price is within budget"
                    },
                    "cancellation_policy": {
                        "type": "string",
                        "description": "Cancellation policy"
                    }
                }
            }
        },
        "hotel_booking_modification": {
            "name": "hotel_booking_modification",
            "description": "Hotel order modification interface, used to modify existing hotel reservation orders. Depends on the confirmation number provided by the hotel booking interface (hotel_booking).",
            "arguments": {
                "type": "object",
                "properties": {
                    "confirmation_number": {
                        "description": "Reservation confirmation number",
                        "type": "string"
                    },
                    "check_in": {
                        "description": "New check-in date",
                        "type": "string",
                        "format": "date"
                    },
                    "check_out": {
                        "description": "New check-out date",
                        "type": "string",
                        "format": "date"
                    },
                    "room_type": {
                        "description": "New room type",
                        "type": "string"
                    },
                    "number_of_rooms": {
                        "description": "New number of rooms",
                        "type": "integer"
                    }
                }
            },
            "results": {
                "type": "object",
                "properties": {
                    "modification_status": {
                        "description": "Order modification status",
                        "type": "string"
                    }
                }
            }
        },
        "select_best_hotel": {
            "name": "select_best_hotel",
            "description": "Select the best hotel based on user requirements",
            "arguments": {
                "type": "object",
                "properties": {
                    "hotels": {
                        "type": "array",
                        "description": "List of hotels to choose from"
                    },
                    "preferences": {
                        "type": "object",
                        "description": "User preferences, such as price, rating, etc."
                    },
                    "destination": {
                        "type": "string",
                        "description": "Destination"
                    },
                    "star_rating": {
                        "type": "string",
                        "description": "Hotel star rating"
                    },
                    "check_in": {
                        "type": "string",
                        "description": "Check-in date",
                        "format": "date"
                    },
                    "check_out": {
                        "type": "string",
                        "description": "Check-out date",
                        "format": "date"
                    },
                    "room_type": {
                        "type": "string",
                        "description": "Required room type"
                    },
                    "number_of_rooms": {
                        "type": "integer",
                        "description": "Number of rooms"
                    },
                    "location": {
                        "type": "string",
                        "description": "Location of the hotel"
                    },
                    "criteria": {
                        "type": "string",
                        "description": "Selection criteria, such as price, location, user reviews"
                    }
                }
            },
            "results": {
                "type": "object",
                "properties": {
                    "best_hotel": {
                        "type": "object",
                        "description": "Information of the hotel that best meets the requirements"
                    },
                    "hotel_id": {
                        "type": "string",
                        "description": "ID of the selected hotel"
                    }
                }
            }
        },
        "check_room_availability": {
            "name": "check_room_availability",
            "description": "Check the availability and price of room types at a specified hotel on specific dates",
            "arguments": {
                "type": "object",
                "properties": {
                    "hotel_name": {
                        "type": "string",
                        "description": "Hotel Name"
                    },
                    "check_in_date": {
                        "type": "string",
                        "description": "Check-in Date"
                    },
                    "check_out_date": {
                        "type": "string",
                        "description": "Check-out Date"
                    },
                    "location": {
                        "type": "string",
                        "description": "Hotel Location"
                    },
                    "room_type": {
                        "type": "string",
                        "description": "Room Type"
                    },
                    "hotel_id": {
                        "type": "string",
                        "description": "Hotel Identifier ID"
                    },
                    "number_of_rooms": {
                        "type": "integer",
                        "description": "Number of Rooms"
                    },
                    "location_preference": {
                        "type": "string",
                        "description": "Location Preference"
                    }
                }
            },
            "results": {
                "type": "object",
                "properties": {
                    "availability": {
                        "type": "boolean",
                        "description": "Whether the room is available"
                    },
                    "price": {
                        "type": "number",
                        "description": "Room Price"
                    },
                    "availability_status": {
                        "type": "string",
                        "description": "Hotel Room Availability Status"
                    },
                    "hotel_id": {
                        "type": "string",
                        "description": "Hotel Identifier ID"
                    },
                    "available_rooms": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of Available Rooms"
                    },
                    "offers": {
                        "type": "array",
                        "description": "List of Available Promotions"
                    },
                    "selected_option": {
                        "type": "string",
                        "description": "Selected Booking Option"
                    }
                }
            }
        },
        "search_and_select_hotel": {
            "name": "search_and_select_hotel",
            "description": "Search and select the appropriate hotel",
            "arguments": {
                "type": "object",
                "properties": {
                    "destination": {
                        "type": "string",
                        "description": "Travel destination"
                    },
                    "city": {
                        "type": "string",
                        "description": "City name"
                    },
                    "room_type": {
                        "type": "string",
                        "description": "Room type"
                    },
                    "number_of_rooms": {
                        "type": "integer",
                        "description": "Number of rooms"
                    },
                    "hotel_rating": {
                        "type": "string",
                        "description": "Hotel rating"
                    },
                    "star_rating": {
                        "type": "string",
                        "description": "Hotel star rating"
                    },
                    "check_in_date": {
                        "type": "string",
                        "description": "Check-in date"
                    },
                    "check_out_date": {
                        "type": "string",
                        "description": "Check-out date"
                    }
                }
            },
            "results": {
                "type": "object",
                "properties": {
                    "hotel_selection": {
                        "type": "string",
                        "description": "User-selected hotel information"
                    },
                    "hotel_info": {
                        "type": "string",
                        "description": "Information of the selected hotel"
                    },
                    "hotel_id": {
                        "type": "string",
                        "description": "Identifier ID of the selected hotel"
                    }
                }
            }
        },
        "search_hotels": {
            "name": "search_hotels",
            "description": "Search for hotels based on location, time, and user preferences",
            "arguments": {
                "type": "object",
                "properties": {
                    "location": {
                        "type": "string",
                        "description": "Hotel location"
                    },
                    "star_rating": {
                        "type": "string",
                        "description": "Hotel star rating"
                    },
                    "amenities": {
                        "type": "array",
                        "description": "List of hotel amenities, such as free Wi-Fi"
                    },
                    "max_distance": {
                        "type": "string",
                        "description": "Maximum distance from the hotel to a specific landmark"
                    },
                    "check_in_date": {
                        "type": "string",
                        "format": "date",
                        "description": "Check-in date"
                    },
                    "check_out_date": {
                        "type": "string",
                        "format": "date",
                        "description": "Check-out date"
                    },
                    "room_type": {
                        "type": "string",
                        "description": "Room type"
                    },
                    "include_breakfast": {
                        "type": "string",
                        "description": "Whether breakfast service is included"
                    },
                    "city": {
                        "type": "string",
                        "description": "City name"
                    },
                    "minimum_rating": {
                        "type": "number",
                        "description": "Minimum rating"
                    },
                    "brand": {
                        "type": "string",
                        "description": "Hotel brand"
                    },
                    "hotel_name": {
                        "type": "string",
                        "description": "Hotel name"
                    },
                    "wifi": {
                        "type": "string",
                        "description": "Whether free Wi-Fi service is required"
                    },
                    "additional_services": {
                        "type": "string",
                        "description": "Additional service requirements"
                    },
                    "maxPrice": {
                        "type": "number",
                        "description": "Maximum price per night"
                    },
                    "number_of_rooms": {
                        "type": "integer",
                        "description": "Number of rooms to book"
                    },
                    "budget": {
                        "type": "integer",
                        "description": "Budget"
                    },
                    "duration": {
                        "type": "integer",
                        "description": "Number of days to stay"
                    },
                    "airport_transfer": {
                        "type": "boolean",
                        "description": "Whether airport transfer service is needed"
                    }
                }
            },
            "results": {
                "type": "object",
                "properties": {
                    "hotels": {
                        "type": "array",
                        "description": "List of hotels that meet the criteria"
                    },
                    "hotel_id": {
                        "description": "Identifier ID of the hotel that meets the criteria",
                        "type": "string"
                    },
                    "search_status": {
                        "type": "string",
                        "description": "Search status"
                    }
                }
            }
        },
        "search_and_select_luxury_suite": {
            "name": "search_and_select_luxury_suite",
            "description": "Search and select a luxury suite",
            "arguments": {
                "type": "object",
                "properties": {
                    "location": {
                        "type": "string",
                        "description": "Location of the hotel to search"
                    },
                    "check_in": {
                        "type": "string",
                        "description": "Check-in date"
                    },
                    "check_out": {
                        "type": "string",
                        "description": "Check-out date"
                    }
                }
            },
            "results": {
                "type": "object",
                "properties": {
                    "hotel_id": {
                        "description": "ID of the selected hotel",
                        "type": "string"
                    },
                    "selection_status": {
                        "description": "Whether the hotel was successfully selected",
                        "type": "string"
                    }
                }
            }
        },
        "complete_hotel_booking": {
            "name": "complete_hotel_booking",
            "description": "Complete hotel reservation and payment process",
            "arguments": {
                "type": "object",
                "properties": {
                    "hotelName": {
                        "type": "string",
                        "description": "Name of the hotel"
                    },
                    "checkInDate": {
                        "type": "string",
                        "description": "Check-in date",
                        "pattern": "^\\d{4}-\\d{2}-\\d{2}$"
                    },
                    "checkOutDate": {
                        "type": "string",
                        "description": "Check-out date",
                        "pattern": "^\\d{4}-\\d{2}-\\d{2}$"
                    },
                    "roomType": {
                        "type": "string",
                        "description": "Room type"
                    },
                    "userName": {
                        "type": "string",
                        "description": "User's name"
                    },
                    "contact": {
                        "type": "string",
                        "description": "User contact information"
                    },
                    "paymentPreference": {
                        "type": "string",
                        "description": "User payment preference"
                    },
                    "paymentInfo": {
                        "type": "string",
                        "description": "User payment information"
                    },
                    "number_of_rooms": {
                        "type": "integer",
                        "description": "Number of rooms"
                    }
                }
            },
            "results": {
                "type": "object",
                "properties": {
                    "booking_status": {
                        "type": "string",
                        "description": "Booking status"
                    },
                    "bookingConfirmation": {
                        "type": "string",
                        "description": "Booking confirmation information"
                    }
                }
            }
        },
        "hotel_search": {
            "name": "hotel_search",
            "description": "Search for hotels that meet the criteria and return a list",
            "arguments": {
                "type": "object",
                "properties": {
                    "location": {
                        "type": "string",
                        "description": "Hotel location"
                    },
                    "check_in_date": {
                        "type": "string",
                        "description": "Check-in date"
                    },
                    "check_out_date": {
                        "type": "string",
                        "description": "Check-out date"
                    },
                    "guests": {
                        "description": "Number of guests",
                        "type": "integer"
                    },
                    "city": {
                        "type": "string",
                        "description": "City of stay"
                    },
                    "stay_duration": {
                        "description": "Duration of stay",
                        "type": "integer"
                    },
                    "stars": {
                        "type": "integer",
                        "description": "Hotel star rating"
                    },
                    "budget": {
                        "type": "integer",
                        "description": "Budget"
                    },
                    "room_type": {
                        "type": "string",
                        "description": "Room type"
                    },
                    "number_of_rooms": {
                        "type": "integer",
                        "description": "Number of rooms"
                    },
                    "hotel_name": {
                        "type": "string",
                        "description": "Hotel name to search for"
                    }
                }
            },
            "results": {
                "type": "object",
                "properties": {
                    "hotel_info": {
                        "type": "string",
                        "description": "Filtered hotel information"
                    },
                    "hotel_options": {
                        "type": "array",
                        "description": "List of available hotels"
                    },
                    "search_status": {
                        "description": "Search status",
                        "type": "string"
                    },
                    "hotel_id": {
                        "type": "string",
                        "description": "Hotel ID that meets the criteria"
                    },
                    "availability": {
                        "type": "boolean",
                        "description": "Availability of rooms"
                    },
                    "price": {
                        "type": "number",
                        "description": "Price"
                    }
                }
            }
        },
        "identity_verification": {
            "name": "identity_verification",
            "description": "Identity Verification Tool",
            "arguments": {
                "type": "object",
                "properties": {
                    "identity_info": {
                        "type": "string",
                        "description": "User Identity Information"
                    },
                    "account_id": {
                        "type": "string",
                        "description": "User Account ID"
                    },
                    "name": {
                        "type": "string",
                        "description": "User Name"
                    },
                    "identity_number": {
                        "type": "string",
                        "description": "Identity Card Number to be Verified"
                    },
                    "personal_info": {
                        "type": "string",
                        "description": "Account Owner's Personal Information"
                    },
                    "identity_proof": {
                        "type": "string",
                        "description": "Account Owner's Identity Proof Document"
                    },
                    "owner_name": {
                        "type": "string",
                        "description": "Account Owner's Name"
                    },
                    "contact_info": {
                        "type": "string",
                        "description": "Account Owner's Contact Information"
                    },
                    "ticket_number": {
                        "type": "string",
                        "description": "Ticket Number"
                    }
                }
            },
            "results": {
                "type": "object",
                "properties": {
                    "verification_status": {
                        "type": "string",
                        "description": "Identity Verification Status"
                    },
                    "identity_number": {
                        "type": "string",
                        "description": "User Identity Card Number"
                    }
                }
            }
        },
        "hotel_info_query": {
            "name": "hotel_info_query",
            "description": "Query hotel information",
            "arguments": {
                "type": "object",
                "properties": {
                    "hotel_id": {
                        "description": "Hotel identifier ID",
                        "type": "string"
                    }
                }
            },
            "results": {
                "type": "object",
                "properties": {
                    "hotel_info": {
                        "description": "Detailed hotel information",
                        "type": "object"
                    }
                }
            }
        },
        "search_luxury_hotels": {
            "name": "search_luxury_hotels",
            "description": "Search for luxury hotels in a specified city",
            "arguments": {
                "type": "object",
                "properties": {
                    "city": {
                        "type": "string",
                        "description": "City name"
                    }
                }
            },
            "results": {
                "type": "object",
                "properties": {
                    "hotel_id": {
                        "type": "string",
                        "description": "Identifier ID of the luxury hotel"
                    }
                }
            }
        },
        "confirm_room_price_and_policy": {
            "name": "confirm_room_price_and_policy",
            "description": "Confirm the room price and booking policy of the specified hotel",
            "arguments": {
                "type": "object",
                "properties": {
                    "hotel_id": {
                        "type": "string",
                        "description": "Hotel Identifier ID"
                    },
                    "room_type": {
                        "type": "string",
                        "description": "Room Type"
                    }
                }
            },
            "results": {
                "type": "object",
                "properties": {
                    "price": {
                        "type": "number",
                        "description": "Room Price"
                    },
                    "policy": {
                        "type": "string",
                        "description": "Booking Policy"
                    }
                }
            }
        },
        "hotel_availability_check": {
            "name": "hotel_availability_check",
            "description": "Check the availability of a hotel for a given date",
            "arguments": {
                "type": "object",
                "properties": {
                    "hotel_name": {
                        "type": "string",
                        "description": "Hotel Name"
                    },
                    "location": {
                        "type": "string",
                        "description": "Hotel Location"
                    },
                    "check_in": {
                        "type": "string",
                        "description": "Check-in Date",
                        "format": "date"
                    },
                    "check_out": {
                        "type": "string",
                        "description": "Check-out Date",
                        "format": "date"
                    },
                    "room_type": {
                        "type": "string",
                        "description": "Room Type"
                    },
                    "number_of_rooms": {
                        "type": "integer",
                        "description": "Number of Rooms"
                    },
                    "brand": {
                        "type": "string",
                        "description": "Hotel Brand"
                    },
                    "hotel_level": {
                        "type": "string",
                        "description": "Hotel Level"
                    }
                }
            },
            "results": {
                "type": "object",
                "properties": {
                    "availability_status": {
                        "type": "string",
                        "description": "Room Availability Status"
                    },
                    "hotel_id": {
                        "type": "string",
                        "description": "Hotel Identifier ID"
                    },
                    "room_types": {
                        "type": "array",
                        "description": "List of Available Room Types",
                        "items": {
                            "type": "string"
                        }
                    },
                    "availability": {
                        "type": "boolean",
                        "description": "Whether the Hotel is Bookable"
                    }
                }
            }
        },
        "search_available_rooms": {
            "name": "search_available_rooms",
            "description": "Search for available rooms or meeting spaces",
            "arguments": {
                "type": "object",
                "properties": {
                    "city": {
                        "type": "string",
                        "description": "The city where the meeting room is located"
                    },
                    "start_time": {
                        "type": "string",
                        "description": "Meeting start time (date+time)"
                    },
                    "end_time": {
                        "type": "string",
                        "description": "Meeting end time (date+time)"
                    },
                    "attendees": {
                        "type": "string",
                        "description": "Number of participants"
                    },
                    "hotel_id": {
                        "type": "string",
                        "description": "Hotel identification ID"
                    },
                    "room_type": {
                        "type": "string",
                        "description": "Room type"
                    },
                    "capacity": {
                        "type": "string",
                        "description": "Minimum capacity"
                    }
                }
            },
            "results": {
                "type": "object",
                "properties": {
                    "available_rooms": {
                        "type": "array",
                        "description": "List of available meeting rooms that meet the criteria"
                    },
                    "availability": {
                        "type": "boolean",
                        "description": "Availability"
                    },
                    "price": {
                        "type": "number",
                        "description": "Price"
                    }
                }
            }
        },
        "hotel_availability_query": {
            "name": "hotel_availability_query",
            "description": "Query the availability of rooms in a specified hotel for a specific date.",
            "arguments": {
                "type": "object",
                "properties": {
                    "hotel_name": {
                        "type": "string",
                        "description": "Hotel name"
                    },
                    "room_type": {
                        "type": "string",
                        "description": "Room type"
                    },
                    "check_in_date": {
                        "type": "string",
                        "description": "Check-in date",
                        "format": "date"
                    },
                    "check_out_date": {
                        "type": "string",
                        "description": "Check-out date",
                        "format": "date"
                    }
                }
            },
            "results": {
                "type": "object",
                "properties": {
                    "availability_status": {
                        "type": "string",
                        "description": "Room availability status"
                    },
                    "room_types": {
                        "type": "array",
                        "description": "List of available room types"
                    }
                }
            }
        },
        "check_hotel_existence": {
            "name": "check_hotel_existence",
            "description": "Check if the hotel exists",
            "arguments": {
                "type": "object",
                "properties": {
                    "hotel_id": {
                        "type": "string",
                        "description": "Hotel Identifier ID"
                    },
                    "location": {
                        "type": "string",
                        "description": "Hotel Location"
                    }
                }
            },
            "results": {
                "type": "object",
                "properties": {
                    "existence": {
                        "type": "boolean",
                        "description": "Whether the hotel exists"
                    }
                }
            }
        }
    },
    "Weather": {
        "weather_query": {
            "name": "weather_query",
            "description": "Get the weather forecast for a specified location and date",
            "arguments": {
                "type": "object",
                "properties": {
                    "date": {
                        "type": "string",
                        "description": "The date for which to obtain the weather forecast"
                    },
                    "location": {
                        "type": "string",
                        "description": "The location for which to query the weather"
                    },
                    "forecast_hours": {
                        "type": "integer",
                        "description": "Forecast time (hours)",
                        "minimum": 1,
                        "maximum": 24
                    }
                }
            },
            "results": {
                "type": "object",
                "properties": {
                    "weather_info": {
                        "type": "string",
                        "description": "Weather forecast information"
                    },
                    "weather_data": {
                        "type": "object",
                        "description": "The obtained weather data, including temperature, probability of precipitation, wind speed, etc."
                    },
                    "status": {
                        "type": "boolean",
                        "description": "Whether the retrieval operation was successful"
                    },
                    "temperature": {
                        "type": "string",
                        "description": "Temperature information"
                    },
                    "humidity": {
                        "type": "string",
                        "description": "Humidity information"
                    },
                    "weather_status": {
                        "type": "string",
                        "description": "Current weather condition description"
                    }
                }
            }
        },
        "create_meeting_reminder": {
            "name": "create_meeting_reminder",
            "description": "Create meeting reminder",
            "arguments": {
                "type": "object",
                "properties": {
                    "meeting_id": {
                        "type": "string",
                        "description": "Meeting ID"
                    },
                    "meeting_topic": {
                        "type": "string",
                        "description": "Meeting topic"
                    },
                    "meeting_time": {
                        "type": "string",
                        "description": "Meeting time"
                    },
                    "meeting_location": {
                        "type": "string",
                        "description": "Meeting location"
                    },
                    "reminder_time": {
                        "type": "integer",
                        "description": "Reminder time (minutes)"
                    },
                    "meeting_details": {
                        "type": "string",
                        "description": "Meeting details"
                    },
                    "title": {
                        "type": "string",
                        "description": "Title of the reminder"
                    }
                }
            },
            "results": {
                "type": "object",
                "properties": {
                    "status": {
                        "description": "Whether the meeting notification was successfully created",
                        "type": "string"
                    },
                    "meeting_notification": {
                        "type": "string",
                        "description": "Meeting notification content"
                    }
                }
            }
        },
        "set_reminder": {
            "name": "set_reminder",
            "description": "Set Reminder",
            "arguments": {
                "type": "object",
                "properties": {
                    "time": {
                        "type": "string",
                        "description": "Reminder Time"
                    },
                    "content": {
                        "type": "string",
                        "description": "Reminder Content"
                    },
                    "reminder_title": {
                        "type": "string",
                        "description": "Reminder Title"
                    },
                    "agenda_id": {
                        "type": "string",
                        "description": "Agenda ID"
                    },
                    "recipient": {
                        "type": "string",
                        "description": "Recipient of Reminder"
                    },
                    "reminder_date": {
                        "type": "string",
                        "description": "Reminder Date"
                    },
                    "action": {
                        "type": "string",
                        "description": "Action to perform after reminder"
                    },
                    "contactInformation": {
                        "type": "string",
                        "description": "User's Contact Information"
                    },
                    "frequency": {
                        "description": "Frequency of reminder setting, options: once, daily, weekly Monday to Sunday, default is once",
                        "type": "string"
                    }
                }
            },
            "results": {
                "type": "object",
                "properties": {
                    "reminder_status": {
                        "type": "string",
                        "description": "Reminder Setting Status"
                    },
                    "reminder_set": {
                        "description": "Whether the reminder was set successfully",
                        "type": "boolean"
                    }
                }
            }
        },
        "online_meeting_booking": {
            "name": "online_meeting_booking",
            "description": "Create an online meeting and set the time",
            "arguments": {
                "type": "object",
                "properties": {
                    "start_time": {
                        "description": "Meeting start time",
                        "type": "string"
                    },
                    "end_time": {
                        "description": "Meeting end time",
                        "type": "string"
                    },
                    "platform": {
                        "type": "string",
                        "description": "Online meeting platform"
                    },
                    "attendees": {
                        "type": "integer",
                        "description": "Number of participants"
                    }
                }
            },
            "results": {
                "type": "object",
                "properties": {
                    "confirmation": {
                        "description": "Booking confirmation information",
                        "type": "string"
                    },
                    "booking_status": {
                        "description": "Meeting booking status",
                        "type": "string"
                    },
                    "meeting_id": {
                        "description": "Created meeting ID",
                        "type": "string"
                    }
                }
            }
        },
        "set_task_reminder": {
            "name": "set_task_reminder",
            "description": "Set task reminder",
            "arguments": {
                "type": "object",
                "properties": {
                    "time": {
                        "type": "string",
                        "description": "Reminder time"
                    },
                    "content": {
                        "type": "string",
                        "description": "Reminder content"
                    },
                    "taskType": {
                        "type": "string",
                        "description": "Task type"
                    }
                }
            },
            "results": {
                "type": "object",
                "properties": {
                    "reminder_status": {
                        "type": "string",
                        "description": "Status of whether the reminder was set successfully"
                    }
                }
            }
        },
        "temperature_query": {
            "name": "temperature_query",
            "description": "Query the highest and lowest temperature of a specified location and date",
            "arguments": {
                "type": "object",
                "properties": {
                    "location": {
                        "type": "string",
                        "description": "Location for querying temperature"
                    },
                    "date": {
                        "type": "string",
                        "description": "Date for querying temperature"
                    }
                }
            },
            "results": {
                "type": "object",
                "properties": {
                    "max_temperature": {
                        "description": "Highest temperature",
                        "type": "number"
                    },
                    "min_temperature": {
                        "description": "Lowest temperature",
                        "type": "number"
                    }
                }
            }
        }
    },
    "Alarm": {
        "clock_alarm_cancel": {
            "name": "clock_alarm_cancel",
            "description": "Cancel alarm tool",
            "arguments": {
                "type": "object",
                "properties": {
                    "time": {
                        "description": "The time of the alarm to be canceled",
                        "type": "string"
                    },
                    "date": {
                        "description": "The date of the alarm to be canceled",
                        "type": "string"
                    },
                    "label": {
                        "description": "The label of the alarm to be canceled",
                        "type": "string"
                    },
                    "frequency": {
                        "description": "The frequency of the alarm to be canceled",
                        "type": "string"
                    }
                }
            },
            "results": {
                "type": "object",
                "properties": {
                    "clock_alarm_info": {
                        "description": "Alarm cancellation result",
                        "type": "string"
                    }
                }
            }
        },
        "clock_alarm_set": {
            "name": "clock_alarm_set",
            "description": "Set Alarm Tool",
            "arguments": {
                "type": "object",
                "properties": {
                    "time": {
                        "description": "Alarm Set Time",
                        "type": "string"
                    },
                    "date": {
                        "description": "Alarm Set Date",
                        "type": "string"
                    },
                    "label": {
                        "description": "Alarm Label",
                        "type": "string"
                    },
                    "frequency": {
                        "description": "Alarm Set Frequency, options: Once, Daily, Monday to Sunday, default is Once",
                        "type": "string"
                    }
                }
            },
            "results": {
                "type": "object",
                "properties": {
                    "clock_alarm_info": {
                        "description": "Alarm Setting Result",
                        "type": "string"
                    }
                }
            }
        },
        "clock_alarm_change": {
            "name": "clock_alarm_change",
            "description": "Change Alarm Tool",
            "arguments": {
                "type": "object",
                "properties": {
                    "originalTime": {
                        "description": "The original time of the alarm to be changed",
                        "type": "string"
                    },
                    "date": {
                        "description": "The date after the alarm is changed",
                        "type": "string"
                    },
                    "label": {
                        "description": "The label after the alarm is changed",
                        "type": "string"
                    },
                    "changeTime": {
                        "description": "The time after the alarm is changed",
                        "type": "string"
                    },
                    "originalFrequency": {
                        "description": "The original frequency of the alarm to be changed",
                        "type": "string"
                    },
                    "changeFrequency": {
                        "description": "The frequency after the alarm is changed",
                        "type": "string"
                    }
                }
            },
            "results": {
                "type": "object",
                "properties": {
                    "clock_alarm_info": {
                        "description": "Alarm change result",
                        "type": "string"
                    }
                }
            }
        },
        "set_single_alarm": {
            "name": "set_single_alarm",
            "description": "Set a one-time alarm reminder",
            "arguments": {
                "type": "object",
                "properties": {
                    "time": {
                        "type": "string",
                        "description": "Alarm setting time"
                    },
                    "date": {
                        "type": "string",
                        "description": "Specific date for setting the alarm"
                    },
                    "frequency": {
                        "type": "string",
                        "description": "Alarm setting frequency, single occurrence here"
                    }
                }
            },
            "results": {
                "type": "object",
                "properties": {
                    "clock_alarm_info": {
                        "description": "Alarm setting result",
                        "type": "string"
                    }
                }
            }
        },
        "weather_query": {
            "name": "weather_query",
            "description": "Get the weather forecast for a specified location and date",
            "arguments": {
                "type": "object",
                "properties": {
                    "date": {
                        "type": "string",
                        "description": "The date for which to obtain the weather forecast"
                    },
                    "location": {
                        "type": "string",
                        "description": "The location for which to query the weather"
                    },
                    "forecast_hours": {
                        "type": "integer",
                        "description": "Forecast time (hours)",
                        "minimum": 1,
                        "maximum": 24
                    }
                }
            },
            "results": {
                "type": "object",
                "properties": {
                    "weather_info": {
                        "type": "string",
                        "description": "Weather forecast information"
                    },
                    "weather_data": {
                        "type": "object",
                        "description": "The obtained weather data, including temperature, probability of precipitation, wind speed, etc."
                    },
                    "status": {
                        "type": "boolean",
                        "description": "Whether the retrieval operation was successful"
                    },
                    "temperature": {
                        "type": "string",
                        "description": "Temperature information"
                    },
                    "humidity": {
                        "type": "string",
                        "description": "Humidity information"
                    },
                    "weather_status": {
                        "type": "string",
                        "description": "Current weather condition description"
                    }
                }
            }
        }
    },
    "Train": {
        "search_train": {
            "name": "search_train",
            "description": "Search for train tickets based on preferences and return a list of train services that meet the criteria",
            "arguments": {
                "type": "object",
                "properties": {
                    "departure": {
                        "type": "string",
                        "description": "Departure location"
                    },
                    "destination": {
                        "type": "string",
                        "description": "Destination"
                    },
                    "departure_time": {
                        "type": "string",
                        "description": "Departure time"
                    },
                    "departure_station": {
                        "type": "string",
                        "description": "Departure station"
                    },
                    "train_number": {
                        "type": "string",
                        "description": "Train number"
                    },
                    "seatPreference": {
                        "type": "string",
                        "description": "Seat preference"
                    },
                    "seatType": {
                        "type": "string",
                        "description": "Seat type"
                    }
                }
            },
            "results": {
                "type": "object",
                "properties": {
                    "train_id": {
                        "description": "High-speed train service ID",
                        "type": "string"
                    },
                    "search_status": {
                        "description": "Search status",
                        "type": "string"
                    },
                    "train_options": {
                        "description": "List of train services that meet the criteria",
                        "type": "array"
                    }
                }
            }
        },
        "train_ticket_booking": {
            "name": "train_ticket_booking",
            "description": "Train ticket booking tool",
            "arguments": {
                "type": "object",
                "properties": {
                    "departureDate": {
                        "description": "Departure date and time",
                        "type": "string"
                    },
                    "startStation": {
                        "description": "Departure station",
                        "type": "string"
                    },
                    "endStation": {
                        "description": "Arrival station",
                        "type": "string"
                    },
                    "seatType": {
                        "description": "Seat type (e.g., hard seat, soft seat, sleeper)",
                        "type": "string"
                    },
                    "identityNumber": {
                        "description": "Passenger's ID number",
                        "type": "string"
                    },
                    "name": {
                        "description": "Passenger's name",
                        "type": "string"
                    },
                    "seatPreference": {
                        "description": "Seat preference",
                        "type": "string"
                    },
                    "trainNumber": {
                        "description": "Train number",
                        "type": "string"
                    }
                }
            },
            "results": {
                "type": "object",
                "properties": {
                    "booking_status": {
                        "description": "Train ticket booking status",
                        "type": "string"
                    },
                    "ticketID": {
                        "description": "Train ticket booking ID",
                        "type": "string"
                    }
                }
            }
        },
        "train_ticket_cancelling": {
            "name": "train_ticket_cancelling",
            "description": "Train Ticket Reservation Cancellation Tool",
            "arguments": {
                "type": "object",
                "properties": {
                    "ticketID": {
                        "description": "The train ticket number to be cancelled",
                        "type": "string"
                    },
                    "identityNumber": {
                        "description": "The identity card number of the person who purchased the ticket",
                        "type": "string"
                    }
                }
            },
            "results": {
                "type": "object",
                "properties": {
                    "cancellation_status": {
                        "description": "Train ticket cancellation status",
                        "type": "string"
                    }
                }
            }
        },
        "train_ticket_query": {
            "name": "train_ticket_query",
            "description": "Train Ticket Booking Inquiry Tool",
            "arguments": {
                "type": "object",
                "properties": {
                    "departureDate": {
                        "description": "Departure Time",
                        "type": "string"
                    },
                    "startStation": {
                        "description": "Departure Station",
                        "type": "string"
                    },
                    "endStation": {
                        "description": "Arrival Station",
                        "type": "string"
                    },
                    "confirmation_number": {
                        "description": "Booking Confirmation Number",
                        "type": "string"
                    },
                    "trainID": {
                        "description": "Train Number",
                        "type": "string"
                    },
                    "seatType": {
                        "description": "Seat Type",
                        "type": "string"
                    },
                    "ticketID": {
                        "description": "Train Ticket Number",
                        "type": "string"
                    },
                    "identityNumber": {
                        "description": "Passenger's ID Number",
                        "type": "string"
                    }
                }
            },
            "results": {
                "type": "object",
                "properties": {
                    "ticket_status": {
                        "description": "Train Ticket Booking List",
                        "type": "string"
                    },
                    "order_details": {
                        "description": "Booking Order Details",
                        "type": "object"
                    }
                }
            }
        },
        "train_ticket_changing": {
            "name": "train_ticket_changing",
            "description": "Train Ticket Rescheduling Tool",
            "arguments": {
                "type": "object",
                "properties": {
                    "originalTicketID": {
                        "type": "string",
                        "description": "The train ticket number that needs to be rescheduled"
                    },
                    "identityNumber": {
                        "type": "string",
                        "description": "The identity card number of the ticket purchaser"
                    },
                    "newDepartureDate": {
                        "type": "string",
                        "description": "The new departure date after changing"
                    },
                    "newTrainID": {
                        "type": "string",
                        "description": "The new train number after changing"
                    },
                    "newStartStation": {
                        "type": "string",
                        "description": "The new departure station after changing"
                    },
                    "newEndStation": {
                        "type": "string",
                        "description": "The new arrival station after changing"
                    },
                    "newSeatType": {
                        "type": "string",
                        "description": "The new seat type after changing"
                    }
                }
            },
            "results": {
                "type": "object",
                "properties": {
                    "change_status": {
                        "type": "string",
                        "description": "Train ticket rescheduling status"
                    }
                }
            }
        },
        "select_ticket": {
            "name": "select_ticket",
            "description": "Select train tickets that meet the criteria",
            "arguments": {
                "type": "object",
                "properties": {
                    "tickets": {
                        "type": "string",
                        "description": "List of queried train tickets"
                    },
                    "seatType": {
                        "type": "string",
                        "description": "Required seat type"
                    }
                }
            },
            "results": {
                "type": "object",
                "properties": {
                    "selected_ticket": {
                        "type": "string",
                        "description": "Filtered train ticket information"
                    },
                    "seat_type": {
                        "description": "Selected seat type",
                        "type": "string"
                    }
                }
            }
        },
        "book_train_ticket": {
            "name": "book_train_ticket",
            "description": "Book train tickets according to the provided passenger information and train ticket details",
            "arguments": {
                "type": "object",
                "properties": {
                    "departure_date": {
                        "type": "string",
                        "description": "Departure date"
                    },
                    "from_city": {
                        "type": "string",
                        "description": "Departure city"
                    },
                    "to_city": {
                        "type": "string",
                        "description": "Destination city"
                    },
                    "passenger_name": {
                        "type": "string",
                        "description": "Passenger name"
                    },
                    "passenger_id": {
                        "type": "string",
                        "description": "Passenger ID number"
                    },
                    "train_ticket": {
                        "type": "string",
                        "description": "Selected train ticket"
                    }
                }
            },
            "results": {
                "type": "object",
                "properties": {
                    "booking_status": {
                        "type": "string",
                        "description": "Booking status"
                    }
                }
            }
        },
        "send_ticket": {
            "name": "send_ticket",
            "description": "Send ticketing information to the user",
            "arguments": {
                "type": "object",
                "properties": {
                    "email": {
                        "type": "string",
                        "description": "User's email address"
                    },
                    "eTicket": {
                        "type": "string",
                        "description": "The electronic ticket to be sent"
                    },
                    "bookingName": {
                        "type": "string",
                        "description": "Passenger's name"
                    },
                    "ticketID": {
                        "type": "string",
                        "description": "Ticket number"
                    },
                    "identityNumber": {
                        "type": "string",
                        "description": "Identity card number of the person purchasing the ticket"
                    },
                    "ticket_info": {
                        "type": "string",
                        "description": "Electronic flight ticket information"
                    },
                    "flightNumber": {
                        "type": "string",
                        "description": "Flight number"
                    },
                    "departureDate": {
                        "type": "string",
                        "description": "Departure date"
                    }
                }
            },
            "results": {
                "type": "object",
                "properties": {
                    "send_status": {
                        "type": "string",
                        "description": "Status of the electronic ticket being sent"
                    }
                }
            }
        },
        "query_past_ticket": {
            "name": "query_past_ticket",
            "description": "Query past train ticket orders",
            "arguments": {
                "type": "object",
                "properties": {
                    "identityNumber": {
                        "type": "string",
                        "description": "Ticket purchaser's ID number"
                    },
                    "date": {
                        "type": "string",
                        "description": "Date to be queried"
                    }
                }
            },
            "results": {
                "type": "object",
                "properties": {
                    "query_status": {
                        "type": "string",
                        "description": "Query status"
                    },
                    "ticketID": {
                        "type": "string",
                        "description": "Train ticket order number"
                    }
                }
            }
        },
        "set_reminder": {
            "name": "set_reminder",
            "description": "Set Reminder",
            "arguments": {
                "type": "object",
                "properties": {
                    "time": {
                        "type": "string",
                        "description": "Reminder Time"
                    },
                    "content": {
                        "type": "string",
                        "description": "Reminder Content"
                    },
                    "reminder_title": {
                        "type": "string",
                        "description": "Reminder Title"
                    },
                    "agenda_id": {
                        "type": "string",
                        "description": "Agenda ID"
                    },
                    "recipient": {
                        "type": "string",
                        "description": "Recipient of Reminder"
                    },
                    "reminder_date": {
                        "type": "string",
                        "description": "Reminder Date"
                    },
                    "action": {
                        "type": "string",
                        "description": "Action to perform after reminder"
                    },
                    "contactInformation": {
                        "type": "string",
                        "description": "User's Contact Information"
                    },
                    "frequency": {
                        "description": "Frequency of reminder setting, options: once, daily, weekly Monday to Sunday, default is once",
                        "type": "string"
                    }
                }
            },
            "results": {
                "type": "object",
                "properties": {
                    "reminder_status": {
                        "type": "string",
                        "description": "Reminder Setting Status"
                    },
                    "reminder_set": {
                        "description": "Whether the reminder was set successfully",
                        "type": "boolean"
                    }
                }
            }
        },
        "identity_verification": {
            "name": "identity_verification",
            "description": "Identity Verification Tool",
            "arguments": {
                "type": "object",
                "properties": {
                    "identity_info": {
                        "type": "string",
                        "description": "User Identity Information"
                    },
                    "account_id": {
                        "type": "string",
                        "description": "User Account ID"
                    },
                    "name": {
                        "type": "string",
                        "description": "User Name"
                    },
                    "identity_number": {
                        "type": "string",
                        "description": "Identity Card Number to be Verified"
                    },
                    "personal_info": {
                        "type": "string",
                        "description": "Account Owner's Personal Information"
                    },
                    "identity_proof": {
                        "type": "string",
                        "description": "Account Owner's Identity Proof Document"
                    },
                    "owner_name": {
                        "type": "string",
                        "description": "Account Owner's Name"
                    },
                    "contact_info": {
                        "type": "string",
                        "description": "Account Owner's Contact Information"
                    },
                    "ticket_number": {
                        "type": "string",
                        "description": "Ticket Number"
                    }
                }
            },
            "results": {
                "type": "object",
                "properties": {
                    "verification_status": {
                        "type": "string",
                        "description": "Identity Verification Status"
                    },
                    "identity_number": {
                        "type": "string",
                        "description": "User Identity Card Number"
                    }
                }
            }
        },
        "ticket_info_query": {
            "name": "ticket_info_query",
            "description": "Query for flight and train ticket information",
            "arguments": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "Passenger's name"
                    },
                    "reference_number": {
                        "type": "string",
                        "description": "Booking reference number"
                    },
                    "identityNumber": {
                        "type": "string",
                        "description": "Ticket purchaser's ID number"
                    }
                }
            },
            "results": {
                "type": "object",
                "properties": {
                    "query_status": {
                        "type": "string",
                        "description": "Query status"
                    },
                    "ticket_level": {
                        "type": "string",
                        "description": "Flight ticket class"
                    },
                    "seat_info": {
                        "type": "string",
                        "description": "Seat information"
                    }
                }
            }
        },
        "seat_availability_check": {
            "name": "seat_availability_check",
            "description": "Check the availability of specific seat types for a designated train",
            "arguments": {
                "type": "object",
                "properties": {
                    "trainID": {
                        "type": "string",
                        "description": "Train number"
                    },
                    "startStation": {
                        "type": "string",
                        "description": "Departure station"
                    },
                    "endStation": {
                        "type": "string",
                        "description": "Arrival station"
                    },
                    "seatType": {
                        "type": "string",
                        "description": "Seat type"
                    },
                    "maxDistanceFromDiningCar": {
                        "type": "integer",
                        "description": "Maximum number of carriages away from the dining car"
                    }
                }
            },
            "results": {
                "type": "object",
                "properties": {
                    "availability_status": {
                        "type": "string",
                        "description": "Availability status"
                    }
                }
            }
        }
    },
    "Repair": {
        "appliance_repair_request": {
            "name": "appliance_repair_request",
            "description": "Appliance Repair Request Tool",
            "arguments": {
                "type": "object",
                "properties": {
                    "applianceType": {
                        "description": "Type of appliance to be repaired, such as refrigerator, TV, washing machine, etc.",
                        "type": "string"
                    },
                    "applianceBrand": {
                        "description": "Brand of the appliance to be repaired",
                        "type": "string"
                    },
                    "applianceModel": {
                        "description": "Model of the appliance to be repaired",
                        "type": "string"
                    },
                    "issueDescription": {
                        "description": "Description of the appliance malfunction",
                        "type": "string"
                    },
                    "contactInformation": {
                        "description": "Contact information",
                        "type": "string"
                    },
                    "address": {
                        "description": "Service address",
                        "type": "string"
                    },
                    "time": {
                        "description": "Scheduled service time",
                        "type": "string"
                    }
                }
            },
            "results": {
                "type": "object",
                "properties": {
                    "request_status": {
                        "description": "Repair request status",
                        "type": "string"
                    },
                    "requestID": {
                        "description": "Repair request ID",
                        "type": "string"
                    }
                }
            }
        },
        "check_availability_and_parts": {
            "name": "check_availability_and_parts",
            "description": "Check the availability of the service provider at the specified time and confirm if the required parts can be carried",
            "arguments": {
                "type": "object",
                "properties": {
                    "provider_contact": {
                        "type": "string",
                        "description": "Contact information of the service provider"
                    },
                    "service_time": {
                        "type": "string",
                        "description": "The time when the service is needed"
                    },
                    "parts_needed": {
                        "type": "string",
                        "description": "Parts that may need to be replaced"
                    }
                }
            },
            "results": {
                "type": "object",
                "properties": {
                    "availability_status": {
                        "type": "string",
                        "description": "Availability status of the service provider"
                    },
                    "parts_status": {
                        "type": "string",
                        "description": "Status of the parts carrying condition"
                    }
                }
            }
        },
        "search_repair_provider": {
            "name": "search_repair_provider",
            "description": "Search for repair service providers",
            "arguments": {
                "type": "object",
                "properties": {
                    "address": {
                        "type": "string",
                        "description": "Service address"
                    },
                    "time": {
                        "type": "string",
                        "description": "Appointment time for the service"
                    },
                    "area": {
                        "type": "string",
                        "description": "Service area"
                    },
                    "appliance_type": {
                        "type": "string",
                        "description": "Type of appliance"
                    },
                    "appliance_brand": {
                        "type": "string",
                        "description": "Appliance brand"
                    },
                    "appliance_model": {
                        "type": "string",
                        "description": "Appliance model"
                    },
                    "issue_description": {
                        "type": "string",
                        "description": "Description of the issue"
                    },
                    "service_type": {
                        "type": "string",
                        "description": "Type of service"
                    },
                    "multi_brand_compatibility": {
                        "type": "string",
                        "description": "Compatibility with multiple brands"
                    },
                    "min_rating": {
                        "type": "string",
                        "description": "Minimum rating requirement"
                    },
                    "brand_authorization": {
                        "type": "string",
                        "description": "Appliance brand authorization information"
                    }
                }
            },
            "results": {
                "type": "object",
                "properties": {
                    "provider": {
                        "type": "string",
                        "description": "Information of the repair provider"
                    },
                    "service_providers": {
                        "type": "array",
                        "description": "List of found service providers"
                    },
                    "search_status": {
                        "type": "string",
                        "description": "Search status"
                    }
                }
            }
        },
        "appliance_repair_cancellation": {
            "name": "appliance_repair_cancellation",
            "description": "Appliance Repair Cancellation Tool",
            "arguments": {
                "type": "object",
                "properties": {
                    "requestID": {
                        "description": "The repair request number to be cancelled",
                        "type": "string"
                    },
                    "cancellationReason": {
                        "description": "Reason for cancellation",
                        "type": "string"
                    }
                }
            },
            "results": {
                "type": "object",
                "properties": {
                    "cancellation_status": {
                        "description": "Repair cancellation status",
                        "type": "string"
                    }
                }
            }
        },
        "appliance_repair_status_query": {
            "name": "appliance_repair_status_query",
            "description": "Appliance Repair Inquiry Tool",
            "arguments": {
                "type": "object",
                "properties": {
                    "requestID": {
                        "description": "The repair request number to be queried",
                        "type": "string"
                    },
                    "applianceType": {
                        "description": "The type of appliance to be queried for repair",
                        "type": "string"
                    },
                    "applianceBrand": {
                        "description": "The brand of appliance to be queried for repair",
                        "type": "string"
                    },
                    "applianceModel": {
                        "description": "The model of appliance to be queried for repair",
                        "type": "string"
                    },
                    "contactInformation": {
                        "description": "Customer contact information",
                        "type": "string"
                    },
                    "address": {
                        "description": "Customer address",
                        "type": "string"
                    }
                }
            },
            "results": {
                "type": "object",
                "properties": {
                    "repair_status": {
                        "description": "Repair inquiry result",
                        "type": "string"
                    }
                }
            }
        },
        "search_authorized_service_provider": {
            "name": "search_authorized_service_provider",
            "description": "Search for authorized repair service providers",
            "arguments": {
                "type": "object",
                "properties": {
                    "provider_brand": {
                        "type": "string",
                        "description": "Home appliance brand"
                    },
                    "provider_model": {
                        "type": "string",
                        "description": "Home appliance model"
                    },
                    "userLocation": {
                        "type": "string",
                        "description": "User's location"
                    },
                    "applianceType": {
                        "type": "string",
                        "description": "Type of home appliance"
                    },
                    "address": {
                        "type": "string",
                        "description": "Service area address"
                    }
                }
            },
            "results": {
                "type": "object",
                "properties": {
                    "service_provider": {
                        "type": "string",
                        "description": "Information of the found service provider"
                    },
                    "service_center_contact": {
                        "type": "string",
                        "description": "Contact information of the repair service center obtained"
                    },
                    "service_center_info": {
                        "type": "string",
                        "description": "Authorized repair service center information"
                    }
                }
            }
        },
        "check_service_center_availability": {
            "name": "check_service_center_availability",
            "description": "Check the availability of the service center",
            "arguments": {
                "type": "object",
                "properties": {
                    "service_center_id": {
                        "type": "string",
                        "description": "Service Center ID"
                    },
                    "date": {
                        "type": "string",
                        "description": "The date to inquire"
                    },
                    "time": {
                        "type": "string",
                        "description": "The time to inquire"
                    }
                }
            },
            "results": {
                "type": "object",
                "properties": {
                    "availability_status": {
                        "type": "string",
                        "description": "Availability status of the service center"
                    },
                    "availability": {
                        "type": "boolean",
                        "description": "Whether the service center is available"
                    }
                }
            }
        },
        "online_search_repair_service": {
            "name": "online_search_repair_service",
            "description": "Search for repair service providers in a specific area and for a specific brand online",
            "arguments": {
                "type": "object",
                "properties": {
                    "area": {
                        "type": "string",
                        "description": "Service area"
                    },
                    "brand": {
                        "type": "string",
                        "description": "Service brand"
                    }
                }
            },
            "results": {
                "type": "object",
                "properties": {
                    "service_providers": {
                        "type": "array",
                        "description": "List of repair service providers found"
                    }
                }
            }
        },
        "send_notifications": {
            "name": "send_notifications",
            "description": "Send notifications to users",
            "arguments": {
                "type": "object",
                "properties": {
                    "message": {
                        "type": "string",
                        "description": "Notification content"
                    },
                    "event": {
                        "type": "string",
                        "description": "Event name"
                    },
                    "time": {
                        "type": "string",
                        "description": "Time"
                    },
                    "phone": {
                        "type": "string",
                        "description": "Phone number"
                    },
                    "participants": {
                        "type": "array",
                        "description": "List of participant emails",
                        "items": {
                            "type": "string",
                            "format": "email"
                        }
                    },
                    "notification_type": {
                        "type": "string",
                        "description": "Type of notification"
                    },
                    "meeting_id": {
                        "type": "string",
                        "description": "Meeting ID to notify"
                    },
                    "schedule_id": {
                        "type": "string",
                        "description": "Schedule ID of the meeting"
                    },
                    "agenda_id": {
                        "type": "string",
                        "description": "Agenda ID of the meeting"
                    },
                    "start_time": {
                        "type": "string",
                        "description": "Meeting start time"
                    },
                    "end_time": {
                        "type": "string",
                        "description": "Meeting end time"
                    },
                    "gate_info": {
                        "type": "string",
                        "description": "Boarding gate information"
                    },
                    "seatNumber": {
                        "type": "string",
                        "description": "Seat number"
                    },
                    "location": {
                        "type": "string",
                        "description": "Location"
                    },
                    "meeting_topic": {
                        "type": "string",
                        "description": "Meeting topic"
                    },
                    "contact": {
                        "type": "string",
                        "description": "Contact information"
                    },
                    "transactionID": {
                        "type": "string",
                        "description": "Transaction ID"
                    },
                    "activities": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "name": {
                                    "type": "string",
                                    "description": "Activity name"
                                },
                                "date": {
                                    "type": "string",
                                    "format": "date-time",
                                    "description": "Activity date and time"
                                }
                            }
                        },
                        "description": "List of activities"
                    },
                    "student_count": {
                        "type": "integer",
                        "description": "Number of students to notify",
                        "minimum": 1
                    },
                    "notification_method": {
                        "type": "string",
                        "description": "Method of sending notifications"
                    },
                    "recipients": {
                        "type": "array",
                        "description": "List of notification recipients",
                        "items": {
                            "type": "string"
                        }
                    }
                }
            },
            "results": {
                "type": "object",
                "properties": {
                    "notification_status": {
                        "type": "string",
                        "description": "Notification sending status"
                    }
                }
            }
        },
        "appliance_repair_rescheduling": {
            "name": "appliance_repair_rescheduling",
            "description": "Request to adjust the appliance repair appointment time",
            "arguments": {
                "type": "object",
                "properties": {
                    "originalRequestID": {
                        "description": "Original repair request number",
                        "type": "string"
                    },
                    "newTime": {
                        "description": "New appointment service time",
                        "type": "string"
                    }
                }
            },
            "results": {
                "type": "object",
                "properties": {
                    "rescheduling_status": {
                        "description": "Rescheduling status",
                        "type": "string"
                    },
                    "newRequestID": {
                        "description": "New repair request number",
                        "type": "string"
                    }
                }
            }
        },
        "select_nearest_service_provider": {
            "name": "select_nearest_service_provider",
            "description": "Select the nearest service provider to the user",
            "arguments": {
                "type": "object",
                "properties": {
                    "service_centers": {
                        "type": "array",
                        "description": "List of repair centers"
                    },
                    "user_address": {
                        "type": "string",
                        "description": "User service address"
                    },
                    "service_providers": {
                        "type": "array",
                        "description": "List of authorized repair service providers"
                    }
                }
            },
            "results": {
                "type": "object",
                "properties": {
                    "nearest_service_provider": {
                        "type": "string",
                        "description": "The nearest service provider to the user"
                    }
                }
            }
        },
        "call_service_provider": {
            "name": "call_service_provider",
            "description": "Call the service provider's contact number",
            "arguments": {
                "type": "object",
                "properties": {
                    "service_center": {
                        "type": "string",
                        "description": "Maintenance service center"
                    },
                    "contact_information": {
                        "type": "string",
                        "description": "Contact phone number provided by the user"
                    }
                }
            },
            "results": {
                "type": "object",
                "properties": {
                    "call_status": {
                        "type": "string",
                        "description": "Status of the phone call"
                    }
                }
            }
        },
        "provide_repair_details": {
            "name": "provide_repair_details",
            "description": "Provide detailed information required for repair to the service center",
            "arguments": {
                "type": "object",
                "properties": {
                    "appliance_brand": {
                        "type": "string",
                        "description": "Appliance brand"
                    },
                    "appliance_model": {
                        "type": "string",
                        "description": "Appliance model"
                    },
                    "issue_description": {
                        "type": "string",
                        "description": "Fault description"
                    },
                    "contact_information": {
                        "type": "string",
                        "description": "Contact information"
                    },
                    "service_address": {
                        "type": "string",
                        "description": "Service address"
                    }
                }
            },
            "results": {
                "type": "object",
                "properties": {
                    "detail_submission_status": {
                        "type": "string",
                        "description": "Information submission status"
                    }
                }
            }
        },
        "confirm_available_appointment_times": {
            "name": "confirm_available_appointment_times",
            "description": "Confirm the available appointment times of the service center",
            "arguments": {
                "type": "object",
                "properties": {
                    "service_center": {
                        "type": "string",
                        "description": "Service center"
                    }
                }
            },
            "results": {
                "type": "object",
                "properties": {
                    "available_times": {
                        "type": "array",
                        "description": "List of available appointment times"
                    }
                }
            }
        },
        "finalize_appointment_time": {
            "name": "finalize_appointment_time",
            "description": "Coordinate and determine the final appointment time",
            "arguments": {
                "type": "object",
                "properties": {
                    "proposed_time": {
                        "type": "string",
                        "description": "Proposed appointment time"
                    },
                    "available_times": {
                        "type": "array",
                        "description": "List of available appointment times"
                    }
                }
            },
            "results": {
                "type": "object",
                "properties": {
                    "final_time": {
                        "type": "string",
                        "description": "Final confirmed appointment time"
                    }
                }
            }
        },
        "ensure_appointment_confirmation": {
            "name": "ensure_appointment_confirmation",
            "description": "Ensure the user receives the appointment confirmation message sent by the service center",
            "arguments": {
                "type": "object",
                "properties": {
                    "contact_information": {
                        "type": "string",
                        "description": "Contact Information"
                    },
                    "service_center": {
                        "type": "string",
                        "description": "Service Center"
                    }
                }
            },
            "results": {
                "type": "object",
                "properties": {
                    "confirmation_status": {
                        "type": "string",
                        "description": "Appointment Confirmation Status"
                    }
                }
            }
        },
        "find_authorized_service_provider": {
            "name": "find_authorized_service_provider",
            "description": "Find authorized repair service providers",
            "arguments": {
                "type": "object",
                "properties": {
                    "brand": {
                        "type": "string",
                        "description": "Home appliance brand"
                    },
                    "region": {
                        "type": "string",
                        "description": "Service center location"
                    },
                    "model": {
                        "type": "string",
                        "description": "Air conditioner model"
                    }
                }
            },
            "results": {
                "type": "object",
                "properties": {
                    "service_center_info": {
                        "type": "string",
                        "description": "Information of the found service center"
                    },
                    "service_providers": {
                        "type": "array",
                        "description": "List of authorized repair service providers"
                    }
                }
            }
        },
        "check_service_provider_availability": {
            "name": "check_service_provider_availability",
            "description": "Confirm the availability of the service provider",
            "arguments": {
                "type": "object",
                "properties": {
                    "provider_id": {
                        "type": "string",
                        "description": "Service provider ID"
                    },
                    "date": {
                        "type": "string",
                        "description": "Date of the scheduled service"
                    },
                    "start_time": {
                        "type": "string",
                        "description": "Start time of the scheduled service"
                    },
                    "end_time": {
                        "type": "string",
                        "description": "End time of the scheduled service"
                    }
                }
            },
            "results": {
                "type": "object",
                "properties": {
                    "availability": {
                        "type": "boolean",
                        "description": "Availability"
                    },
                    "rating": {
                        "type": "number",
                        "description": "Service rating"
                    },
                    "availability_status": {
                        "type": "string",
                        "description": "Availability status of the service provider"
                    }
                }
            }
        },
        "confirm_repair_cost_and_payment": {
            "name": "confirm_repair_cost_and_payment",
            "description": "Confirm repair costs and payment method",
            "arguments": {
                "type": "object",
                "properties": {
                    "request_id": {
                        "type": "string",
                        "description": "Repair request number"
                    }
                }
            },
            "results": {
                "type": "object",
                "properties": {
                    "cost": {
                        "type": "number",
                        "description": "Repair cost"
                    },
                    "payment_method": {
                        "type": "string",
                        "description": "Payment method"
                    }
                }
            }
        },
        "send_confirmation": {
            "name": "send_confirmation",
            "description": "Send confirmation message to user",
            "arguments": {
                "type": "object",
                "properties": {
                    "message": {
                        "type": "string",
                        "description": "Content of the confirmation message to be sent"
                    },
                    "user_name": {
                        "type": "string",
                        "description": "User's name"
                    },
                    "requestID": {
                        "type": "string",
                        "description": "Maintenance request number"
                    },
                    "confirmation_number": {
                        "type": "string",
                        "description": "Booking confirmation number"
                    },
                    "repairmanDetails": {
                        "type": "string",
                        "description": "Name and contact information of the repairman"
                    },
                    "preferred_contact_method": {
                        "type": "string",
                        "description": "User's preferred contact method"
                    },
                    "service_details": {
                        "type": "string",
                        "description": "Service point address, appointment time, estimated price"
                    },
                    "identityNumber": {
                        "type": "string",
                        "description": "Identity card number of the ticket purchaser"
                    },
                    "recipient": {
                        "type": "string",
                        "description": "Recipient"
                    },
                    "customer_contact": {
                        "type": "string",
                        "description": "Customer's contact information"
                    },
                    "booking_info": {
                        "type": "string",
                        "description": "Booking confirmation information"
                    },
                    "phoneNumber": {
                        "type": "string",
                        "description": "Mobile number to which the message needs to be sent"
                    },
                    "confirmation_info": {
                        "type": "string",
                        "description": "Appointment confirmation information"
                    },
                    "contact_information": {
                        "type": "string",
                        "description": "User's contact information"
                    },
                    "service_personnel_contact": {
                        "type": "string",
                        "description": "Service personnel's contact information"
                    },
                    "startTime": {
                        "type": "string",
                        "description": "Start time of the event"
                    }
                }
            },
            "results": {
                "type": "object",
                "properties": {
                    "confirmation_status": {
                        "type": "string",
                        "description": "Status of the message sent"
                    }
                }
            }
        },
        "send_reminder": {
            "name": "send_reminder",
            "description": "Send maintenance reminder to user",
            "arguments": {
                "type": "object",
                "properties": {
                    "contactInformation": {
                        "type": "string",
                        "description": "User contact information"
                    },
                    "repairDate": {
                        "type": "string",
                        "description": "Maintenance date"
                    },
                    "repairTime": {
                        "type": "string",
                        "description": "Maintenance time"
                    },
                    "message": {
                        "type": "string",
                        "description": "Reminder message to be sent"
                    }
                }
            },
            "results": {
                "type": "object",
                "properties": {
                    "reminder_status": {
                        "description": "Reminder sending status",
                        "type": "string"
                    }
                }
            }
        },
        "set_reminder": {
            "name": "set_reminder",
            "description": "Set Reminder",
            "arguments": {
                "type": "object",
                "properties": {
                    "time": {
                        "type": "string",
                        "description": "Reminder Time"
                    },
                    "content": {
                        "type": "string",
                        "description": "Reminder Content"
                    },
                    "reminder_title": {
                        "type": "string",
                        "description": "Reminder Title"
                    },
                    "agenda_id": {
                        "type": "string",
                        "description": "Agenda ID"
                    },
                    "recipient": {
                        "type": "string",
                        "description": "Recipient of Reminder"
                    },
                    "reminder_date": {
                        "type": "string",
                        "description": "Reminder Date"
                    },
                    "action": {
                        "type": "string",
                        "description": "Action to perform after reminder"
                    },
                    "contactInformation": {
                        "type": "string",
                        "description": "User's Contact Information"
                    },
                    "frequency": {
                        "description": "Frequency of reminder setting, options: once, daily, weekly Monday to Sunday, default is once",
                        "type": "string"
                    }
                }
            },
            "results": {
                "type": "object",
                "properties": {
                    "reminder_status": {
                        "type": "string",
                        "description": "Reminder Setting Status"
                    },
                    "reminder_set": {
                        "description": "Whether the reminder was set successfully",
                        "type": "boolean"
                    }
                }
            }
        },
        "notify_user": {
            "name": "notify_user",
            "description": "Send notifications through the user's preferred communication method",
            "arguments": {
                "type": "object",
                "properties": {
                    "user_name": {
                        "type": "string",
                        "description": "User name"
                    },
                    "preferred_method": {
                        "type": "string",
                        "description": "Preferred communication method"
                    },
                    "message": {
                        "type": "string",
                        "description": "Notification message to be sent"
                    },
                    "contact_information": {
                        "type": "string",
                        "description": "User contact information"
                    },
                    "ticket_price": {
                        "type": "string",
                        "description": "Ticket price"
                    },
                    "ticket_availability": {
                        "type": "string",
                        "description": "Ticket availability information"
                    },
                    "updated_balance": {
                        "type": "string",
                        "description": "Updated user balance information"
                    },
                    "account_id": {
                        "type": "string",
                        "description": "User account ID"
                    },
                    "appointment_id": {
                        "type": "string",
                        "description": "Appointment number"
                    },
                    "service_provider_contact": {
                        "type": "string",
                        "description": "Contact information of the service provider"
                    },
                    "cancellation_status": {
                        "type": "string",
                        "description": "Repair cancellation status"
                    }
                }
            },
            "results": {
                "type": "object",
                "properties": {
                    "notification_status": {
                        "type": "string",
                        "description": "Notification sending status"
                    }
                }
            }
        },
        "find_official_repair_service_contact": {
            "name": "find_official_repair_service_contact",
            "description": "Find the official repair service contact information for a specified brand",
            "arguments": {
                "type": "object",
                "properties": {
                    "brand": {
                        "type": "string",
                        "description": "Home appliance brand"
                    }
                }
            },
            "results": {
                "type": "object",
                "properties": {
                    "contact_info": {
                        "type": "string",
                        "description": "Official repair service contact information"
                    }
                }
            }
        },
        "send_confirmation_message": {
            "name": "send_confirmation_message",
            "description": "Send appointment confirmation message to user",
            "arguments": {
                "type": "object",
                "properties": {
                    "contactInformation": {
                        "type": "string",
                        "description": "User's contact information"
                    },
                    "message": {
                        "type": "string",
                        "description": "Content of the confirmation message to be sent"
                    },
                    "user_id": {
                        "type": "string",
                        "description": "User's ID"
                    },
                    "user_name": {
                        "type": "string",
                        "description": "User's name"
                    },
                    "request_id": {
                        "type": "string",
                        "description": "Maintenance request number"
                    },
                    "method": {
                        "type": "string",
                        "description": "Method of sending confirmation message, such as SMS, email, or app notification"
                    }
                }
            },
            "results": {
                "type": "object",
                "properties": {
                    "send_status": {
                        "description": "Message sending status",
                        "type": "string"
                    },
                    "confirmation_status": {
                        "type": "boolean",
                        "description": "Whether the sending was successful"
                    }
                }
            }
        },
        "find_nearest_service_center": {
            "name": "find_nearest_service_center",
            "description": "Find the nearest brand service center",
            "arguments": {
                "type": "object",
                "properties": {
                    "brand": {
                        "type": "string",
                        "description": "Home appliance brand"
                    }
                }
            },
            "results": {
                "type": "object",
                "properties": {
                    "service_center_id": {
                        "type": "string",
                        "description": "Service center ID"
                    }
                }
            }
        },
        "get_service_center_working_hours": {
            "name": "get_service_center_working_hours",
            "description": "Get the working hours and available appointment dates of the service center",
            "arguments": {
                "type": "object",
                "properties": {
                    "service_center_id": {
                        "type": "string",
                        "description": "Service Center ID"
                    }
                }
            },
            "results": {
                "type": "object",
                "properties": {
                    "working_hours": {
                        "type": "string",
                        "description": "Working Hours"
                    },
                    "available_dates": {
                        "type": "array",
                        "description": "List of Available Appointment Dates"
                    }
                }
            }
        },
        "select_nearest_working_day": {
            "name": "select_nearest_working_day",
            "description": "Select the nearest working day",
            "arguments": {
                "type": "object",
                "properties": {
                    "current_date": {
                        "type": "string",
                        "description": "Current date"
                    }
                }
            },
            "results": {
                "type": "object",
                "properties": {
                    "selected_date": {
                        "type": "string",
                        "description": "Selected working day date"
                    }
                }
            }
        },
        "check_service_provider_coverage": {
            "name": "check_service_provider_coverage",
            "description": "Check if the service provider covers the specified area",
            "arguments": {
                "type": "object",
                "properties": {
                    "area": {
                        "type": "string",
                        "description": "User's location area"
                    },
                    "payment_method": {
                        "type": "string",
                        "description": "User's payment method"
                    }
                }
            },
            "results": {
                "type": "object",
                "properties": {
                    "coverage_status": {
                        "type": "string",
                        "description": "Service provider coverage status"
                    }
                }
            }
        },
        "send_repair_details": {
            "name": "send_repair_details",
            "description": "Send repair appointment details to user's phone",
            "arguments": {
                "type": "object",
                "properties": {
                    "contactInformation": {
                        "type": "string",
                        "description": "User contact phone number"
                    },
                    "repairTime": {
                        "type": "string",
                        "description": "Repair time"
                    },
                    "serviceProvider": {
                        "type": "string",
                        "description": "Name of the service provider"
                    },
                    "requestID": {
                        "type": "string",
                        "description": "Repair request number"
                    }
                }
            },
            "results": {
                "type": "object",
                "properties": {
                    "send_status": {
                        "type": "string",
                        "description": "Send status"
                    }
                }
            }
        },
        "send_repair_confirmation": {
            "name": "send_repair_confirmation",
            "description": "Send repair appointment confirmation message to user",
            "arguments": {
                "type": "object",
                "properties": {
                    "contactInformation": {
                        "type": "string",
                        "description": "User's contact information"
                    },
                    "repairDetails": {
                        "type": "string",
                        "description": "Detailed information of the repair appointment"
                    },
                    "appointmentTime": {
                        "type": "string",
                        "description": "Scheduled appointment time"
                    },
                    "repairPersonContact": {
                        "type": "string",
                        "description": "Repair person's contact information"
                    },
                    "address": {
                        "type": "string",
                        "description": "User's address"
                    },
                    "serviceCenterInfo": {
                        "type": "string",
                        "description": "Service center information"
                    },
                    "costEstimation": {
                        "type": "string",
                        "description": "Estimated repair cost"
                    },
                    "paymentMethod": {
                        "type": "string",
                        "description": "Payment method"
                    }
                }
            },
            "results": {
                "type": "object",
                "properties": {
                    "confirmation_status": {
                        "type": "string",
                        "description": "Status of the confirmation message sent"
                    }
                }
            }
        },
        "get_service_provider_contact": {
            "name": "get_service_provider_contact",
            "description": "Get the contact information of the maintenance service provider",
            "arguments": {
                "type": "object",
                "properties": {
                    "service_provider": {
                        "type": "string",
                        "description": "Maintenance service provider"
                    }
                }
            },
            "results": {
                "type": "object",
                "properties": {
                    "contact": {
                        "type": "string",
                        "description": "Contact information of the maintenance service provider"
                    }
                }
            }
        }
    },
    "Meeting": {
        "conference_room_cancelling": {
            "name": "conference_room_cancelling",
            "description": "Conference Room Cancellation Tool",
            "arguments": {
                "type": "object",
                "properties": {
                    "startTime": {
                        "description": "The start time of the meeting to be cancelled (date+time)",
                        "type": "string"
                    },
                    "endTime": {
                        "description": "The end time of the meeting to be cancelled (date+time)",
                        "type": "string"
                    },
                    "roomID": {
                        "description": "The ID of the conference room to be cancelled",
                        "type": "string"
                    },
                    "city": {
                        "description": "The city where the conference room to be cancelled is located",
                        "type": "string"
                    }
                }
            },
            "results": {
                "type": "object",
                "properties": {
                    "booking_status": {
                        "description": "Conference room cancellation status",
                        "type": "string"
                    }
                }
            }
        },
        "conference_room_query": {
            "name": "conference_room_query",
            "description": "Conference Room Reservation Query Tool",
            "arguments": {
                "type": "object",
                "properties": {
                    "startTime": {
                        "description": "The start time of the meeting to be queried (date + time)",
                        "type": "string"
                    },
                    "endTime": {
                        "description": "The end time of the meeting to be queried (date + time)",
                        "type": "string"
                    },
                    "roomID": {
                        "description": "The ID of the conference room to be queried",
                        "type": "string"
                    },
                    "city": {
                        "description": "The city where the conference room to be queried is located",
                        "type": "string"
                    }
                }
            },
            "results": {
                "type": "object",
                "properties": {
                    "conference_room_status": {
                        "description": "The reservation list of conference rooms that meet the search criteria",
                        "type": "string"
                    }
                }
            }
        },
        "conference_room_booking": {
            "name": "conference_room_booking",
            "description": "Conference Room Booking Tool",
            "arguments": {
                "type": "object",
                "properties": {
                    "startTime": {
                        "description": "Meeting start time (date+time)",
                        "type": "string"
                    },
                    "endTime": {
                        "description": "Meeting end time (date+time)",
                        "type": "string"
                    },
                    "roomID": {
                        "description": "Conference room ID",
                        "type": "string"
                    },
                    "city": {
                        "description": "City where the conference room is located",
                        "type": "string"
                    },
                    "content": {
                        "description": "Meeting agenda",
                        "type": "string"
                    }
                }
            },
            "results": {
                "type": "object",
                "properties": {
                    "booking_status": {
                        "description": "Conference room booking status",
                        "type": "string"
                    }
                }
            }
        },
        "check_meeting_room_availability": {
            "name": "check_meeting_room_availability",
            "description": "Check the availability of the meeting room for a specified time period",
            "arguments": {
                "type": "object",
                "properties": {
                    "date": {
                        "type": "string",
                        "description": "Reservation date"
                    },
                    "start_time": {
                        "type": "string",
                        "description": "Reservation start time"
                    },
                    "end_time": {
                        "type": "string",
                        "description": "Reservation end time"
                    },
                    "room_number": {
                        "type": "string",
                        "description": "Meeting room number"
                    },
                    "location": {
                        "type": "string",
                        "description": "Location of the meeting room"
                    }
                }
            },
            "results": {
                "type": "object",
                "properties": {
                    "availability": {
                        "type": "boolean",
                        "description": "Whether the meeting room is available"
                    },
                    "availability_status": {
                        "type": "string",
                        "description": "Status of the meeting room availability"
                    }
                }
            }
        },
        "search_conference_rooms": {
            "name": "search_conference_rooms",
            "description": "Search for conference rooms that meet the criteria",
            "arguments": {
                "type": "object",
                "properties": {
                    "location": {
                        "type": "string",
                        "description": "Location of the conference room"
                    },
                    "date": {
                        "type": "string",
                        "description": "Conference room reservation date"
                    },
                    "time": {
                        "type": "string",
                        "description": "Conference room reservation time"
                    },
                    "capacity": {
                        "type": "string",
                        "description": "Capacity requirements of the conference room"
                    },
                    "facilities": {
                        "type": "string",
                        "description": "Facilities requirements of the conference room"
                    },
                    "city": {
                        "type": "string",
                        "description": "City where the conference room is located"
                    },
                    "startTime": {
                        "type": "string",
                        "description": "Start time of the meeting (date + time)"
                    },
                    "endTime": {
                        "type": "string",
                        "description": "End time of the meeting (date + time)"
                    },
                    "equipment": {
                        "type": "string",
                        "description": "Equipment of the conference room"
                    }
                }
            },
            "results": {
                "type": "object",
                "properties": {
                    "search_results": {
                        "type": "string",
                        "description": "Search results for conference rooms"
                    },
                    "search_status": {
                        "description": "Search status",
                        "type": "string"
                    },
                    "available_rooms": {
                        "description": "List of available conference rooms",
                        "type": "array"
                    },
                    "roomID": {
                        "type": "string",
                        "description": "ID of the conference room that meets the criteria"
                    }
                }
            }
        },
        "book_meeting_room": {
            "name": "book_meeting_room",
            "description": "Complete meeting room reservation",
            "arguments": {
                "type": "object",
                "properties": {
                    "date": {
                        "type": "string",
                        "description": "Reservation date"
                    },
                    "start_time": {
                        "type": "string",
                        "description": "Meeting start time"
                    },
                    "duration": {
                        "type": "string",
                        "description": "Meeting duration, in hours"
                    },
                    "capacity": {
                        "type": "string",
                        "description": "Meeting room capacity"
                    },
                    "room_id": {
                        "type": "string",
                        "description": "Meeting room ID"
                    },
                    "city": {
                        "type": "string",
                        "description": "City where the meeting room is located"
                    },
                    "equipment": {
                        "type": "array",
                        "description": "Meeting room equipment requirements",
                        "items": {
                            "type": "string"
                        }
                    },
                    "meeting_name": {
                        "type": "string",
                        "description": "Meeting name"
                    },
                    "location": {
                        "type": "string",
                        "description": "Meeting room location"
                    },
                    "department": {
                        "type": "string",
                        "description": "Department name"
                    },
                    "room_type": {
                        "type": "string",
                        "description": "Meeting room type"
                    },
                    "recurrence_pattern": {
                        "type": "string",
                        "description": "Event recurrence pattern"
                    },
                    "end_recurrence": {
                        "type": "string",
                        "description": "End date of recurrence"
                    },
                    "user_name": {
                        "type": "string",
                        "description": "User name"
                    },
                    "contact": {
                        "type": "string",
                        "description": "User contact information"
                    },
                    "room": {
                        "type": "string",
                        "description": "Meeting room name"
                    },
                    "booker_info": {
                        "type": "string",
                        "description": "Booker information"
                    }
                }
            },
            "results": {
                "type": "object",
                "properties": {
                    "booking_status": {
                        "type": "string",
                        "description": "Meeting room booking status"
                    },
                    "room_id": {
                        "type": "string",
                        "description": "Booked meeting room ID"
                    },
                    "notification_status": {
                        "type": "string",
                        "description": "Meeting notification sending status"
                    },
                    "outcome": {
                        "description": "Whether the reservation was successful",
                        "type": "string"
                    },
                    "meeting_id": {
                        "description": "Meeting ID of the successful reservation",
                        "type": "string"
                    },
                    "confirmation_info": {
                        "type": "string",
                        "description": "Reservation confirmation information"
                    }
                }
            }
        },
        "check_weather": {
            "name": "check_weather",
            "description": "Check the weather forecast for a specified date and location",
            "arguments": {
                "type": "object",
                "properties": {
                    "date": {
                        "type": "string",
                        "description": "Specified date"
                    },
                    "location": {
                        "type": "string",
                        "description": "Weather query location"
                    }
                }
            },
            "results": {
                "type": "object",
                "properties": {
                    "weather_status": {
                        "type": "string",
                        "description": "Weather condition"
                    },
                    "temperature": {
                        "type": "string",
                        "description": "Temperature"
                    },
                    "precipitation": {
                        "type": "string",
                        "description": "Probability of precipitation"
                    },
                    "weather_info": {
                        "type": "string",
                        "description": "Weather forecast information"
                    },
                    "suggestions": {
                        "type": "string",
                        "description": "Suggestions based on weather conditions"
                    }
                }
            }
        },
        "create_reminder": {
            "name": "create_reminder",
            "description": "Create reminder event",
            "arguments": {
                "type": "object",
                "properties": {
                    "schedule_title": {
                        "type": "string",
                        "description": "Title of the reminder"
                    },
                    "schedule_date": {
                        "type": "string",
                        "description": "Date of the reminder"
                    },
                    "schedule_location": {
                        "type": "string",
                        "description": "Geographical location of the reminder"
                    },
                    "reminder_time": {
                        "type": "string",
                        "description": "Reminder time"
                    },
                    "reminder_content": {
                        "type": "string",
                        "description": "Content of the reminder"
                    },
                    "recipients": {
                        "type": "array",
                        "description": "List of recipients for the reminder",
                        "items": {
                            "type": "string"
                        }
                    },
                    "event_name": {
                        "type": "string",
                        "description": "Name of the event"
                    },
                    "event_date": {
                        "type": "string",
                        "description": "Date of the event",
                        "format": "date"
                    },
                    "event_time": {
                        "type": "string",
                        "description": "Time of the event",
                        "format": "time"
                    },
                    "device_os": {
                        "type": "string",
                        "description": "Operating system of the user's mobile phone"
                    }
                }
            },
            "results": {
                "type": "object",
                "properties": {
                    "outcome": {
                        "description": "Whether the reminder was successfully created",
                        "type": "string"
                    },
                    "reminder_creation_status": {
                        "type": "string",
                        "description": "Status of the reminder creation"
                    }
                }
            }
        },
        "account_login": {
            "name": "account_login",
            "description": "Account Login Tool",
            "arguments": {
                "type": "object",
                "properties": {
                    "account_id": {
                        "description": "Account ID",
                        "type": "integer"
                    },
                    "verification_code": {
                        "description": "Verification Code",
                        "type": "string"
                    },
                    "username": {
                        "description": "Username",
                        "type": "string"
                    },
                    "password": {
                        "description": "User Password",
                        "type": "string"
                    }
                }
            },
            "results": {
                "type": "object",
                "properties": {
                    "login_status": {
                        "description": "Login Status",
                        "type": "string"
                    }
                }
            }
        },
        "retrieve_meetings": {
            "name": "retrieve_meetings",
            "description": "Retrieve information of specified meetings",
            "arguments": {
                "type": "object",
                "properties": {
                    "meeting_name": {
                        "type": "string",
                        "description": "Meeting name"
                    },
                    "date": {
                        "type": "string",
                        "description": "The date of the meeting to retrieve"
                    }
                }
            },
            "results": {
                "type": "object",
                "properties": {
                    "agenda": {
                        "type": "string",
                        "description": "Meeting agenda"
                    },
                    "records": {
                        "type": "string",
                        "description": "Meeting minutes or audio"
                    }
                }
            }
        },
        "send_meeting_invitations": {
            "name": "send_meeting_invitations",
            "description": "Send meeting invitations",
            "arguments": {
                "type": "object",
                "properties": {
                    "email_list": {
                        "type": "array",
                        "description": "List of attendees' emails",
                        "items": {
                            "type": "string"
                        }
                    },
                    "invitation_content": {
                        "type": "string",
                        "description": "Content of the invitation letter"
                    },
                    "event_name": {
                        "type": "string",
                        "description": "Event name"
                    },
                    "start_time": {
                        "type": "string",
                        "description": "Event start time"
                    },
                    "end_time": {
                        "type": "string",
                        "description": "Event end time"
                    },
                    "location": {
                        "type": "string",
                        "description": "Event location"
                    },
                    "agenda_title": {
                        "type": "string",
                        "description": "Agenda title"
                    },
                    "organizer": {
                        "type": "string",
                        "description": "Organizer's name"
                    },
                    "meeting_topic": {
                        "type": "string",
                        "description": "Meeting topic"
                    },
                    "meeting_location": {
                        "type": "string",
                        "description": "Meeting location"
                    },
                    "organizer_name": {
                        "type": "string",
                        "description": "Meeting initiator's name"
                    },
                    "organizer_email": {
                        "type": "string",
                        "description": "Meeting initiator's email"
                    },
                    "content": {
                        "type": "string",
                        "description": "Meeting content"
                    },
                    "meeting_name": {
                        "type": "string",
                        "description": "Meeting name"
                    },
                    "meeting_id": {
                        "type": "string",
                        "description": "Meeting ID"
                    },
                    "meeting_link": {
                        "type": "string",
                        "description": "Online meeting link"
                    },
                    "meeting_end_time": {
                        "type": "string",
                        "description": "Meeting end time"
                    },
                    "email_content": {
                        "type": "string",
                        "description": "Content of the meeting notification email"
                    },
                    "meeting_time": {
                        "type": "string",
                        "description": "Meeting time"
                    },
                    "account_info": {
                        "type": "string",
                        "description": "Online meeting tool account information"
                    }
                }
            },
            "results": {
                "type": "object",
                "properties": {
                    "send_status": {
                        "type": "string",
                        "description": "Status of the invitation sent"
                    },
                    "outcome": {
                        "description": "Whether the invitation was successfully sent",
                        "type": "string"
                    },
                    "sending_status": {
                        "description": "Whether the invitation was successfully sent",
                        "type": "boolean"
                    }
                }
            }
        },
        "set_meeting_reminder": {
            "name": "set_meeting_reminder",
            "description": "Set meeting reminder",
            "arguments": {
                "type": "object",
                "properties": {
                    "reminder_time": {
                        "type": "string",
                        "description": "Reminder time"
                    },
                    "reminder_content": {
                        "type": "string",
                        "description": "Reminder content"
                    },
                    "meeting_title": {
                        "type": "string",
                        "description": "Meeting title"
                    },
                    "agenda_id": {
                        "type": "string",
                        "description": "Agenda ID"
                    },
                    "meeting_date": {
                        "type": "string",
                        "description": "Meeting date"
                    },
                    "start_time": {
                        "type": "string",
                        "description": "Meeting start time"
                    },
                    "end_time": {
                        "type": "string",
                        "description": "Meeting end time"
                    },
                    "meeting_topic": {
                        "type": "string",
                        "description": "Meeting topic"
                    }
                }
            },
            "results": {
                "type": "object",
                "properties": {
                    "reminder_status": {
                        "type": "string",
                        "description": "Reminder setup status"
                    }
                }
            }
        },
        "search_available_rooms": {
            "name": "search_available_rooms",
            "description": "Search for available rooms or meeting spaces",
            "arguments": {
                "type": "object",
                "properties": {
                    "city": {
                        "type": "string",
                        "description": "The city where the meeting room is located"
                    },
                    "start_time": {
                        "type": "string",
                        "description": "Meeting start time (date+time)"
                    },
                    "end_time": {
                        "type": "string",
                        "description": "Meeting end time (date+time)"
                    },
                    "attendees": {
                        "type": "string",
                        "description": "Number of participants"
                    },
                    "hotel_id": {
                        "type": "string",
                        "description": "Hotel identification ID"
                    },
                    "room_type": {
                        "type": "string",
                        "description": "Room type"
                    },
                    "capacity": {
                        "type": "string",
                        "description": "Minimum capacity"
                    }
                }
            },
            "results": {
                "type": "object",
                "properties": {
                    "available_rooms": {
                        "type": "array",
                        "description": "List of available meeting rooms that meet the criteria"
                    },
                    "availability": {
                        "type": "boolean",
                        "description": "Availability"
                    },
                    "price": {
                        "type": "number",
                        "description": "Price"
                    }
                }
            }
        },
        "book_online_meeting": {
            "name": "book_online_meeting",
            "description": "Book an online meeting and send invitations",
            "arguments": {
                "type": "object",
                "properties": {
                    "platform": {
                        "type": "string",
                        "description": "Meeting platform"
                    },
                    "start_time": {
                        "type": "string",
                        "description": "Meeting start time"
                    },
                    "end_time": {
                        "type": "string",
                        "description": "Meeting end time"
                    }
                }
            },
            "results": {
                "type": "object",
                "properties": {
                    "booking_status": {
                        "description": "Booking status",
                        "type": "string"
                    }
                }
            }
        },
        "weather_query": {
            "name": "weather_query",
            "description": "Get the weather forecast for a specified location and date",
            "arguments": {
                "type": "object",
                "properties": {
                    "date": {
                        "type": "string",
                        "description": "The date for which to obtain the weather forecast"
                    },
                    "location": {
                        "type": "string",
                        "description": "The location for which to query the weather"
                    },
                    "forecast_hours": {
                        "type": "integer",
                        "description": "Forecast time (hours)",
                        "minimum": 1,
                        "maximum": 24
                    }
                }
            },
            "results": {
                "type": "object",
                "properties": {
                    "weather_info": {
                        "type": "string",
                        "description": "Weather forecast information"
                    },
                    "weather_data": {
                        "type": "object",
                        "description": "The obtained weather data, including temperature, probability of precipitation, wind speed, etc."
                    },
                    "status": {
                        "type": "boolean",
                        "description": "Whether the retrieval operation was successful"
                    },
                    "temperature": {
                        "type": "string",
                        "description": "Temperature information"
                    },
                    "humidity": {
                        "type": "string",
                        "description": "Humidity information"
                    },
                    "weather_status": {
                        "type": "string",
                        "description": "Current weather condition description"
                    }
                }
            }
        },
        "conference_room_changing": {
            "name": "conference_room_changing",
            "description": "Conference Room Reservation Change Tool",
            "arguments": {
                "type": "object",
                "properties": {
                    "originalStartTime": {
                        "description": "The original meeting start time (date + time) that needs to be changed",
                        "type": "string"
                    },
                    "originalEndTime": {
                        "description": "The original meeting end time (date + time) that needs to be changed",
                        "type": "string"
                    },
                    "originalRoomID": {
                        "description": "The conference room ID that needs to be changed",
                        "type": "string"
                    },
                    "originalCity": {
                        "description": "The city where the conference room to be changed is located",
                        "type": "string"
                    },
                    "newStartTime": {
                        "description": "The new meeting start time (date + time). If not provided, the default is that the start time remains unchanged.",
                        "type": "string"
                    },
                    "newEndTime": {
                        "description": "The new meeting end time (date + time). If not provided, the default is that the end time remains unchanged.",
                        "type": "string"
                    },
                    "newRoomID": {
                        "description": "The new conference room ID. If not provided, the default is that the room ID remains unchanged.",
                        "type": "string"
                    },
                    "newCity": {
                        "description": "The city where the new conference room is located. If not provided, the default is that the city remains unchanged.",
                        "type": "string"
                    }
                }
            },
            "results": {
                "type": "object",
                "properties": {
                    "booking_status": {
                        "description": "The status of the conference room change",
                        "type": "string"
                    }
                }
            }
        },
        "create_virtual_meeting": {
            "name": "create_virtual_meeting",
            "description": "Create an online meeting room and obtain the meeting link and access credentials",
            "arguments": {
                "type": "object",
                "properties": {
                    "start_time": {
                        "type": "string",
                        "description": "Meeting start time"
                    },
                    "end_time": {
                        "type": "string",
                        "description": "Meeting end time"
                    }
                }
            },
            "results": {
                "type": "object",
                "properties": {
                    "booking_status": {
                        "type": "string",
                        "description": "Online meeting room booking status"
                    },
                    "meeting_link": {
                        "type": "string",
                        "description": "Online meeting link"
                    },
                    "access_credentials": {
                        "type": "string",
                        "description": "Access credentials"
                    }
                }
            }
        },
        "send_meeting_notification": {
            "name": "send_meeting_notification",
            "description": "Send meeting notification",
            "arguments": {
                "type": "object",
                "properties": {
                    "meeting_details": {
                        "type": "string",
                        "description": "Meeting details, including time, location, topics, etc."
                    },
                    "attendee_list": {
                        "type": "string",
                        "description": "List of attendees"
                    },
                    "date": {
                        "type": "string",
                        "description": "Meeting date"
                    },
                    "time": {
                        "type": "string",
                        "description": "Meeting time"
                    },
                    "location": {
                        "type": "string",
                        "description": "Meeting location"
                    },
                    "topic": {
                        "type": "string",
                        "description": "Meeting topic"
                    },
                    "agenda": {
                        "type": "string",
                        "description": "Meeting agenda"
                    },
                    "method": {
                        "type": "string",
                        "description": "Notification sending method, such as email or SMS"
                    },
                    "email_addresses": {
                        "type": "array",
                        "description": "List of team members' email addresses",
                        "items": {
                            "type": "string"
                        }
                    }
                }
            },
            "results": {
                "type": "object",
                "properties": {
                    "notification_status": {
                        "type": "string",
                        "description": "Notification sending status"
                    }
                }
            }
        },
        "check_room_booking_status": {
            "name": "check_room_booking_status",
            "description": "Check the booking status of a specified meeting room for a specific date and time range",
            "arguments": {
                "type": "object",
                "properties": {
                    "room_number": {
                        "type": "string",
                        "description": "Meeting room number"
                    },
                    "date": {
                        "type": "string",
                        "description": "Date"
                    },
                    "start_time": {
                        "type": "string",
                        "description": "Start time"
                    },
                    "time_range": {
                        "type": "string",
                        "description": "Time range"
                    }
                }
            },
            "results": {
                "type": "object",
                "properties": {
                    "booking_status": {
                        "type": "string",
                        "description": "Meeting room booking status"
                    },
                    "is_for_specified_meeting": {
                        "type": "boolean",
                        "description": "Whether booked for a specified meeting"
                    }
                }
            }
        },
        "create_meeting_reminder": {
            "name": "create_meeting_reminder",
            "description": "Create meeting reminder",
            "arguments": {
                "type": "object",
                "properties": {
                    "meeting_id": {
                        "type": "string",
                        "description": "Meeting ID"
                    },
                    "meeting_topic": {
                        "type": "string",
                        "description": "Meeting topic"
                    },
                    "meeting_time": {
                        "type": "string",
                        "description": "Meeting time"
                    },
                    "meeting_location": {
                        "type": "string",
                        "description": "Meeting location"
                    },
                    "reminder_time": {
                        "type": "integer",
                        "description": "Reminder time (minutes)"
                    },
                    "meeting_details": {
                        "type": "string",
                        "description": "Meeting details"
                    },
                    "title": {
                        "type": "string",
                        "description": "Title of the reminder"
                    }
                }
            },
            "results": {
                "type": "object",
                "properties": {
                    "status": {
                        "description": "Whether the meeting notification was successfully created",
                        "type": "string"
                    },
                    "meeting_notification": {
                        "type": "string",
                        "description": "Meeting notification content"
                    }
                }
            }
        },
        "arrange_technical_staff": {
            "name": "arrange_technical_staff",
            "description": "Arrange technical staff to prepare the required meeting facilities based on the meeting room number, city, and meeting time",
            "arguments": {
                "type": "object",
                "properties": {
                    "equipment_list": {
                        "type": "string",
                        "description": "List of meeting facilities to be prepared"
                    },
                    "roomID": {
                        "type": "string",
                        "description": "Meeting room number"
                    },
                    "city": {
                        "type": "string",
                        "description": "City where the meeting room is located"
                    },
                    "startTime": {
                        "type": "string",
                        "description": "Meeting start time"
                    },
                    "endTime": {
                        "type": "string",
                        "description": "Meeting end time"
                    }
                }
            },
            "results": {
                "type": "object",
                "properties": {
                    "arrangement_status": {
                        "type": "string",
                        "description": "Status of the facility preparation and testing"
                    }
                }
            }
        },
        "search_and_select_meeting_room": {
            "name": "search_and_select_meeting_room",
            "description": "Search and select a meeting room that meets the criteria",
            "arguments": {
                "type": "object",
                "properties": {
                    "location": {
                        "type": "string",
                        "description": "Location of the meeting room"
                    },
                    "meeting_time": {
                        "type": "string",
                        "description": "Meeting start time"
                    }
                }
            },
            "results": {
                "type": "object",
                "properties": {
                    "meeting_room_details": {
                        "type": "string",
                        "description": "Details of the selected meeting room"
                    }
                }
            }
        },
        "book_and_pay_for_meeting_room": {
            "name": "book_and_pay_for_meeting_room",
            "description": "Enter reservation information and complete payment for the meeting room",
            "arguments": {
                "type": "object",
                "properties": {
                    "meeting_room_details": {
                        "type": "string",
                        "description": "Meeting room details"
                    },
                    "meeting_time": {
                        "type": "string",
                        "description": "Meeting start time"
                    },
                    "duration": {
                        "type": "string",
                        "description": "Meeting duration"
                    },
                    "number_of_people": {
                        "type": "string",
                        "description": "Number of participants"
                    }
                }
            },
            "results": {
                "type": "object",
                "properties": {
                    "booking_status": {
                        "type": "string",
                        "description": "Meeting room booking status"
                    }
                }
            }
        },
        "assign_staff_to_meeting_room": {
            "name": "assign_staff_to_meeting_room",
            "description": "Assign staff to the meeting room",
            "arguments": {
                "type": "object",
                "properties": {
                    "meeting_room_address": {
                        "type": "string",
                        "description": "Meeting room address"
                    },
                    "entry_method": {
                        "type": "string",
                        "description": "Entry method"
                    }
                }
            },
            "results": {
                "type": "object",
                "properties": {
                    "assignment_status": {
                        "type": "string",
                        "description": "Staff assignment status"
                    }
                }
            }
        },
        "write_on_whiteboard": {
            "name": "write_on_whiteboard",
            "description": "Assign staff to write on the whiteboard in the meeting room",
            "arguments": {
                "type": "object",
                "properties": {
                    "content": {
                        "type": "string",
                        "description": "The content to be written on the whiteboard"
                    },
                    "staff": {
                        "type": "string",
                        "description": "The assigned staff member"
                    }
                }
            },
            "results": {
                "type": "object",
                "properties": {
                    "writing_status": {
                        "type": "string",
                        "description": "Whiteboard writing status"
                    }
                }
            }
        },
        "create_meeting_minutes": {
            "name": "create_meeting_minutes",
            "description": "Create meeting minutes document",
            "arguments": {
                "type": "object",
                "properties": {
                    "document_format": {
                        "type": "string",
                        "description": "Document format"
                    },
                    "content_items": {
                        "type": "string",
                        "description": "Contents required for meeting minutes"
                    }
                }
            },
            "results": {
                "type": "object",
                "properties": {
                    "document_creation_status": {
                        "type": "string",
                        "description": "Meeting minutes document creation status"
                    }
                }
            }
        },
        "share_document": {
            "name": "share_document",
            "description": "Used to share a document to a specified entity through a specified method",
            "arguments": {
                "type": "object",
                "properties": {
                    "file_path": {
                        "type": "string",
                        "description": "The path of the document to be shared"
                    },
                    "recipient": {
                        "type": "string",
                        "description": "Recipient's email or sharing platform account"
                    },
                    "document_type": {
                        "type": "string",
                        "description": "Type of the document"
                    },
                    "share_method": {
                        "type": "string",
                        "description": "Method of sharing"
                    }
                }
            },
            "results": {
                "type": "object",
                "properties": {
                    "status": {
                        "description": "Whether the sharing operation was successful",
                        "type": "boolean"
                    }
                }
            }
        },
        "calendar_annotation": {
            "name": "calendar_annotation",
            "description": "Add annotations in the calendar",
            "arguments": {
                "type": "object",
                "properties": {
                    "annotation_id": {
                        "type": "string",
                        "description": "The id of the annotation"
                    },
                    "date": {
                        "type": "string",
                        "description": "The date the annotation is added"
                    },
                    "annotation_time": {
                        "type": "string",
                        "description": "The time of the annotation"
                    },
                    "annotation_location": {
                        "type": "string",
                        "description": "The geographical location of the annotation"
                    },
                    "annotation_content": {
                        "type": "string",
                        "description": "The content of the annotation"
                    }
                }
            },
            "results": {
                "type": "object",
                "properties": {
                    "outcome": {
                        "description": "Whether the annotation was successfully added",
                        "type": "string"
                    }
                }
            }
        },
        "calendar_note": {
            "name": "calendar_note",
            "description": "Add calendar note",
            "arguments": {
                "type": "object",
                "properties": {
                    "note_id": {
                        "type": "string",
                        "description": "ID of the note"
                    },
                    "event_title": {
                        "type": "string",
                        "description": "Title of the event"
                    },
                    "note_date": {
                        "type": "string",
                        "description": "Date of the note"
                    },
                    "note_content": {
                        "type": "string",
                        "description": "Content of the note"
                    },
                    "priority_level": {
                        "type": "integer",
                        "description": "Priority level of the note (1-5)"
                    }
                }
            },
            "results": {
                "type": "object",
                "properties": {
                    "status": {
                        "description": "Whether the note was successfully added",
                        "type": "string"
                    }
                }
            }
        },
        "add_calendar_note": {
            "name": "add_calendar_note",
            "description": "Add a note to the calendar",
            "arguments": {
                "type": "object",
                "properties": {
                    "note_id": {
                        "type": "string",
                        "description": "The ID of the note"
                    },
                    "calendar_date": {
                        "type": "string",
                        "description": "The date of the calendar"
                    },
                    "note_content": {
                        "type": "string",
                        "description": "The content of the note"
                    },
                    "note_priority": {
                        "type": "string",
                        "description": "The priority of the note"
                    },
                    "note_category": {
                        "type": "string",
                        "description": "The category of the note"
                    }
                }
            },
            "results": {
                "type": "object",
                "properties": {
                    "outcome": {
                        "description": "Whether the note was successfully added",
                        "type": "string"
                    }
                }
            }
        }
    },
    "Account": {
        "account_login": {
            "name": "account_login",
            "description": "Account Login Tool",
            "arguments": {
                "type": "object",
                "properties": {
                    "account_id": {
                        "description": "Account ID",
                        "type": "integer"
                    },
                    "verification_code": {
                        "description": "Verification Code",
                        "type": "string"
                    },
                    "username": {
                        "description": "Username",
                        "type": "string"
                    },
                    "password": {
                        "description": "User Password",
                        "type": "string"
                    }
                }
            },
            "results": {
                "type": "object",
                "properties": {
                    "login_status": {
                        "description": "Login Status",
                        "type": "string"
                    }
                }
            }
        },
        "update_account_info": {
            "name": "update_account_info",
            "description": "Account Information Update Tool",
            "arguments": {
                "type": "object",
                "properties": {
                    "account_id": {
                        "description": "Account ID",
                        "type": "integer"
                    }
                }
            },
            "results": {
                "type": "object",
                "properties": {
                    "update_status": {
                        "description": "Information Update Status",
                        "type": "string"
                    }
                }
            }
        },
        "account_logout": {
            "name": "account_logout",
            "description": "Account Logout Tool",
            "arguments": {
                "type": "object",
                "properties": {
                    "account_id": {
                        "description": "Account ID",
                        "type": "string"
                    }
                }
            },
            "results": {
                "type": "object",
                "properties": {
                    "logout_status": {
                        "description": "Logout Status",
                        "type": "string"
                    }
                }
            }
        },
        "check_account_functionality": {
            "name": "check_account_functionality",
            "description": "Verify the functionality of the account to confirm login status",
            "arguments": {
                "type": "object",
                "properties": {
                    "account_id": {
                        "type": "integer",
                        "description": "Account ID"
                    }
                }
            },
            "results": {
                "type": "object",
                "properties": {
                    "functionality_status": {
                        "type": "string",
                        "description": "Account functionality status"
                    }
                }
            }
        },
        "view_login_records": {
            "name": "view_login_records",
            "description": "View and retrieve login records of a specified account within a specified time range",
            "arguments": {
                "type": "object",
                "properties": {
                    "account_id": {
                        "type": "integer",
                        "description": "Account ID"
                    },
                    "time_range": {
                        "type": "string",
                        "description": "Time range to query"
                    }
                }
            },
            "results": {
                "type": "object",
                "properties": {
                    "login_records": {
                        "description": "Obtained login record information",
                        "type": "string"
                    }
                }
            }
        }
    },
    "Travel": {
        "flight_search": {
            "name": "flight_search",
            "description": "Flight Ticket Search Tool",
            "arguments": {
                "type": "object",
                "properties": {
                    "departure_date": {
                        "type": "string",
                        "description": "Departure Date"
                    },
                    "return_date": {
                        "type": "string",
                        "description": "Return Date"
                    },
                    "destination": {
                        "type": "string",
                        "description": "Destination"
                    },
                    "departure_city": {
                        "type": "string",
                        "description": "Departure City"
                    },
                    "arrival_city": {
                        "type": "string",
                        "description": "Arrival City"
                    },
                    "departure_time": {
                        "type": "string",
                        "description": "Earliest Departure Time"
                    },
                    "directFlight": {
                        "type": "boolean",
                        "description": "Direct Flight"
                    },
                    "flightNumber": {
                        "type": "string",
                        "description": "Flight Number"
                    },
                    "priceLimit": {
                        "type": "string",
                        "description": "Price Limit"
                    },
                    "bookingName": {
                        "type": "string",
                        "description": "Booking Name"
                    },
                    "cabinClass": {
                        "type": "string",
                        "description": "Cabin Class"
                    },
                    "timePeriod": {
                        "type": "string",
                        "description": "Time Period, e.g., 'morning'"
                    }
                }
            },
            "results": {
                "type": "object",
                "properties": {
                    "flight_options": {
                        "type": "array",
                        "description": "List of Available Flight Options",
                        "items": {
                            "type": "object"
                        }
                    },
                    "selected_flight_price": {
                        "type": "integer",
                        "description": "Price of the Selected Flight"
                    }
                }
            }
        },
        "book_flight": {
            "name": "book_flight",
            "description": "Flight booking tool",
            "arguments": {
                "type": "object",
                "properties": {
                    "ticket_info": {
                        "description": "Flight information, including flight number, date, time, departure place, and destination",
                        "type": "string"
                    },
                    "passenger_info": {
                        "description": "Passenger information, including name and ID number",
                        "type": "string"
                    },
                    "payment_info": {
                        "description": "Payment information, including payment method and amount",
                        "type": "string"
                    },
                    "departure_date": {
                        "type": "string",
                        "description": "Departure date"
                    },
                    "departure_city": {
                        "type": "string",
                        "description": "Departure city"
                    },
                    "departure_time": {
                        "type": "string",
                        "description": "Departure time"
                    },
                    "destination_city": {
                        "type": "string",
                        "description": "Destination city"
                    },
                    "flight_number": {
                        "type": "string",
                        "description": "Flight number"
                    },
                    "airline": {
                        "type": "string",
                        "description": "Airline"
                    },
                    "price": {
                        "type": "number",
                        "description": "Ticket price"
                    },
                    "seat_preference": {
                        "type": "string",
                        "description": "Seat preference"
                    },
                    "seat_class": {
                        "type": "string",
                        "description": "Seat class"
                    },
                    "passenger_name": {
                        "type": "string",
                        "description": "Passenger name"
                    },
                    "passenger_id": {
                        "type": "string",
                        "description": "Passenger ID number"
                    },
                    "flight": {
                        "type": "object",
                        "description": "Selected flight"
                    },
                    "group_size": {
                        "type": "integer",
                        "description": "Group size for travel"
                    },
                    "amenities": {
                        "type": "array",
                        "description": "List of required amenities",
                        "items": {
                            "type": "string"
                        }
                    },
                    "flight_details": {
                        "type": "string",
                        "description": "Flight details"
                    },
                    "number_of_passengers": {
                        "type": "integer",
                        "description": "Number of passengers"
                    },
                    "passenger_details": {
                        "type": "string",
                        "description": "Passenger details"
                    },
                    "window_seat": {
                        "type": "boolean",
                        "description": "Whether a window seat is required"
                    },
                    "mealService": {
                        "description": "Whether meal service is provided",
                        "type": "boolean"
                    },
                    "mealPreference": {
                        "description": "Meal preference",
                        "type": "string"
                    },
                    "contactInfo": {
                        "description": "User contact information",
                        "type": "string"
                    },
                    "options": {
                        "type": "object",
                        "properties": {
                            "cancellation": {
                                "type": "boolean",
                                "description": "Whether a free cancellation option is needed"
                            },
                            "change": {
                                "type": "boolean",
                                "description": "Whether a free change option is needed"
                            }
                        },
                        "required": [
                            "cancellation",
                            "change"
                        ]
                    }
                }
            },
            "results": {
                "type": "object",
                "properties": {
                    "booking_status": {
                        "description": "Booking status",
                        "type": "string"
                    },
                    "booking_details": {
                        "type": "string",
                        "description": "Booking details"
                    },
                    "e_ticket": {
                        "type": "string",
                        "description": "E-ticket information"
                    },
                    "booking_reference": {
                        "type": "string",
                        "description": "Booking reference information"
                    },
                    "ticket_price": {
                        "type": "number",
                        "description": "Ticket price"
                    },
                    "booking_confirmation": {
                        "type": "object",
                        "description": "Booking confirmation information, including booking status and ticket details"
                    },
                    "flight_details": {
                        "type": "object",
                        "description": "Flight details"
                    },
                    "ticket_info": {
                        "description": "Booked ticket information",
                        "type": "string"
                    }
                }
            }
        },
        "hotel_search": {
            "name": "hotel_search",
            "description": "Search for hotels that meet the criteria and return a list",
            "arguments": {
                "type": "object",
                "properties": {
                    "location": {
                        "type": "string",
                        "description": "Hotel location"
                    },
                    "check_in_date": {
                        "type": "string",
                        "description": "Check-in date"
                    },
                    "check_out_date": {
                        "type": "string",
                        "description": "Check-out date"
                    },
                    "guests": {
                        "description": "Number of guests",
                        "type": "integer"
                    },
                    "city": {
                        "type": "string",
                        "description": "City of stay"
                    },
                    "stay_duration": {
                        "description": "Duration of stay",
                        "type": "integer"
                    },
                    "stars": {
                        "type": "integer",
                        "description": "Hotel star rating"
                    },
                    "budget": {
                        "type": "integer",
                        "description": "Budget"
                    },
                    "room_type": {
                        "type": "string",
                        "description": "Room type"
                    },
                    "number_of_rooms": {
                        "type": "integer",
                        "description": "Number of rooms"
                    },
                    "hotel_name": {
                        "type": "string",
                        "description": "Hotel name to search for"
                    }
                }
            },
            "results": {
                "type": "object",
                "properties": {
                    "hotel_info": {
                        "type": "string",
                        "description": "Filtered hotel information"
                    },
                    "hotel_options": {
                        "type": "array",
                        "description": "List of available hotels"
                    },
                    "search_status": {
                        "description": "Search status",
                        "type": "string"
                    },
                    "hotel_id": {
                        "type": "string",
                        "description": "Hotel ID that meets the criteria"
                    },
                    "availability": {
                        "type": "boolean",
                        "description": "Availability of rooms"
                    },
                    "price": {
                        "type": "number",
                        "description": "Price"
                    }
                }
            }
        },
        "hotel_booking": {
            "name": "hotel_booking",
            "description": "Complete the hotel room booking process",
            "arguments": {
                "type": "object",
                "properties": {
                    "hotelName": {
                        "type": "string",
                        "description": "Hotel Name"
                    },
                    "checkInDate": {
                        "type": "string",
                        "description": "Check-in Date"
                    },
                    "checkOutDate": {
                        "type": "string",
                        "description": "Check-out Date"
                    },
                    "room_orientation": {
                        "type": "string",
                        "description": "Room Orientation"
                    },
                    "roomType": {
                        "type": "string",
                        "description": "Room Type"
                    },
                    "contactPhone": {
                        "type": "string",
                        "description": "Contact Phone"
                    },
                    "hotel_id": {
                        "type": "string",
                        "description": "Hotel Identifier ID"
                    },
                    "number_of_rooms": {
                        "type": "integer",
                        "description": "Number of Rooms Booked"
                    },
                    "city": {
                        "type": "string",
                        "description": "City of Stay"
                    },
                    "area": {
                        "type": "string",
                        "description": "Area of Stay"
                    },
                    "brand": {
                        "type": "string",
                        "description": "Hotel Brand"
                    },
                    "contact_info": {
                        "type": "integer",
                        "description": "Contact Information"
                    },
                    "budget": {
                        "type": "integer",
                        "description": "Accommodation Budget"
                    },
                    "nights": {
                        "type": "integer",
                        "description": "Number of Nights"
                    },
                    "personal_info": {
                        "type": "string",
                        "description": "Personal Information of the User"
                    },
                    "payment_info": {
                        "type": "string",
                        "description": "Payment Information of the User"
                    },
                    "breakfast_included": {
                        "type": "string",
                        "description": "Breakfast Included"
                    },
                    "special_request": {
                        "type": "string",
                        "description": "Special Request"
                    },
                    "guestName": {
                        "type": "string",
                        "description": "Guest Name"
                    },
                    "guestID": {
                        "type": "string",
                        "description": "Guest ID Number"
                    },
                    "phoneNumber": {
                        "type": "string",
                        "description": "Customer Phone Number"
                    },
                    "email": {
                        "type": "string",
                        "description": "Customer Email"
                    }
                }
            },
            "results": {
                "type": "object",
                "properties": {
                    "reservation_status": {
                        "type": "string",
                        "description": "Reservation Status"
                    },
                    "reservation_details": {
                        "type": "string",
                        "description": "Reservation Details"
                    },
                    "confirmation_number": {
                        "type": "string",
                        "description": "Booking Confirmation Number"
                    },
                    "bookingDetails": {
                        "type": "object",
                        "properties": {
                            "confirmationNumber": {
                                "type": "string",
                                "description": "Booking Confirmation Number"
                            },
                            "totalPrice": {
                                "type": "integer",
                                "description": "Total Price"
                            }
                        }
                    }
                }
            }
        },
        "tour_guide_service": {
            "name": "tour_guide_service",
            "description": "Professional Tour Guide Service Inquiry Tool",
            "arguments": {
                "type": "object",
                "properties": {
                    "destination": {
                        "description": "Travel Destination",
                        "type": "string"
                    },
                    "date": {
                        "description": "Travel Date",
                        "type": "string",
                        "format": "date-time"
                    },
                    "language": {
                        "description": "Required Guide Language",
                        "type": "string"
                    },
                    "duration": {
                        "description": "Required Guide Duration",
                        "type": "string"
                    }
                }
            },
            "results": {
                "type": "object",
                "properties": {
                    "guide_info": {
                        "description": "Guide Information",
                        "type": "string"
                    }
                }
            }
        },
        "confirm_inclusion": {
            "name": "confirm_inclusion",
            "description": "Confirm the items included in the service quotation",
            "arguments": {
                "type": "object",
                "properties": {
                    "inclusions": {
                        "type": "array",
                        "description": "List of included items to be confirmed"
                    }
                }
            },
            "results": {
                "type": "object",
                "properties": {
                    "confirmation": {
                        "type": "array",
                        "description": "Confirmation results for whether each item is included in the service quotation"
                    }
                }
            }
        },
        "book_tour_guide": {
            "name": "book_tour_guide",
            "description": "Book tour guide service",
            "arguments": {
                "type": "object",
                "properties": {
                    "guide_info": {
                        "type": "string",
                        "description": "Selected guide information"
                    },
                    "service_date": {
                        "type": "string",
                        "description": "Service date"
                    },
                    "personal_info": {
                        "type": "object",
                        "description": "Personal information"
                    },
                    "service_requirements": {
                        "type": "object",
                        "description": "Service requirements"
                    },
                    "language": {
                        "type": "string",
                        "description": "Guide language"
                    },
                    "location": {
                        "type": "string",
                        "description": "Travel location"
                    }
                }
            },
            "results": {
                "type": "object",
                "properties": {
                    "booking_status": {
                        "type": "string",
                        "description": "Tour guide service booking status"
                    },
                    "payment_status": {
                        "type": "string",
                        "description": "Payment status"
                    },
                    "booking_details": {
                        "type": "string",
                        "description": "Booking details"
                    },
                    "confirmation_voucher": {
                        "type": "string",
                        "description": "Service confirmation voucher"
                    }
                }
            }
        },
        "company_vehicle_service": {
            "name": "company_vehicle_service",
            "description": "Company Vehicle Service Reservation Lookup Tool",
            "arguments": {
                "type": "object",
                "properties": {
                    "queryTime": {
                        "description": "Reservation Time",
                        "type": "string",
                        "format": "date-time"
                    },
                    "departure": {
                        "description": "Departure Location",
                        "type": "string"
                    },
                    "destination": {
                        "description": "Destination",
                        "type": "string"
                    }
                }
            },
            "results": {
                "type": "object",
                "properties": {
                    "vehicle_details": {
                        "description": "Vehicle Details",
                        "type": "object"
                    }
                }
            }
        },
        "book_vehicle": {
            "name": "book_vehicle",
            "description": "Book vehicle service and confirm itinerary",
            "arguments": {
                "type": "object",
                "properties": {
                    "date": {
                        "type": "string",
                        "description": "Reservation date"
                    },
                    "time": {
                        "type": "string",
                        "description": "Reservation time"
                    },
                    "destination": {
                        "type": "string",
                        "description": "Destination"
                    },
                    "vehicle_type": {
                        "type": "string",
                        "description": "Vehicle type"
                    },
                    "departure": {
                        "type": "string",
                        "description": "Departure location"
                    }
                }
            },
            "results": {
                "type": "object",
                "properties": {
                    "vehicle_booked": {
                        "type": "boolean",
                        "description": "Whether the vehicle is booked successfully"
                    },
                    "booking_status": {
                        "type": "string",
                        "description": "Booking status"
                    }
                }
            }
        },
        "outward_reception_approval": {
            "name": "outward_reception_approval",
            "description": "External Reception Approval Process Tool",
            "arguments": {
                "type": "object",
                "properties": {
                    "appointment_time": {
                        "description": "Appointment Time",
                        "type": "string",
                        "format": "date-time"
                    },
                    "visitors": {
                        "description": "Visitors",
                        "type": "string"
                    },
                    "visitor_unit": {
                        "description": "Visitor's Unit",
                        "type": "string"
                    },
                    "visited_person": {
                        "description": "Visited Person",
                        "type": "string"
                    },
                    "visited_department": {
                        "description": "Visited Department",
                        "type": "string"
                    }
                }
            },
            "results": {
                "type": "object",
                "properties": {
                    "approval_status": {
                        "description": "Approval Status",
                        "type": "string"
                    }
                }
            }
        },
        "business_travel_standard_search": {
            "name": "business_travel_standard_search",
            "description": "Business Travel Standard Inquiry Tool",
            "arguments": {
                "type": "object",
                "properties": {
                    "department_or_level": {
                        "description": "Department or Level",
                        "type": "string"
                    },
                    "destination_city": {
                        "description": "Destination City",
                        "type": "string"
                    }
                }
            },
            "results": {
                "type": "object",
                "properties": {
                    "accommodation_standard": {
                        "description": "Accommodation Standard",
                        "type": "number"
                    },
                    "meal_subsidy_standard": {
                        "description": "Meal Subsidy Standard",
                        "type": "number"
                    },
                    "transportation_standard": {
                        "description": "Transportation Standard",
                        "type": "number"
                    }
                }
            }
        },
        "business_trip_ticket_search": {
            "name": "business_trip_ticket_search",
            "description": "Flight ticket inquiry for tickets that can be booked on the same day",
            "arguments": {
                "type": "object",
                "properties": {
                    "departureTime": {
                        "description": "Scheduled departure time",
                        "type": "string"
                    },
                    "departureLocation": {
                        "description": "Departure location",
                        "type": "string"
                    },
                    "destination": {
                        "description": "Destination",
                        "type": "string"
                    },
                    "class": {
                        "description": "Cabin class",
                        "type": "string"
                    }
                }
            },
            "results": {
                "type": "object",
                "properties": {
                    "ticket_reservation_status": {
                        "description": "Ticket reservation status",
                        "type": "string"
                    }
                }
            }
        },
        "business_trip_ticket_reservation": {
            "name": "business_trip_ticket_reservation",
            "description": "For business trip flight booking",
            "arguments": {
                "type": "object",
                "properties": {
                    "name": {
                        "description": "Name of the person on the business trip",
                        "type": "string"
                    },
                    "identityNumber": {
                        "description": "Identity card number of the person on the business trip",
                        "type": "string"
                    },
                    "departureTime": {
                        "description": "Scheduled departure time",
                        "type": "string"
                    },
                    "departureLocation": {
                        "description": "Departure location",
                        "type": "string"
                    },
                    "destination": {
                        "description": "Destination",
                        "type": "string"
                    },
                    "class": {
                        "description": "Cabin class",
                        "type": "string"
                    },
                    "flightNumber": {
                        "description": "Flight number",
                        "type": "string"
                    }
                }
            },
            "results": {
                "type": "object",
                "properties": {
                    "ticket_reservation_status": {
                        "description": "Ticket reservation status",
                        "type": "string"
                    }
                }
            }
        },
        "travel_agency_search": {
            "name": "travel_agency_search",
            "description": "Travel Agency Search Tool",
            "arguments": {
                "type": "object",
                "properties": {
                    "destination": {
                        "description": "Destination",
                        "type": "string"
                    },
                    "departureDate": {
                        "description": "Departure Date",
                        "type": "string"
                    },
                    "returnDate": {
                        "description": "Return Date",
                        "type": "string"
                    }
                }
            },
            "results": {
                "type": "object",
                "properties": {
                    "agency_info": {
                        "description": "Travel Agency Information",
                        "type": "array"
                    }
                }
            }
        },
        "submit_booking_request": {
            "name": "submit_booking_request",
            "description": "Submit travel booking request",
            "arguments": {
                "type": "object",
                "properties": {
                    "guide_info": {
                        "type": "string",
                        "description": "Selected guide information"
                    },
                    "user_name": {
                        "type": "string",
                        "description": "User's name"
                    },
                    "contact": {
                        "type": "string",
                        "description": "User's contact information"
                    },
                    "start_time": {
                        "type": "string",
                        "description": "Service start time"
                    },
                    "end_time": {
                        "type": "string",
                        "description": "Service end time"
                    },
                    "user_info": {
                        "type": "object",
                        "description": "User's personal information",
                        "properties": {
                            "name": {
                                "type": "string"
                            },
                            "id_number": {
                                "type": "string"
                            },
                            "contact": {
                                "type": "string"
                            }
                        }
                    },
                    "preferences": {
                        "type": "object",
                        "description": "User's travel preferences",
                        "properties": {
                            "seat_preference": {
                                "type": "string"
                            },
                            "meal_preference": {
                                "type": "string"
                            }
                        }
                    },
                    "package_details": {
                        "type": "string",
                        "description": "Travel package details"
                    }
                }
            },
            "results": {
                "type": "object",
                "properties": {
                    "booking_info": {
                        "description": "Return information of the booking request",
                        "type": "string"
                    },
                    "booking_status": {
                        "type": "string",
                        "description": "Status of the booking request"
                    }
                }
            }
        },
        "travel_plan_maker": {
            "name": "travel_plan_maker",
            "description": "Travel Itinerary Planning Tool",
            "arguments": {
                "type": "object",
                "properties": {
                    "start_date": {
                        "type": "string",
                        "description": "Travel Start Date"
                    },
                    "end_date": {
                        "type": "string",
                        "description": "Travel End Date"
                    },
                    "destination": {
                        "type": "string",
                        "description": "Travel Destination"
                    },
                    "weather_forecast": {
                        "type": "array",
                        "description": "Weather Forecast Data",
                        "items": {
                            "type": "object",
                            "properties": {
                                "date": {
                                    "type": "string",
                                    "format": "date"
                                },
                                "weather": {
                                    "type": "string"
                                }
                            },
                            "required": [
                                "date",
                                "weather"
                            ]
                        }
                    },
                    "preferences": {
                        "type": "object",
                        "properties": {
                            "indoor_activities": {
                                "type": "array",
                                "description": "List of Indoor Activities",
                                "items": {
                                    "type": "string"
                                }
                            },
                            "outdoor_activities": {
                                "type": "array",
                                "description": "List of Outdoor Activities",
                                "items": {
                                    "type": "string"
                                }
                            }
                        },
                        "required": [
                            "indoor_activities",
                            "outdoor_activities"
                        ]
                    },
                    "budget": {
                        "description": "Budget Amount",
                        "type": "integer"
                    },
                    "interests": {
                        "description": "Travel Interests, such as gourmet food, historical sites, natural scenery, etc.",
                        "type": "string"
                    }
                }
            },
            "results": {
                "type": "object",
                "properties": {
                    "itinerary": {
                        "description": "Detailed Travel Itinerary",
                        "type": "string"
                    },
                    "travel_plan": {
                        "description": "Generated Travel Plan",
                        "type": "array"
                    }
                }
            }
        },
        "travel_insurance_search": {
            "name": "travel_insurance_search",
            "description": "Travel Insurance Query Tool",
            "arguments": {
                "type": "object",
                "properties": {
                    "destination": {
                        "description": "Travel Destination",
                        "type": "string"
                    },
                    "duration": {
                        "description": "Number of Travel Days",
                        "type": "integer"
                    },
                    "age": {
                        "description": "Traveler's Age",
                        "type": "integer"
                    },
                    "start_date": {
                        "description": "Departure Date",
                        "type": "string"
                    }
                }
            },
            "results": {
                "type": "object",
                "properties": {
                    "insurance_plan": {
                        "description": "Recommended Travel Insurance Plan",
                        "type": "string"
                    }
                }
            }
        },
        "car_rental_booking": {
            "name": "car_rental_booking",
            "description": "Car Rental Booking Tool",
            "arguments": {
                "type": "object",
                "properties": {
                    "carType": {
                        "description": "Vehicle Type",
                        "type": "string"
                    },
                    "rentalPeriod": {
                        "description": "Rental Period",
                        "type": "integer"
                    },
                    "pickupDate": {
                        "description": "Pick-up Date",
                        "type": "string"
                    },
                    "location": {
                        "description": "Pick-up Location",
                        "type": "string"
                    },
                    "startDate": {
                        "description": "Start Date of Car Rental (Date + Time)",
                        "type": "string"
                    },
                    "endDate": {
                        "description": "End Date of Car Rental (Date + Time)",
                        "type": "string"
                    },
                    "carID": {
                        "description": "Car ID",
                        "type": "string"
                    },
                    "city": {
                        "description": "Pick-up City",
                        "type": "string"
                    },
                    "dropOffCity": {
                        "description": "Drop-off City",
                        "type": "string"
                    },
                    "contactInfo": {
                        "description": "Customer Contact Information",
                        "type": "string"
                    },
                    "customerName": {
                        "description": "Customer Name",
                        "type": "string"
                    },
                    "contact": {
                        "description": "Customer Contact Method",
                        "type": "string"
                    },
                    "driverLicense": {
                        "description": "Customer Driver's License Information",
                        "type": "string"
                    },
                    "carModel": {
                        "description": "Car Model",
                        "type": "string"
                    }
                }
            },
            "results": {
                "type": "object",
                "properties": {
                    "totalCost": {
                        "description": "Total Rental Cost",
                        "type": "number"
                    },
                    "booking_status": {
                        "description": "Car Rental Booking Status",
                        "type": "string"
                    },
                    "price": {
                        "description": "Car Rental Price",
                        "type": "string"
                    },
                    "confirmation_status": {
                        "description": "Booking Confirmation Status",
                        "type": "string"
                    },
                    "contract": {
                        "description": "Rental Contract Information",
                        "type": "string"
                    },
                    "pickup_info": {
                        "description": "Vehicle Pickup Information",
                        "type": "string"
                    },
                    "rental_company": {
                        "description": "Car Rental Company Name",
                        "type": "string"
                    },
                    "car_model": {
                        "description": "Vehicle Model",
                        "type": "string"
                    },
                    "confirmation_info": {
                        "description": "Booking Confirmation Information",
                        "type": "string"
                    },
                    "rental_confirmation": {
                        "description": "Rental Confirmation",
                        "type": "string"
                    }
                }
            }
        },
        "route_planning": {
            "name": "route_planning",
            "description": "Traffic Route Planning Tool",
            "arguments": {
                "type": "object",
                "properties": {
                    "start": {
                        "type": "string",
                        "description": "Starting Point Name"
                    },
                    "destination": {
                        "type": "string",
                        "description": "Destination Name"
                    },
                    "travel_mode": {
                        "type": "string",
                        "description": "Mode of Travel"
                    },
                    "startPoint": {
                        "description": "Starting point, must be valid latitude and longitude coordinates",
                        "type": "string",
                        "format": "coordinate",
                        "example": "39.9042,116.4074"
                    },
                    "endPoint": {
                        "description": "End point, must be valid latitude and longitude coordinates",
                        "type": "string",
                        "format": "coordinate",
                        "example": "31.2304,121.4737"
                    },
                    "departureTime": {
                        "description": "Departure time, must be a valid date and in the future",
                        "type": "string",
                        "format": "date-time",
                        "example": "2023-05-31T13:00:00Z"
                    },
                    "avoidHighways": {
                        "description": "Whether to avoid highways, can only be true or false",
                        "type": "boolean",
                        "example": false
                    },
                    "avoidTolls": {
                        "description": "Whether to avoid toll roads, can only be true or false",
                        "type": "boolean"
                    },
                    "preferGreenTravel": {
                        "description": "Whether to prefer environmentally friendly modes of travel, can only be true or false",
                        "type": "boolean"
                    },
                    "safety_distance": {
                        "type": "string",
                        "description": "Safety distance, in meters"
                    },
                    "speed": {
                        "type": "string",
                        "description": "Estimated speed, in km/h"
                    },
                    "weather": {
                        "type": "string",
                        "description": "Weather conditions"
                    }
                }
            },
            "results": {
                "type": "object",
                "properties": {
                    "route": {
                        "type": "string",
                        "description": "Route Guidance"
                    },
                    "status": {
                        "type": "string",
                        "description": "Route Planning Status"
                    }
                }
            }
        },
        "send_notifications": {
            "name": "send_notifications",
            "description": "Send notifications to users",
            "arguments": {
                "type": "object",
                "properties": {
                    "message": {
                        "type": "string",
                        "description": "Notification content"
                    },
                    "event": {
                        "type": "string",
                        "description": "Event name"
                    },
                    "time": {
                        "type": "string",
                        "description": "Time"
                    },
                    "phone": {
                        "type": "string",
                        "description": "Phone number"
                    },
                    "participants": {
                        "type": "array",
                        "description": "List of participant emails",
                        "items": {
                            "type": "string",
                            "format": "email"
                        }
                    },
                    "notification_type": {
                        "type": "string",
                        "description": "Type of notification"
                    },
                    "meeting_id": {
                        "type": "string",
                        "description": "Meeting ID to notify"
                    },
                    "schedule_id": {
                        "type": "string",
                        "description": "Schedule ID of the meeting"
                    },
                    "agenda_id": {
                        "type": "string",
                        "description": "Agenda ID of the meeting"
                    },
                    "start_time": {
                        "type": "string",
                        "description": "Meeting start time"
                    },
                    "end_time": {
                        "type": "string",
                        "description": "Meeting end time"
                    },
                    "gate_info": {
                        "type": "string",
                        "description": "Boarding gate information"
                    },
                    "seatNumber": {
                        "type": "string",
                        "description": "Seat number"
                    },
                    "location": {
                        "type": "string",
                        "description": "Location"
                    },
                    "meeting_topic": {
                        "type": "string",
                        "description": "Meeting topic"
                    },
                    "contact": {
                        "type": "string",
                        "description": "Contact information"
                    },
                    "transactionID": {
                        "type": "string",
                        "description": "Transaction ID"
                    },
                    "activities": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "name": {
                                    "type": "string",
                                    "description": "Activity name"
                                },
                                "date": {
                                    "type": "string",
                                    "format": "date-time",
                                    "description": "Activity date and time"
                                }
                            }
                        },
                        "description": "List of activities"
                    },
                    "student_count": {
                        "type": "integer",
                        "description": "Number of students to notify",
                        "minimum": 1
                    },
                    "notification_method": {
                        "type": "string",
                        "description": "Method of sending notifications"
                    },
                    "recipients": {
                        "type": "array",
                        "description": "List of notification recipients",
                        "items": {
                            "type": "string"
                        }
                    }
                }
            },
            "results": {
                "type": "object",
                "properties": {
                    "notification_status": {
                        "type": "string",
                        "description": "Notification sending status"
                    }
                }
            }
        },
        "special_vehicle_rental_service": {
            "name": "special_vehicle_rental_service",
            "description": "Provides rental services for various types of vehicles including cars, SUVs, business vehicles, and sports cars. Users need to provide information such as rental period, type of driver's license, and whether to purchase vehicle insurance",
            "arguments": {
                "type": "object",
                "properties": {
                    "vehicle_type": {
                        "description": "Vehicle type",
                        "type": "string",
                        "enum": [
                            "Car",
                            "SUV",
                            "Business vehicle",
                            "Sports car"
                        ]
                    },
                    "rental_period": {
                        "description": "Rental period",
                        "type": "string",
                        "format": "date-time",
                        "example": "2023-05-17"
                    },
                    "license_type": {
                        "description": "Driver's license type",
                        "type": "string",
                        "enum": [
                            "C1",
                            "C2",
                            "B1",
                            "B2",
                            "A1",
                            "A2"
                        ]
                    },
                    "insurance_purchased": {
                        "description": "Whether to purchase rental car insurance",
                        "type": "boolean"
                    },
                    "pickup_location": {
                        "description": "Pickup location",
                        "type": "string",
                        "example": "Shanghai Hongqiao Airport"
                    },
                    "return_location": {
                        "description": "Return location",
                        "type": "string",
                        "example": "Pudong International Airport"
                    }
                }
            },
            "results": {
                "type": "object",
                "properties": {
                    "booking_status": {
                        "description": "Booking status of the rental car",
                        "type": "string"
                    }
                }
            }
        },
        "gourmet_tour_guide": {
            "name": "gourmet_tour_guide",
            "description": "A tool that provides recommendations for local delicacies and dining discounts, supporting only major cities in Europe, Asia, North America, and Australia",
            "arguments": {
                "type": "object",
                "properties": {
                    "continent": {
                        "description": "Continent",
                        "type": "string",
                        "enum": [
                            "Europe",
                            "Asia",
                            "North America",
                            "Australia"
                        ]
                    },
                    "city": {
                        "description": "City",
                        "type": "string"
                    },
                    "cuisine_type": {
                        "description": "Restaurant Type",
                        "type": "string",
                        "enum": [
                            "Chinese Cuisine",
                            "Western Cuisine",
                            "Japanese Cuisine",
                            "Korean Barbecue",
                            "Seafood",
                            "Vegetarian"
                        ]
                    },
                    "budget": {
                        "description": "Budget",
                        "type": "number",
                        "minimum": 0
                    },
                    "special_dietary_requirement": {
                        "description": "Special Dietary Requirement",
                        "type": "string"
                    }
                }
            },
            "results": {
                "type": "object",
                "properties": {
                    "recommended_restaurants": {
                        "description": "Recommended Restaurant Information",
                        "type": "string"
                    }
                }
            }
        },
        "scenic_spot_ticket_search": {
            "name": "scenic_spot_ticket_search",
            "description": "Scenic Spot Ticket Inquiry Tool",
            "arguments": {
                "type": "object",
                "properties": {
                    "scenicSpotName": {
                        "description": "Scenic Spot Name",
                        "type": "string"
                    },
                    "visitDate": {
                        "description": "Visit Date",
                        "type": "string"
                    }
                }
            },
            "results": {
                "type": "object",
                "properties": {
                    "ticket_price": {
                        "description": "Ticket Price",
                        "type": "number"
                    }
                }
            }
        },
        "official_ticket_platform_search": {
            "name": "official_ticket_platform_search",
            "description": "Search for official ticketing platform and ticket purchase process guide link",
            "arguments": {
                "type": "object",
                "properties": {
                    "scenicSpotName": {
                        "type": "string",
                        "description": "Scenic spot name"
                    }
                }
            },
            "results": {
                "type": "object",
                "properties": {
                    "platform_name": {
                        "type": "string",
                        "description": "Official ticketing platform name"
                    },
                    "guide_link": {
                        "type": "string",
                        "description": "Ticket purchase process guide link"
                    }
                }
            }
        },
        "book_ticket": {
            "name": "book_ticket",
            "description": "Complete the ticket booking process",
            "arguments": {
                "type": "object",
                "properties": {
                    "attractions": {
                        "type": "string",
                        "description": "Attractions to book"
                    },
                    "visit_dates": {
                        "type": "string",
                        "description": "Visit dates"
                    },
                    "date": {
                        "type": "string",
                        "description": "Booking date"
                    },
                    "activity": {
                        "type": "string",
                        "description": "Activity name"
                    },
                    "visitor_name": {
                        "type": "string",
                        "description": "Visitor's name"
                    },
                    "contactInfo": {
                        "type": "string",
                        "description": "Customer contact information"
                    },
                    "ticketType": {
                        "type": "string",
                        "description": "Ticket type"
                    },
                    "travel_mode": {
                        "type": "string",
                        "description": "Mode of transportation"
                    },
                    "departure": {
                        "type": "string",
                        "description": "Place of departure"
                    },
                    "destination": {
                        "type": "string",
                        "description": "Destination"
                    },
                    "travel_date": {
                        "type": "string",
                        "description": "Travel date"
                    },
                    "customerInfo": {
                        "type": "object",
                        "description": "Booker's information",
                        "properties": {
                            "name": {
                                "type": "string",
                                "description": "Booker's name"
                            },
                            "phone": {
                                "type": "string",
                                "description": "Booker's phone number"
                            },
                            "email": {
                                "type": "string",
                                "description": "Booker's email address"
                            }
                        },
                        "required": [
                            "name",
                            "phone",
                            "email"
                        ]
                    },
                    "event": {
                        "type": "string",
                        "description": "Event name"
                    }
                }
            },
            "results": {
                "type": "object",
                "properties": {
                    "booking_status": {
                        "type": "string",
                        "description": "Ticket booking status"
                    },
                    "booking_details": {
                        "type": "array",
                        "description": "Booking details"
                    },
                    "tickets_confirmation": {
                        "type": "string",
                        "description": "Tickets booking confirmation information"
                    },
                    "booking_reference": {
                        "type": "string",
                        "description": "Booking reference information"
                    }
                }
            }
        },
        "souvenir_recommender": {
            "name": "souvenir_recommender",
            "description": "Travel Souvenir Recommendation Tool",
            "arguments": {
                "type": "object",
                "properties": {
                    "destination": {
                        "description": "Travel Destination",
                        "type": "string"
                    },
                    "theme": {
                        "description": "Travel Theme, such as history, culture, cuisine, etc.",
                        "type": "string"
                    },
                    "budget": {
                        "description": "Budget for Souvenir Purchases",
                        "type": "integer"
                    }
                }
            },
            "results": {
                "type": "object",
                "properties": {
                    "souvenir": {
                        "description": "Recommended Souvenir Name",
                        "type": "string"
                    },
                    "price": {
                        "description": "Souvenir Price",
                        "type": "integer"
                    }
                }
            }
        },
        "tourist_souvenir_creator": {
            "name": "tourist_souvenir_creator",
            "description": "Tourist Souvenir Creation Tool",
            "arguments": {
                "type": "object",
                "properties": {
                    "destination": {
                        "description": "Travel Destination",
                        "type": "string"
                    },
                    "date_of_visit": {
                        "description": "Date of Visit",
                        "type": "string"
                    },
                    "photo": {
                        "description": "Travel Photo",
                        "type": "string",
                        "contentMediaType": "image/*"
                    }
                }
            },
            "results": {
                "type": "object",
                "properties": {
                    "souvenir": {
                        "description": "Generated Travel Souvenir",
                        "type": "string"
                    }
                }
            }
        },
        "souvenir_purchase": {
            "name": "souvenir_purchase",
            "description": "Tourist Souvenir Purchase Tool",
            "arguments": {
                "type": "object",
                "properties": {
                    "souvenir": {
                        "description": "Souvenir Name",
                        "type": "string"
                    },
                    "number": {
                        "description": "Purchase Quantity",
                        "type": "integer"
                    },
                    "date": {
                        "description": "Purchase Date",
                        "type": "string"
                    },
                    "location": {
                        "description": "Purchase Location",
                        "type": "string"
                    }
                }
            },
            "results": {
                "type": "object",
                "properties": {
                    "total_cost": {
                        "description": "Total Purchase Cost",
                        "type": "number"
                    }
                }
            }
        },
        "schedule_delivery": {
            "name": "schedule_delivery",
            "description": "Arrange courier delivery service for a specific date",
            "arguments": {
                "type": "object",
                "properties": {
                    "souvenir": {
                        "type": "string",
                        "description": "Name of the souvenir to be delivered"
                    },
                    "delivery_date": {
                        "type": "string",
                        "description": "Delivery date"
                    },
                    "recipient_address": {
                        "type": "string",
                        "description": "Recipient's address"
                    }
                }
            },
            "results": {
                "type": "object",
                "properties": {
                    "delivery_status": {
                        "type": "string",
                        "description": "Delivery service reservation status"
                    }
                }
            }
        },
        "car_rental_changing": {
            "name": "car_rental_changing",
            "description": "Car Rental Reservation Modification Tool",
            "arguments": {
                "type": "object",
                "properties": {
                    "originalStartDate": {
                        "description": "The original car rental start date (date + time) that needs to be changed",
                        "type": "string"
                    },
                    "originalEndDate": {
                        "description": "The original car rental end date (date + time) that needs to be changed",
                        "type": "string"
                    },
                    "originalCarID": {
                        "description": "The car ID that needs to be changed",
                        "type": "string"
                    },
                    "originalCity": {
                        "description": "The city where the car was originally picked up that needs to be changed",
                        "type": "string"
                    },
                    "newStartDate": {
                        "description": "The new car rental start date (date + time) after change. If not provided, the original start date remains unchanged.",
                        "type": "string"
                    },
                    "newEndDate": {
                        "description": "The new car rental end date (date + time) after change. If not provided, the original end date remains unchanged.",
                        "type": "string"
                    },
                    "newCarID": {
                        "description": "The new car ID after change. If not provided, the original car ID remains unchanged.",
                        "type": "string"
                    },
                    "newCity": {
                        "description": "The city for picking up the car after change. If not provided, the original city remains unchanged.",
                        "type": "string"
                    }
                }
            },
            "results": {
                "type": "object",
                "properties": {
                    "booking_status": {
                        "description": "Car rental modification status",
                        "type": "string"
                    }
                }
            }
        },
        "special_weather_forecast_tool": {
            "name": "special_weather_forecast_tool",
            "description": "Forecasts future weather conditions based on city, date, and type of forecast, capable of forecasting within the next 7 days, and limited to major cities within China",
            "arguments": {
                "type": "object",
                "properties": {
                    "city": {
                        "description": "City name, limited to major cities within China",
                        "type": "string",
                        "example": "Shanghai"
                    },
                    "date": {
                        "description": "Forecast date, must be within the next 7 days",
                        "type": "string",
                        "format": "date",
                        "example": "2022-12-30"
                    },
                    "forecast_type": {
                        "description": "Type of forecast, options include temperature, humidity, wind direction and speed",
                        "type": "string",
                        "enum": [
                            "temperature",
                            "humidity",
                            "wind direction and speed"
                        ]
                    }
                }
            },
            "results": {
                "type": "object",
                "properties": {
                    "forecast_status": {
                        "description": "Forecast information",
                        "type": "string"
                    }
                }
            }
        },
        "car_rental_query": {
            "name": "car_rental_query",
            "description": "Car Rental Query Tool",
            "arguments": {
                "type": "object",
                "properties": {
                    "startDate": {
                        "description": "Car rental start date (date+time)",
                        "type": "string"
                    },
                    "endDate": {
                        "description": "Car rental end date (date+time)",
                        "type": "string"
                    },
                    "carID": {
                        "description": "Car ID",
                        "type": "string"
                    },
                    "city": {
                        "description": "City of car pickup",
                        "type": "string"
                    },
                    "rental_location": {
                        "description": "Car rental location",
                        "type": "string"
                    },
                    "return_location": {
                        "description": "Car return location",
                        "type": "string"
                    },
                    "car_type": {
                        "description": "Car type",
                        "type": "string"
                    }
                }
            },
            "results": {
                "type": "object",
                "properties": {
                    "car_rental_status": {
                        "description": "List of car rental reservations that meet the search criteria",
                        "type": "string"
                    },
                    "available_cars": {
                        "description": "List of available cars",
                        "type": "array"
                    },
                    "rental_companies": {
                        "description": "List of rental companies",
                        "type": "string"
                    }
                }
            }
        },
        "car_rental_cancelling": {
            "name": "car_rental_cancelling",
            "description": "Car Rental Reservation Cancellation Tool",
            "arguments": {
                "type": "object",
                "properties": {
                    "startDate": {
                        "description": "Start date (date + time) of the car rental to be cancelled",
                        "type": "string"
                    },
                    "endDate": {
                        "description": "End date (date + time) of the car rental to be cancelled",
                        "type": "string"
                    },
                    "carID": {
                        "description": "Car identification number to be cancelled",
                        "type": "string"
                    },
                    "city": {
                        "description": "City where the car rental pickup is to be cancelled",
                        "type": "string"
                    }
                }
            },
            "results": {
                "type": "object",
                "properties": {
                    "booking_status": {
                        "description": "Car rental cancellation status",
                        "type": "string"
                    }
                }
            }
        },
        "filter_insurance_with_emergency": {
            "name": "filter_insurance_with_emergency",
            "description": "Filter out insurance plans that include emergency rescue services",
            "arguments": {
                "type": "object",
                "properties": {
                    "insurance_plans": {
                        "type": "array",
                        "description": "List of insurance plans to be filtered"
                    }
                }
            },
            "results": {
                "type": "object",
                "properties": {
                    "filtered_plans": {
                        "type": "array",
                        "description": "List of filtered insurance plans"
                    }
                }
            }
        },
        "tour_group_search": {
            "name": "tour_group_search",
            "description": "Search for tour groups based on destination, departure date, and budget range",
            "arguments": {
                "type": "object",
                "properties": {
                    "destination": {
                        "description": "Destination",
                        "type": "string"
                    },
                    "departure_date": {
                        "description": "Departure Date",
                        "type": "string",
                        "pattern": "^\\d{4}-\\d{2}-\\d{2} \\d{2}:\\d{2}$"
                    },
                    "return_date": {
                        "description": "Return Date",
                        "type": "string",
                        "pattern": "^\\d{4}-\\d{2}-\\d{2} \\d{2}:\\d{2}$"
                    },
                    "budget": {
                        "description": "Budget",
                        "type": "integer"
                    },
                    "agencyName": {
                        "description": "Travel Agency Name",
                        "type": "string"
                    }
                }
            },
            "results": {
                "type": "object",
                "properties": {
                    "tour_groups": {
                        "description": "List of tour groups that meet the criteria",
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "name": {
                                    "type": "string"
                                },
                                "price": {
                                    "type": "integer"
                                },
                                "duration": {
                                    "type": "integer"
                                },
                                "description": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "travel_group_schedule": {
            "name": "travel_group_schedule",
            "description": "Travel Group Itinerary Query Tool",
            "arguments": {
                "type": "object",
                "properties": {
                    "groupID": {
                        "description": "Unique Identifier ID of the Travel Group",
                        "type": "string"
                    }
                }
            },
            "results": {
                "type": "object",
                "properties": {
                    "schedule": {
                        "description": "Detailed Itinerary of the Travel Group",
                        "type": "string"
                    },
                    "startDate": {
                        "description": "Start Date of the Trip",
                        "type": "string"
                    },
                    "endDate": {
                        "description": "End Date of the Trip",
                        "type": "string"
                    }
                },
                "required": [
                    "schedule",
                    "startDate",
                    "endDate"
                ]
            }
        },
        "reserve_vehicle": {
            "name": "reserve_vehicle",
            "description": "Reserve a specified business vehicle",
            "arguments": {
                "type": "object",
                "properties": {
                    "vehicle_id": {
                        "type": "string",
                        "description": "Vehicle ID"
                    },
                    "departure_time": {
                        "type": "string",
                        "description": "Departure time",
                        "format": "date-time"
                    },
                    "departure_location": {
                        "type": "string",
                        "description": "Departure location"
                    },
                    "destination": {
                        "type": "string",
                        "description": "Destination"
                    },
                    "passenger_name": {
                        "type": "string",
                        "description": "Passenger name"
                    }
                }
            },
            "results": {
                "type": "object",
                "properties": {
                    "reservation_status": {
                        "type": "string",
                        "description": "Reservation status"
                    }
                }
            }
        },
        "asset_checkout_approval": {
            "name": "asset_checkout_approval",
            "description": "Asset checkout approval process tool for taking company assets off company premises",
            "arguments": {
                "type": "object",
                "properties": {
                    "checkout_time": {
                        "description": "Checkout time",
                        "type": "string",
                        "format": "date-time"
                    },
                    "checkout_location": {
                        "description": "Checkout location",
                        "type": "string"
                    },
                    "personnel": {
                        "description": "Personnel",
                        "type": "string"
                    },
                    "asset_id": {
                        "description": "Asset ID",
                        "type": "string"
                    },
                    "reason": {
                        "description": "Reason",
                        "type": "string"
                    }
                }
            },
            "results": {
                "type": "object",
                "properties": {
                    "approval_status": {
                        "description": "Approval status",
                        "type": "string"
                    }
                }
            }
        },
        "track_approval_status": {
            "name": "track_approval_status",
            "description": "Track approval process status",
            "arguments": {
                "type": "object",
                "properties": {
                    "approval_id": {
                        "type": "string",
                        "description": "Approval ID"
                    },
                    "assetID": {
                        "type": "string",
                        "description": "Asset Number"
                    }
                }
            },
            "results": {
                "type": "object",
                "properties": {
                    "approval_status": {
                        "type": "string",
                        "description": "Approval Status"
                    }
                }
            }
        },
        "internal_purchase": {
            "name": "internal_purchase",
            "description": "Internal procurement of materials and tools",
            "arguments": {
                "type": "object",
                "properties": {
                    "employeeNameOrId": {
                        "description": "Employee name or ID",
                        "type": "string"
                    },
                    "occurrenceTime": {
                        "description": "Occurrence time",
                        "type": "string",
                        "format": "date-time"
                    },
                    "expense": {
                        "description": "Expense",
                        "type": "number"
                    },
                    "currency": {
                        "description": "Currency",
                        "type": "string"
                    },
                    "purchasedItem": {
                        "description": "Purchased item",
                        "type": "string"
                    },
                    "settlementItem": {
                        "description": "Settlement item",
                        "type": "string"
                    },
                    "details": {
                        "description": "Detailed information",
                        "type": "object"
                    },
                    "approver": {
                        "description": "Approver",
                        "type": "string"
                    }
                }
            },
            "results": {
                "type": "object",
                "properties": {
                    "purchase_status": {
                        "description": "Purchase status",
                        "type": "string"
                    }
                }
            }
        },
        "purchase_product": {
            "name": "purchase_product",
            "description": "Purchase specific product",
            "arguments": {
                "type": "object",
                "properties": {
                    "product_name": {
                        "type": "string",
                        "description": "Name of the product to purchase"
                    }
                }
            },
            "results": {
                "type": "object",
                "properties": {
                    "purchase_status": {
                        "description": "Whether the purchase operation was successful",
                        "type": "string"
                    }
                }
            }
        },
        "train_ticket_booking": {
            "name": "train_ticket_booking",
            "description": "Train ticket booking tool",
            "arguments": {
                "type": "object",
                "properties": {
                    "departureDate": {
                        "description": "Departure date and time",
                        "type": "string"
                    },
                    "startStation": {
                        "description": "Departure station",
                        "type": "string"
                    },
                    "endStation": {
                        "description": "Arrival station",
                        "type": "string"
                    },
                    "seatType": {
                        "description": "Seat type (e.g., hard seat, soft seat, sleeper)",
                        "type": "string"
                    },
                    "identityNumber": {
                        "description": "Passenger's ID number",
                        "type": "string"
                    },
                    "name": {
                        "description": "Passenger's name",
                        "type": "string"
                    },
                    "seatPreference": {
                        "description": "Seat preference",
                        "type": "string"
                    },
                    "trainNumber": {
                        "description": "Train number",
                        "type": "string"
                    }
                }
            },
            "results": {
                "type": "object",
                "properties": {
                    "booking_status": {
                        "description": "Train ticket booking status",
                        "type": "string"
                    },
                    "ticketID": {
                        "description": "Train ticket booking ID",
                        "type": "string"
                    }
                }
            }
        },
        "submit_subsidy_application": {
            "name": "submit_subsidy_application",
            "description": "Submit travel subsidy application",
            "arguments": {
                "type": "object",
                "properties": {
                    "meal_subsidy": {
                        "type": "number",
                        "description": "Standard for daily meal allowance"
                    },
                    "transportation_subsidy": {
                        "type": "number",
                        "description": "Standard for daily transportation allowance"
                    },
                    "days": {
                        "type": "number",
                        "description": "Number of business travel days"
                    }
                }
            },
            "results": {
                "type": "object",
                "properties": {
                    "application_status": {
                        "type": "string",
                        "description": "Subsidy application submission status"
                    }
                }
            }
        },
        "ride_hailing_service": {
            "name": "ride_hailing_service",
            "description": "Taxi service inquiry tool",
            "arguments": {
                "type": "object",
                "properties": {
                    "user_name": {
                        "description": "User full name is recommended for more accurate inquiry",
                        "type": "string"
                    },
                    "location": {
                        "description": "User's location, must enter the specific city name",
                        "type": "string",
                        "enum": [
                            "Beijing",
                            "Shanghai",
                            "Guangzhou",
                            "Shenzhen"
                        ]
                    },
                    "destination": {
                        "description": "Destination, specific address information is required",
                        "type": "string"
                    },
                    "ride_type": {
                        "description": "Type of ride, such as Economy, Comfort, etc.",
                        "type": "string",
                        "enum": [
                            "Economy",
                            "Comfort",
                            "Luxury"
                        ]
                    },
                    "time": {
                        "description": "Estimated departure time:ss",
                        "type": "string",
                        "format": "date-time",
                        "example": "2022-11-01 08:30:00"
                    },
                    "coupon": {
                        "description": "Coupon code, if available",
                        "type": "string"
                    },
                    "seat_num": {
                        "description": "Number of seats required, must not exceed the actual number of seats in the vehicle",
                        "type": "integer",
                        "minimum": 1,
                        "maximum": 7
                    }
                }
            },
            "results": {
                "type": "object",
                "properties": {
                    "ride_info": {
                        "description": "Ride information",
                        "type": "object"
                    }
                }
            }
        },
        "ingredient_delivery_tool": {
            "name": "ingredient_delivery_tool",
            "description": "Ingredient delivery tool, capable of delivering up to 10 types of ingredients within the same city, with available cities being 'Beijing', 'Shanghai', 'Tianjin', 'Guangzhou'.",
            "arguments": {
                "type": "object",
                "properties": {
                    "deliveryCity": {
                        "type": "string",
                        "description": "The city for delivery, available options are 'Beijing', 'Shanghai', 'Tianjin', 'Guangzhou'",
                        "enum": [
                            "\u5317\u4eac",
                            "\u4e0a\u6d77",
                            "\u5929\u6d25",
                            "\u5e7f\u5dde"
                        ],
                        "example": "\u5317\u4eac"
                    },
                    "ingredientList": {
                        "type": "array",
                        "description": "The list of ingredients to be delivered, up to 10 types, each ingredient is an object containing the name and quantity of the ingredient",
                        "items": {
                            "type": "object",
                            "properties": {
                                "ingredientName": {
                                    "type": "string",
                                    "description": "Ingredient name"
                                },
                                "ingredientAmount": {
                                    "type": "number",
                                    "description": "Ingredient quantity"
                                }
                            }
                        },
                        "minItems": 1,
                        "maxItems": 10
                    },
                    "deliveryAddress": {
                        "type": "string",
                        "description": "The detailed address for delivery",
                        "example": "XX district XX street No.XX"
                    },
                    "recipientPhone": {
                        "type": "string",
                        "description": "Recipient's phone number, must comply with mobile phone number format",
                        "format": "mobile",
                        "example": "13900001111"
                    }
                }
            },
            "results": {
                "type": "object",
                "properties": {
                    "confirmation": {
                        "type": "string",
                        "description": "Delivery confirmation information, including delivery number and estimated arrival time"
                    }
                }
            }
        },
        "book_palace_ticket": {
            "name": "book_palace_ticket",
            "description": "Used for online booking of the Forbidden City tickets",
            "arguments": {
                "type": "object",
                "properties": {
                    "visitor_name": {
                        "type": "string",
                        "description": "Visitor's name"
                    },
                    "visitor_id": {
                        "type": "string",
                        "description": "Visitor's ID number"
                    },
                    "visit_date": {
                        "type": "string",
                        "description": "Visit date"
                    }
                }
            },
            "results": {
                "type": "object",
                "properties": {
                    "booking_status": {
                        "type": "string",
                        "description": "Booking status"
                    },
                    "ticket_info": {
                        "type": "string",
                        "description": "Ticket information"
                    }
                }
            }
        },
        "find_fastest_route": {
            "name": "find_fastest_route",
            "description": "Find the fastest transportation route from the starting point to the destination",
            "arguments": {
                "type": "object",
                "properties": {
                    "start_location": {
                        "type": "string",
                        "description": "Starting point"
                    },
                    "destination": {
                        "type": "string",
                        "description": "Destination"
                    }
                }
            },
            "results": {
                "type": "object",
                "properties": {
                    "route_info": {
                        "type": "string",
                        "description": "Transportation route information"
                    },
                    "estimated_time": {
                        "type": "integer",
                        "description": "Estimated time required (minutes)"
                    }
                }
            }
        },
        "search_hotels": {
            "name": "search_hotels",
            "description": "Search for hotels based on location, time, and user preferences",
            "arguments": {
                "type": "object",
                "properties": {
                    "location": {
                        "type": "string",
                        "description": "Hotel location"
                    },
                    "star_rating": {
                        "type": "string",
                        "description": "Hotel star rating"
                    },
                    "amenities": {
                        "type": "array",
                        "description": "List of hotel amenities, such as free Wi-Fi"
                    },
                    "max_distance": {
                        "type": "string",
                        "description": "Maximum distance from the hotel to a specific landmark"
                    },
                    "check_in_date": {
                        "type": "string",
                        "format": "date",
                        "description": "Check-in date"
                    },
                    "check_out_date": {
                        "type": "string",
                        "format": "date",
                        "description": "Check-out date"
                    },
                    "room_type": {
                        "type": "string",
                        "description": "Room type"
                    },
                    "include_breakfast": {
                        "type": "string",
                        "description": "Whether breakfast service is included"
                    },
                    "city": {
                        "type": "string",
                        "description": "City name"
                    },
                    "minimum_rating": {
                        "type": "number",
                        "description": "Minimum rating"
                    },
                    "brand": {
                        "type": "string",
                        "description": "Hotel brand"
                    },
                    "hotel_name": {
                        "type": "string",
                        "description": "Hotel name"
                    },
                    "wifi": {
                        "type": "string",
                        "description": "Whether free Wi-Fi service is required"
                    },
                    "additional_services": {
                        "type": "string",
                        "description": "Additional service requirements"
                    },
                    "maxPrice": {
                        "type": "number",
                        "description": "Maximum price per night"
                    },
                    "number_of_rooms": {
                        "type": "integer",
                        "description": "Number of rooms to book"
                    },
                    "budget": {
                        "type": "integer",
                        "description": "Budget"
                    },
                    "duration": {
                        "type": "integer",
                        "description": "Number of days to stay"
                    },
                    "airport_transfer": {
                        "type": "boolean",
                        "description": "Whether airport transfer service is needed"
                    }
                }
            },
            "results": {
                "type": "object",
                "properties": {
                    "hotels": {
                        "type": "array",
                        "description": "List of hotels that meet the criteria"
                    },
                    "hotel_id": {
                        "description": "Identifier ID of the hotel that meets the criteria",
                        "type": "string"
                    },
                    "search_status": {
                        "type": "string",
                        "description": "Search status"
                    }
                }
            }
        },
        "travel_itinerary_planner": {
            "name": "travel_itinerary_planner",
            "description": "Travel Itinerary Planning Tool",
            "arguments": {
                "type": "object",
                "properties": {
                    "destination": {
                        "description": "Destination",
                        "type": "string"
                    },
                    "departure_date": {
                        "description": "Departure Date",
                        "type": "string"
                    },
                    "return_date": {
                        "description": "Return Date",
                        "type": "string"
                    },
                    "interests": {
                        "description": "Points of Interest",
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                }
            },
            "results": {
                "type": "object",
                "properties": {
                    "itinerary": {
                        "description": "Travel Itinerary",
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "day": {
                                    "description": "Date",
                                    "type": "string"
                                },
                                "activities": {
                                    "description": "Activities",
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "transportation_booking": {
            "name": "transportation_booking",
            "description": "Arrange and book transportation",
            "arguments": {
                "type": "object",
                "properties": {
                    "departure_city": {
                        "type": "string",
                        "description": "Departure city"
                    },
                    "destination_city": {
                        "type": "string",
                        "description": "Destination city"
                    },
                    "departure_date": {
                        "type": "string",
                        "description": "Departure date"
                    },
                    "return_date": {
                        "type": "string",
                        "description": "Return date"
                    }
                }
            },
            "results": {
                "type": "object",
                "properties": {
                    "booking_confirmation": {
                        "type": "string",
                        "description": "Transportation booking confirmation"
                    },
                    "booking_details": {
                        "type": "array",
                        "description": "Booking details"
                    },
                    "booking_status": {
                        "type": "string",
                        "description": "Booking status"
                    }
                }
            }
        },
        "travel_insurance_coverage": {
            "name": "travel_insurance_coverage",
            "description": "Travel Insurance Coverage Inquiry Tool",
            "arguments": {
                "type": "object",
                "properties": {
                    "destination": {
                        "description": "Travel Destination",
                        "type": "string"
                    },
                    "tripDuration": {
                        "description": "Number of Travel Days",
                        "type": "integer"
                    },
                    "travelerAge": {
                        "description": "Traveler's Age",
                        "type": "integer"
                    }
                }
            },
            "results": {
                "type": "object",
                "properties": {
                    "insurance_coverage": {
                        "description": "Insurance Coverage Details",
                        "type": "string"
                    },
                    "insurance_price": {
                        "description": "Insurance Price",
                        "type": "number"
                    },
                    "insurance_company": {
                        "description": "Insurance Company",
                        "type": "string"
                    }
                }
            }
        },
        "travel_route_search": {
            "name": "travel_route_search",
            "description": "Independent Travel Route Query Tool",
            "arguments": {
                "type": "object",
                "properties": {
                    "destination": {
                        "description": "Destination",
                        "type": "string"
                    },
                    "departureDate": {
                        "description": "Departure Date",
                        "type": "string",
                        "pattern": "^[0-9]{4}-[0-9]{2}-[0-9]{2} [0-9]{2}:[0-9]{2}$"
                    },
                    "returnDate": {
                        "description": "Return Date",
                        "type": "string",
                        "pattern": "^[0-9]{4}-[0-9]{2}-[0-9]{2} [0-9]{2}:[0-9]{2}$"
                    }
                }
            },
            "results": {
                "type": "object",
                "properties": {
                    "travel_route": {
                        "description": "Travel Route",
                        "type": "string"
                    }
                }
            }
        },
        "travel_info_search": {
            "name": "travel_info_search",
            "description": "Independent Travel Information Query Tool",
            "arguments": {
                "type": "object",
                "properties": {
                    "destination": {
                        "description": "Destination",
                        "type": "string"
                    },
                    "startDate": {
                        "description": "Departure Date",
                        "type": "string",
                        "format": "date-time"
                    },
                    "endDate": {
                        "description": "Return Date",
                        "type": "string",
                        "format": "date-time"
                    }
                }
            },
            "results": {
                "type": "object",
                "properties": {
                    "hotel_info": {
                        "description": "Hotel Information",
                        "type": "string"
                    },
                    "scenic_spot_info": {
                        "description": "Scenic Spot Information",
                        "type": "string"
                    },
                    "food_info": {
                        "description": "Gourmet Information",
                        "type": "string"
                    },
                    "local_customs_info": {
                        "description": "Local Customs Information",
                        "type": "string"
                    }
                }
            }
        },
        "travel_backpack_generator": {
            "name": "travel_backpack_generator",
            "description": "Travel Backpack Generator Tool",
            "arguments": {
                "type": "object",
                "properties": {
                    "duration": {
                        "description": "Travel duration in days",
                        "type": "integer"
                    },
                    "destination": {
                        "description": "Climate type of the travel destination, options include \"cold\", \"warm\", \"humid\", \"dry\"",
                        "type": "string"
                    },
                    "activities": {
                        "description": "Types of travel activities, options include \"photography\", \"hiking\", \"skiing\", \"diving\"",
                        "type": "string"
                    }
                }
            },
            "results": {
                "type": "object",
                "properties": {
                    "backpack_contents": {
                        "description": "Contents of the travel backpack, including required clothing, equipment, essentials, etc.",
                        "type": "array"
                    }
                }
            }
        },
        "travel_backpack_checker": {
            "name": "travel_backpack_checker",
            "description": "Travel Backpack Checker Tool",
            "arguments": {
                "type": "object",
                "properties": {
                    "items": {
                        "description": "List of items in the backpack",
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "weight_limit": {
                        "description": "Backpack weight limit",
                        "type": "integer"
                    },
                    "trip_type": {
                        "description": "Type of trip",
                        "type": "string",
                        "enum": [
                            "hiking",
                            "business",
                            "leisure"
                        ]
                    }
                }
            },
            "results": {
                "type": "object",
                "properties": {
                    "suitable": {
                        "description": "Whether the backpack meets the travel requirements",
                        "type": "boolean"
                    }
                }
            }
        },
        "purchase_missing_items": {
            "name": "purchase_missing_items",
            "description": "Purchase missing travel essentials",
            "arguments": {
                "type": "object",
                "properties": {
                    "items": {
                        "type": "array",
                        "description": "List of items to be purchased",
                        "items": {
                            "type": "string"
                        }
                    }
                }
            },
            "results": {
                "type": "object",
                "properties": {
                    "purchase_status": {
                        "type": "array",
                        "description": "Purchase status of each item",
                        "items": {
                            "type": "object",
                            "properties": {
                                "item": {
                                    "type": "string",
                                    "description": "Item name"
                                },
                                "status": {
                                    "type": "boolean",
                                    "description": "Whether the purchase was successful"
                                }
                            }
                        }
                    }
                }
            }
        },
        "travel_backpack_inventory": {
            "name": "travel_backpack_inventory",
            "description": "Travel Backpack Management Tool",
            "arguments": {
                "type": "object",
                "properties": {
                    "backpackCapacity": {
                        "description": "The capacity of the backpack, in liters",
                        "type": "integer"
                    },
                    "items": {
                        "description": "Items to be placed in the backpack, represented as an array",
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "item": {
                                    "description": "Item name",
                                    "type": "string"
                                },
                                "volume": {
                                    "description": "Volume occupied by the item, in liters",
                                    "type": "integer"
                                },
                                "quantity": {
                                    "description": "Quantity of the item",
                                    "type": "integer"
                                }
                            },
                            "required": [
                                "item",
                                "volume",
                                "quantity"
                            ]
                        }
                    },
                    "tripLength": {
                        "description": "The length of the trip, in days",
                        "type": "integer"
                    }
                }
            },
            "results": {
                "type": "object",
                "properties": {
                    "packableItems": {
                        "description": "List of items that can be packed into the backpack",
                        "type": "array"
                    },
                    "remainingVolume": {
                        "description": "Remaining volume of the backpack",
                        "type": "integer"
                    }
                }
            }
        },
        "car_rental_confirmation": {
            "name": "car_rental_confirmation",
            "description": "Retrieve and send car rental booking confirmation information",
            "arguments": {
                "type": "object",
                "properties": {
                    "booking_reference": {
                        "type": "string",
                        "description": "Booking reference number"
                    }
                }
            },
            "results": {
                "type": "object",
                "properties": {
                    "confirmation_status": {
                        "type": "string",
                        "description": "Booking confirmation status"
                    },
                    "confirmation_details": {
                        "type": "string",
                        "description": "Booking confirmation details"
                    }
                }
            }
        },
        "search_train": {
            "name": "search_train",
            "description": "Search for train tickets based on preferences and return a list of train services that meet the criteria",
            "arguments": {
                "type": "object",
                "properties": {
                    "departure": {
                        "type": "string",
                        "description": "Departure location"
                    },
                    "destination": {
                        "type": "string",
                        "description": "Destination"
                    },
                    "departure_time": {
                        "type": "string",
                        "description": "Departure time"
                    },
                    "departure_station": {
                        "type": "string",
                        "description": "Departure station"
                    },
                    "train_number": {
                        "type": "string",
                        "description": "Train number"
                    },
                    "seatPreference": {
                        "type": "string",
                        "description": "Seat preference"
                    },
                    "seatType": {
                        "type": "string",
                        "description": "Seat type"
                    }
                }
            },
            "results": {
                "type": "object",
                "properties": {
                    "train_id": {
                        "description": "High-speed train service ID",
                        "type": "string"
                    },
                    "search_status": {
                        "description": "Search status",
                        "type": "string"
                    },
                    "train_options": {
                        "description": "List of train services that meet the criteria",
                        "type": "array"
                    }
                }
            }
        },
        "purchase_travel_insurance": {
            "name": "purchase_travel_insurance",
            "description": "Purchase Travel Insurance",
            "arguments": {
                "type": "object",
                "properties": {
                    "destination": {
                        "type": "string",
                        "description": "Destination"
                    },
                    "identityNumber": {
                        "type": "string",
                        "description": "Purchaser's ID Number"
                    },
                    "name": {
                        "type": "string",
                        "description": "Purchaser's Name"
                    }
                }
            },
            "results": {
                "type": "object",
                "properties": {
                    "insurance_purchase_status": {
                        "type": "string",
                        "description": "Insurance Purchase Status"
                    }
                }
            }
        },
        "check_weather": {
            "name": "check_weather",
            "description": "Check the weather forecast for a specified date and location",
            "arguments": {
                "type": "object",
                "properties": {
                    "date": {
                        "type": "string",
                        "description": "Specified date"
                    },
                    "location": {
                        "type": "string",
                        "description": "Weather query location"
                    }
                }
            },
            "results": {
                "type": "object",
                "properties": {
                    "weather_status": {
                        "type": "string",
                        "description": "Weather condition"
                    },
                    "temperature": {
                        "type": "string",
                        "description": "Temperature"
                    },
                    "precipitation": {
                        "type": "string",
                        "description": "Probability of precipitation"
                    },
                    "weather_info": {
                        "type": "string",
                        "description": "Weather forecast information"
                    },
                    "suggestions": {
                        "type": "string",
                        "description": "Suggestions based on weather conditions"
                    }
                }
            }
        },
        "compose_rental_details_email": {
            "name": "compose_rental_details_email",
            "description": "Compose an email content for car rental booking details",
            "arguments": {
                "type": "object",
                "properties": {
                    "email": {
                        "type": "string",
                        "description": "User's email address"
                    },
                    "startDate": {
                        "type": "string",
                        "description": "Car rental start date and time"
                    },
                    "endDate": {
                        "type": "string",
                        "description": "Car rental end date and time"
                    },
                    "city": {
                        "type": "string",
                        "description": "City for car pickup"
                    },
                    "dropOffCity": {
                        "type": "string",
                        "description": "City for car drop-off"
                    },
                    "carID": {
                        "type": "string",
                        "description": "Car identification number"
                    }
                }
            },
            "results": {
                "type": "object",
                "properties": {
                    "email_content": {
                        "type": "string",
                        "description": "Email content of the booking details"
                    }
                }
            }
        },
        "send_email": {
            "name": "send_email",
            "description": "Email notification sending tool",
            "arguments": {
                "type": "object",
                "properties": {
                    "recipient_list": {
                        "type": "array",
                        "description": "Recipient email list"
                    },
                    "document": {
                        "type": "string",
                        "description": "Email attachment content"
                    },
                    "send_time": {
                        "type": "string",
                        "description": "Email sending time"
                    },
                    "subject": {
                        "type": "string",
                        "description": "Email subject"
                    },
                    "body": {
                        "type": "string",
                        "description": "Email body content"
                    },
                    "attachment": {
                        "type": "string",
                        "description": "Email attachment"
                    },
                    "sender": {
                        "type": "string",
                        "description": "Sender email address"
                    },
                    "attachment_path": {
                        "type": "string",
                        "description": "Attachment file path"
                    }
                }
            },
            "results": {
                "type": "object",
                "properties": {
                    "send_status": {
                        "description": "Email sending status",
                        "type": "string"
                    },
                    "email_sent": {
                        "type": "boolean",
                        "description": "Confirmation whether the email has been sent"
                    }
                }
            }
        },
        "airport_pickup": {
            "name": "airport_pickup",
            "description": "Airport transfer reservation tool",
            "arguments": {
                "type": "object",
                "properties": {
                    "pickup_time": {
                        "description": "Pick-up time",
                        "type": "string",
                        "format": "date-time"
                    },
                    "flight_number": {
                        "description": "Flight number",
                        "type": "string"
                    },
                    "pickup_location": {
                        "description": "Pick-up location",
                        "type": "string"
                    },
                    "airport_name": {
                        "description": "Airport name",
                        "type": "string"
                    },
                    "numberOfPassengers": {
                        "description": "Number of passengers",
                        "type": "integer"
                    },
                    "luggageCount": {
                        "description": "Number of luggage items",
                        "type": "integer"
                    },
                    "user_name": {
                        "type": "string",
                        "description": "User name"
                    },
                    "contact_info": {
                        "type": "string",
                        "description": "User contact information"
                    },
                    "destination": {
                        "description": "Destination",
                        "type": "string"
                    },
                    "arrival_time": {
                        "description": "Landing time",
                        "type": "string"
                    }
                }
            },
            "results": {
                "type": "object",
                "properties": {
                    "pickup_status": {
                        "description": "Pick-up reservation status",
                        "type": "string"
                    },
                    "pickup_service_information": {
                        "description": "Pick-up service information",
                        "type": "string"
                    },
                    "confirmationNumber": {
                        "description": "Reservation confirmation number",
                        "type": "string"
                    }
                }
            }
        },
        "flight_schedule_lookup": {
            "name": "flight_schedule_lookup",
            "description": "Query the departure time of a specified flight",
            "arguments": {
                "type": "object",
                "properties": {
                    "flight_number": {
                        "type": "string",
                        "description": "The flight number to query"
                    }
                }
            },
            "results": {
                "type": "object",
                "properties": {
                    "flight_time": {
                        "type": "string",
                        "description": "The departure time of the flight"
                    }
                }
            }
        },
        "theme_park_info_search": {
            "name": "theme_park_info_search",
            "description": "Theme Park Information Query Tool",
            "arguments": {
                "type": "object",
                "properties": {
                    "parkName": {
                        "description": "Name of the theme park",
                        "type": "string"
                    },
                    "visitDate": {
                        "description": "Visit date",
                        "type": "string",
                        "format": "date-time"
                    }
                }
            },
            "results": {
                "type": "object",
                "properties": {
                    "openHours": {
                        "description": "Opening hours",
                        "type": "string"
                    },
                    "ticketPrice": {
                        "description": "Ticket price",
                        "type": "number"
                    },
                    "location": {
                        "description": "Location",
                        "type": "string"
                    }
                }
            }
        },
        "theme_park_ticket_search": {
            "name": "theme_park_ticket_search",
            "description": "Theme Park Ticket Price Inquiry Tool",
            "arguments": {
                "type": "object",
                "properties": {
                    "date": {
                        "description": "Visit Date",
                        "type": "string"
                    },
                    "parkName": {
                        "description": "Name of the Theme Park",
                        "type": "string"
                    },
                    "visitorAge": {
                        "description": "Visitor's Age",
                        "type": "integer"
                    }
                }
            },
            "results": {
                "type": "object",
                "properties": {
                    "ticket_price": {
                        "description": "Theme Park Ticket Price",
                        "type": "number"
                    }
                }
            }
        },
        "theme_park_attractions_search": {
            "name": "theme_park_attractions_search",
            "description": "Theme Park Facilities Query Tool",
            "arguments": {
                "type": "object",
                "properties": {
                    "parkName": {
                        "description": "Theme Park Name",
                        "type": "string"
                    },
                    "attractionType": {
                        "description": "Attraction Type (e.g., Rides, Shows, Dining Spots)",
                        "type": "string"
                    },
                    "visitDate": {
                        "description": "Visit Date",
                        "type": "string"
                    },
                    "visitorAge": {
                        "description": "Visitor's Age",
                        "type": "integer"
                    }
                }
            },
            "results": {
                "type": "object",
                "properties": {
                    "attraction_list": {
                        "description": "List of Attractions that Meet the Criteria",
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "attractionName": {
                                    "description": "Attraction Name",
                                    "type": "string"
                                },
                                "operationalStatus": {
                                    "description": "Attraction Operational Status",
                                    "type": "string"
                                },
                                "waitTime": {
                                    "description": "Estimated Waiting Time",
                                    "type": "integer"
                                }
                            },
                            "required": [
                                "attractionName",
                                "operationalStatus"
                            ]
                        }
                    },
                    "opening_hours": {
                        "description": "Theme Park's Operating Hours",
                        "type": "string"
                    }
                }
            }
        },
        "trip_package_search": {
            "name": "trip_package_search",
            "description": "Travel Package Search Tool",
            "arguments": {
                "type": "object",
                "properties": {
                    "destination": {
                        "description": "Destination of the trip",
                        "type": "string"
                    },
                    "travel_date": {
                        "description": "Date of the trip",
                        "type": "string"
                    },
                    "budget_range": {
                        "description": "Budget range",
                        "type": "integer"
                    }
                }
            },
            "results": {
                "type": "object",
                "properties": {
                    "package_details": {
                        "description": "Detailed information of the travel package",
                        "type": "string"
                    }
                }
            }
        },
        "check_car_availability": {
            "name": "check_car_availability",
            "description": "Check the availability of cars on a specified date and city",
            "arguments": {
                "type": "object",
                "properties": {
                    "car_type": {
                        "type": "string",
                        "description": "Car model"
                    },
                    "start_date": {
                        "type": "string",
                        "description": "Car rental start date"
                    },
                    "end_date": {
                        "type": "string",
                        "description": "Car rental end date"
                    },
                    "city": {
                        "type": "string",
                        "description": "Car rental city"
                    }
                }
            },
            "results": {
                "type": "object",
                "properties": {
                    "availability": {
                        "type": "string",
                        "description": "Car model availability"
                    }
                }
            }
        },
        "book_car": {
            "name": "book_car",
            "description": "Make a car rental reservation after confirming car availability",
            "arguments": {
                "type": "object",
                "properties": {
                    "carID": {
                        "type": "string",
                        "description": "Car ID"
                    },
                    "startDate": {
                        "type": "string",
                        "description": "Rental start date"
                    },
                    "endDate": {
                        "type": "string",
                        "description": "Rental end date"
                    },
                    "city": {
                        "type": "string",
                        "description": "City for car pickup"
                    }
                }
            },
            "results": {
                "type": "object",
                "properties": {
                    "booking_status": {
                        "type": "string",
                        "description": "Car rental reservation status"
                    }
                }
            }
        }
    },
    "Agenda": {
        "account_login": {
            "name": "account_login",
            "description": "Account Login Tool",
            "arguments": {
                "type": "object",
                "properties": {
                    "account_id": {
                        "description": "Account ID",
                        "type": "integer"
                    },
                    "verification_code": {
                        "description": "Verification Code",
                        "type": "string"
                    },
                    "username": {
                        "description": "Username",
                        "type": "string"
                    },
                    "password": {
                        "description": "User Password",
                        "type": "string"
                    }
                }
            },
            "results": {
                "type": "object",
                "properties": {
                    "login_status": {
                        "description": "Login Status",
                        "type": "string"
                    }
                }
            }
        },
        "create_task": {
            "name": "create_task",
            "description": "Create and save a new task",
            "arguments": {
                "type": "object",
                "properties": {
                    "task_name": {
                        "type": "string",
                        "description": "Task name"
                    },
                    "task_content": {
                        "type": "string",
                        "description": "Task content"
                    },
                    "task_time": {
                        "type": "string",
                        "description": "Task time"
                    }
                }
            },
            "results": {
                "type": "object",
                "properties": {
                    "task_creation_status": {
                        "type": "string",
                        "description": "Task creation status"
                    }
                }
            }
        },
        "set_reminder": {
            "name": "set_reminder",
            "description": "Set Reminder",
            "arguments": {
                "type": "object",
                "properties": {
                    "time": {
                        "type": "string",
                        "description": "Reminder Time"
                    },
                    "content": {
                        "type": "string",
                        "description": "Reminder Content"
                    },
                    "reminder_title": {
                        "type": "string",
                        "description": "Reminder Title"
                    },
                    "agenda_id": {
                        "type": "string",
                        "description": "Agenda ID"
                    },
                    "recipient": {
                        "type": "string",
                        "description": "Recipient of Reminder"
                    },
                    "reminder_date": {
                        "type": "string",
                        "description": "Reminder Date"
                    },
                    "action": {
                        "type": "string",
                        "description": "Action to perform after reminder"
                    },
                    "contactInformation": {
                        "type": "string",
                        "description": "User's Contact Information"
                    },
                    "frequency": {
                        "description": "Frequency of reminder setting, options: once, daily, weekly Monday to Sunday, default is once",
                        "type": "string"
                    }
                }
            },
            "results": {
                "type": "object",
                "properties": {
                    "reminder_status": {
                        "type": "string",
                        "description": "Reminder Setting Status"
                    },
                    "reminder_set": {
                        "description": "Whether the reminder was set successfully",
                        "type": "boolean"
                    }
                }
            }
        },
        "clock_alarm_set": {
            "name": "clock_alarm_set",
            "description": "Set Alarm Tool",
            "arguments": {
                "type": "object",
                "properties": {
                    "time": {
                        "description": "Alarm Set Time",
                        "type": "string"
                    },
                    "date": {
                        "description": "Alarm Set Date",
                        "type": "string"
                    },
                    "label": {
                        "description": "Alarm Label",
                        "type": "string"
                    },
                    "frequency": {
                        "description": "Alarm Set Frequency, options: Once, Daily, Monday to Sunday, default is Once",
                        "type": "string"
                    }
                }
            },
            "results": {
                "type": "object",
                "properties": {
                    "clock_alarm_info": {
                        "description": "Alarm Setting Result",
                        "type": "string"
                    }
                }
            }
        },
        "set_stock_trade_instruction": {
            "name": "set_stock_trade_instruction",
            "description": "Set stock trade instruction",
            "arguments": {
                "type": "object",
                "properties": {
                    "stock_code": {
                        "type": "string",
                        "description": "Stock code"
                    },
                    "sell_price": {
                        "type": "string",
                        "description": "Sell price"
                    },
                    "quantity": {
                        "type": "string",
                        "description": "Quantity to sell"
                    },
                    "execution_time": {
                        "type": "string",
                        "description": "Execution time of the trade"
                    }
                }
            },
            "results": {
                "type": "object",
                "properties": {
                    "trade_instruction_info": {
                        "description": "Result of setting trade instruction",
                        "type": "string"
                    }
                }
            }
        },
        "add_reminder": {
            "name": "add_reminder",
            "description": "Add reminder event",
            "arguments": {
                "type": "object",
                "properties": {
                    "reminder_id": {
                        "type": "string",
                        "description": "ID of the reminder"
                    },
                    "event_title": {
                        "type": "string",
                        "description": "Event title"
                    },
                    "reminder_time": {
                        "type": "string",
                        "description": "Time of the reminder"
                    },
                    "reminder_location": {
                        "type": "string",
                        "description": "Location of the reminder"
                    },
                    "reminder_frequency": {
                        "type": "integer",
                        "description": "Frequency of the reminder (days)"
                    },
                    "reminder_name": {
                        "type": "string",
                        "description": "Name of the reminder"
                    }
                }
            },
            "results": {
                "type": "object",
                "properties": {
                    "status": {
                        "description": "Whether the reminder was successfully added",
                        "type": "string"
                    }
                }
            }
        },
        "share_agenda": {
            "name": "share_agenda",
            "description": "Share Agenda",
            "arguments": {
                "type": "object",
                "properties": {
                    "agenda_id": {
                        "type": "string",
                        "description": "ID of the agenda"
                    },
                    "shared_user_id": {
                        "type": "string",
                        "description": "User ID of the sharee"
                    },
                    "permission_level": {
                        "type": "string",
                        "description": "Sharing permission level"
                    },
                    "sharing_time": {
                        "type": "string",
                        "description": "Time of sharing"
                    },
                    "expiration_time": {
                        "type": "string",
                        "description": "Expiration time of the share"
                    }
                }
            },
            "results": {
                "type": "object",
                "properties": {
                    "outcome": {
                        "description": "Whether the agenda was shared successfully",
                        "type": "string"
                    }
                }
            }
        },
        "search_agenda": {
            "name": "search_agenda",
            "description": "Search Agenda Schedule",
            "arguments": {
                "type": "object",
                "properties": {
                    "agenda_id": {
                        "type": "string",
                        "description": "ID of the agenda"
                    },
                    "agenda_keyword": {
                        "type": "string",
                        "description": "Keyword to search for"
                    },
                    "search_start_time": {
                        "type": "string",
                        "description": "Start time of the search"
                    },
                    "search_end_time": {
                        "type": "string",
                        "description": "End time of the search"
                    }
                }
            },
            "results": {
                "type": "object",
                "properties": {
                    "search_results": {
                        "description": "Search Results",
                        "type": "string"
                    },
                    "agenda_conflicts": {
                        "type": "array",
                        "description": "List of agendas conflicting with the specified time"
                    }
                }
            }
        },
        "schedule_email": {
            "name": "schedule_email",
            "description": "Schedule to send an email at a specified time",
            "arguments": {
                "type": "object",
                "properties": {
                    "sender": {
                        "type": "string",
                        "description": "Sender's email address"
                    },
                    "receiver": {
                        "type": "string",
                        "description": "Receiver's email address"
                    },
                    "subject": {
                        "type": "string",
                        "description": "Email subject"
                    },
                    "content": {
                        "type": "string",
                        "description": "Email content"
                    },
                    "send_time": {
                        "type": "string",
                        "description": "Email sending time"
                    },
                    "recipients": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "email"
                        },
                        "description": "List of recipient email addresses"
                    },
                    "attachment_path": {
                        "type": "string",
                        "description": "Path of the attachment file"
                    }
                }
            },
            "results": {
                "type": "object",
                "properties": {
                    "schedule_status": {
                        "type": "string",
                        "description": "Email scheduling status"
                    }
                }
            }
        },
        "schedule_tool": {
            "name": "schedule_tool",
            "description": "Timetable generation tool, which only supports specific time arrangements within a week (Monday to Friday), and requires details to each class's course name, classroom, etc.",
            "arguments": {
                "type": "object",
                "properties": {
                    "studentName": {
                        "type": "string",
                        "description": "Student name"
                    },
                    "studentClass": {
                        "type": "string",
                        "description": "Student class name",
                        "example": "Grade 7 Class 5"
                    },
                    "courses": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "dayOfWeek": {
                                    "type": "integer",
                                    "description": "Day of class, Monday to Friday correspond to 1 to 5",
                                    "minimum": 1,
                                    "maximum": 5
                                },
                                "timeSlot": {
                                    "type": "string",
                                    "description": "Class time slot, specific to morning, afternoon, or evening, such as 'morning', 'afternoon', 'evening'",
                                    "enum": [
                                        "morning",
                                        "afternoon",
                                        "evening"
                                    ]
                                },
                                "courseName": {
                                    "type": "string",
                                    "description": "Course name"
                                },
                                "classroom": {
                                    "type": "string",
                                    "description": "Classroom"
                                }
                            },
                            "required": [
                                "dayOfWeek",
                                "timeSlot",
                                "courseName",
                                "classroom"
                            ]
                        }
                    },
                    "teacherName": {
                        "type": "string",
                        "description": "Instructor's name"
                    }
                }
            },
            "results": {
                "type": "object",
                "properties": {
                    "schedule": {
                        "type": "array",
                        "description": "Generated weekly timetable",
                        "items": {
                            "type": "object",
                            "properties": {
                                "dayOfWeek": {
                                    "type": "integer",
                                    "description": "Day of class, Monday to Friday correspond to 1 to 5"
                                },
                                "timeSlot": {
                                    "type": "string",
                                    "description": "Class time slot"
                                },
                                "courseName": {
                                    "type": "string",
                                    "description": "Course name"
                                },
                                "classroom": {
                                    "type": "string",
                                    "description": "Classroom"
                                },
                                "teacherName": {
                                    "type": "string",
                                    "description": "Instructor's name"
                                }
                            }
                        }
                    }
                }
            }
        },
        "video_conference_tool": {
            "name": "video_conference_tool",
            "description": "Video conference tool that allows setting meeting time, participants, and whether a password is required",
            "arguments": {
                "type": "object",
                "properties": {
                    "meetingTitle": {
                        "type": "string",
                        "description": "Meeting subject, no more than 50 characters",
                        "maxLength": 50,
                        "example": "Weekly Meeting"
                    },
                    "meetingTime": {
                        "type": "string",
                        "description": "Meeting start time",
                        "format": "date-time",
                        "example": "2022/12/25 11:00"
                    },
                    "meetingDuration": {
                        "type": "integer",
                        "description": "Meeting duration in minutes",
                        "minimum": 15,
                        "maximum": 240,
                        "example": 60
                    },
                    "participants": {
                        "type": "array",
                        "description": "List of participant email addresses",
                        "items": {
                            "type": "string",
                            "format": "email"
                        }
                    },
                    "needPassword": {
                        "type": "boolean",
                        "description": "Whether a meeting password is needed"
                    },
                    "password": {
                        "type": "string",
                        "description": "Meeting password, required when needPassword is true, length 6-12 characters",
                        "minLength": 6,
                        "maxLength": 12
                    }
                },
                "dependencies": {
                    "password": [
                        "needPassword"
                    ]
                }
            },
            "results": {
                "type": "object",
                "properties": {
                    "meetingLink": {
                        "description": "Meeting link",
                        "type": "string"
                    }
                }
            }
        },
        "create_agenda": {
            "name": "create_agenda",
            "description": "Create a new agenda",
            "arguments": {
                "type": "object",
                "properties": {
                    "agenda_id": {
                        "type": "string",
                        "description": "The ID of the agenda"
                    },
                    "agenda_title": {
                        "type": "string",
                        "description": "The title of the agenda"
                    },
                    "start_time": {
                        "type": "string",
                        "description": "The start time of the agenda"
                    },
                    "end_time": {
                        "type": "string",
                        "description": "The end time of the agenda"
                    },
                    "location": {
                        "type": "string",
                        "description": "The location of the agenda"
                    },
                    "participants": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The names of the participants"
                    }
                }
            },
            "results": {
                "type": "object",
                "properties": {
                    "outcome": {
                        "description": "Whether the agenda was successfully created",
                        "type": "string"
                    }
                }
            }
        },
        "create_schedule": {
            "name": "create_schedule",
            "description": "Create a new schedule",
            "arguments": {
                "type": "object",
                "properties": {
                    "schedule_id": {
                        "type": "string",
                        "description": "ID of the schedule"
                    },
                    "task": {
                        "type": "string",
                        "description": "Task description"
                    },
                    "start_time": {
                        "type": "string",
                        "description": "Start time"
                    },
                    "end_time": {
                        "type": "string",
                        "description": "End time"
                    },
                    "location": {
                        "type": "string",
                        "description": "Task location"
                    },
                    "schedule_title": {
                        "type": "string",
                        "description": "Schedule title"
                    },
                    "schedule_date": {
                        "type": "string",
                        "description": "Schedule date"
                    },
                    "schedule_description": {
                        "type": "string",
                        "description": "Description of the schedule"
                    },
                    "tag_id": {
                        "type": "string",
                        "description": "ID of the associated tag"
                    }
                }
            },
            "results": {
                "type": "object",
                "properties": {
                    "status": {
                        "description": "Whether the schedule was created successfully",
                        "type": "string"
                    }
                }
            }
        },
        "backup_agenda": {
            "name": "backup_agenda",
            "description": "Backup Schedule",
            "arguments": {
                "type": "object",
                "properties": {
                    "backup_id": {
                        "type": "string",
                        "description": "ID of the backup"
                    },
                    "agenda_id": {
                        "type": "string",
                        "description": "ID of the agenda"
                    },
                    "backup_time": {
                        "type": "string",
                        "description": "Time of the backup"
                    },
                    "backup_location": {
                        "type": "string",
                        "description": "Geographical location of the backup storage"
                    },
                    "agenda_content": {
                        "type": "string",
                        "description": "Detailed description of the agenda content"
                    },
                    "schedule_title": {
                        "type": "string",
                        "description": "Title of the schedule"
                    },
                    "schedule_time": {
                        "type": "string",
                        "description": "Time of the schedule"
                    },
                    "schedule_duration": {
                        "type": "integer",
                        "description": "Duration of the schedule (minutes)"
                    },
                    "schedule_description": {
                        "type": "string",
                        "description": "Details of the schedule"
                    }
                }
            },
            "results": {
                "type": "object",
                "properties": {
                    "outcome": {
                        "description": "Whether the backup was successfully completed",
                        "type": "string"
                    }
                }
            }
        },
        "create_agenda_summary": {
            "name": "create_agenda_summary",
            "description": "Create an agenda summary and back it up to the cloud server",
            "arguments": {
                "type": "object",
                "properties": {
                    "backup_id": {
                        "type": "string",
                        "description": "The id of the backup"
                    },
                    "agenda_items": {
                        "type": "array",
                        "description": "Array of agenda items to be summarized",
                        "items": {
                            "type": "object",
                            "properties": {
                                "title": {
                                    "type": "string",
                                    "description": "Agenda title"
                                },
                                "time": {
                                    "type": "string",
                                    "description": "Agenda time"
                                },
                                "duration": {
                                    "type": "integer",
                                    "description": "Duration of the agenda (minutes)"
                                },
                                "description": {
                                    "type": "string",
                                    "description": "Details of the agenda"
                                }
                            }
                        }
                    },
                    "backup_location": {
                        "type": "string",
                        "description": "Geographical location of the backup storage"
                    }
                }
            },
            "results": {
                "type": "object",
                "properties": {
                    "outcome": {
                        "description": "Whether the backup was successfully created",
                        "type": "string"
                    }
                }
            }
        },
        "restore_agenda": {
            "name": "restore_agenda",
            "description": "Restore schedule",
            "arguments": {
                "type": "object",
                "properties": {
                    "agenda_id": {
                        "type": "string",
                        "description": "ID of the agenda"
                    },
                    "agenda_name": {
                        "type": "string",
                        "description": "Name of the agenda"
                    },
                    "startDate": {
                        "type": "string",
                        "description": "Start date of the restoration"
                    },
                    "endDate": {
                        "type": "string",
                        "description": "End date of the restoration"
                    },
                    "location": {
                        "type": "string",
                        "description": "Geographical location of the agenda"
                    },
                    "duration": {
                        "type": "integer",
                        "description": "Duration of the agenda (minutes)"
                    },
                    "schedule_id": {
                        "type": "string",
                        "description": "ID of the schedule to be restored"
                    },
                    "previous_state": {
                        "type": "string",
                        "description": "State of the agenda before restoration"
                    },
                    "current_state": {
                        "type": "string",
                        "description": "State of the agenda after restoration"
                    },
                    "restored_time": {
                        "type": "string",
                        "description": "Time of the agenda restoration"
                    },
                    "restored_duration": {
                        "type": "integer",
                        "description": "Duration of the agenda restoration (minutes)"
                    }
                }
            },
            "results": {
                "type": "object",
                "properties": {
                    "outcome": {
                        "description": "Whether the schedule was successfully restored",
                        "type": "string"
                    }
                }
            }
        },
        "daily_schedule_manager": {
            "name": "daily_schedule_manager",
            "description": "Schedule Management Tool",
            "arguments": {
                "type": "object",
                "properties": {
                    "event_name": {
                        "description": "Event name, must be 1 to 40 characters",
                        "type": "string"
                    },
                    "event_start": {
                        "description": "Event start time:ss",
                        "type": "string",
                        "format": "date-time",
                        "example": "2022-07-12 14:30:00"
                    },
                    "event_end": {
                        "description": "Event end time:ss",
                        "type": "string",
                        "format": "date-time",
                        "example": "2022-07-12 16:30:00"
                    },
                    "event_location": {
                        "description": "Event location",
                        "type": "string"
                    },
                    "category": {
                        "description": "Event category, can be 'Work', 'Personal', 'Leisure', 'Other'",
                        "type": "string",
                        "enum": [
                            "Work",
                            "Personal",
                            "Leisure",
                            "Other"
                        ]
                    },
                    "importance": {
                        "description": "Event importance level, ranging from 1 to 5, where 1 is the most important",
                        "type": "integer",
                        "minimum": 1,
                        "maximum": 5
                    },
                    "note": {
                        "description": "Note",
                        "type": "string"
                    }
                }
            },
            "results": {
                "type": "object",
                "properties": {
                    "schedule_info": {
                        "description": "Schedule information",
                        "type": "object"
                    }
                }
            }
        },
        "advance_ticket_booking": {
            "name": "advance_ticket_booking",
            "description": "This tool is used for booking tickets for various events, such as concerts, plays, movies, etc.",
            "arguments": {
                "type": "object",
                "properties": {
                    "event_type": {
                        "description": "Event type",
                        "type": "string",
                        "enum": [
                            "concert",
                            "play",
                            "movie"
                        ]
                    },
                    "date": {
                        "description": "Booking date",
                        "type": "string",
                        "format": "date-time",
                        "example": "2022-01-01T18:30:00.000Z"
                    },
                    "number_of_tickets": {
                        "description": "Number of tickets",
                        "type": "integer",
                        "minimum": 1
                    },
                    "seat_preference": {
                        "description": "Seat preference (e.g., front row, middle row, back row)",
                        "type": "string"
                    },
                    "vip": {
                        "description": "Whether VIP",
                        "type": "boolean"
                    }
                }
            },
            "results": {
                "type": "object",
                "properties": {
                    "booking_status": {
                        "description": "Booking status",
                        "type": "string"
                    }
                }
            }
        },
        "add_agenda_reminder": {
            "name": "add_agenda_reminder",
            "description": "Add a new reminder in the schedule management tool",
            "arguments": {
                "type": "object",
                "properties": {
                    "date": {
                        "type": "string",
                        "description": "The date of the schedule reminder"
                    },
                    "topic": {
                        "type": "string",
                        "description": "The topic of the schedule reminder"
                    },
                    "reminder_time": {
                        "type": "string",
                        "description": "Reminder time, format as 'Every Week XHH:MM'"
                    },
                    "description": {
                        "type": "string",
                        "description": "Description of the schedule"
                    }
                }
            },
            "results": {
                "type": "object",
                "properties": {
                    "reminder_status": {
                        "type": "string",
                        "description": "Status of the schedule reminder addition"
                    }
                }
            }
        },
        "clock_alarm_change": {
            "name": "clock_alarm_change",
            "description": "Change Alarm Tool",
            "arguments": {
                "type": "object",
                "properties": {
                    "originalTime": {
                        "description": "The original time of the alarm to be changed",
                        "type": "string"
                    },
                    "date": {
                        "description": "The date after the alarm is changed",
                        "type": "string"
                    },
                    "label": {
                        "description": "The label after the alarm is changed",
                        "type": "string"
                    },
                    "changeTime": {
                        "description": "The time after the alarm is changed",
                        "type": "string"
                    },
                    "originalFrequency": {
                        "description": "The original frequency of the alarm to be changed",
                        "type": "string"
                    },
                    "changeFrequency": {
                        "description": "The frequency after the alarm is changed",
                        "type": "string"
                    }
                }
            },
            "results": {
                "type": "object",
                "properties": {
                    "clock_alarm_info": {
                        "description": "Alarm change result",
                        "type": "string"
                    }
                }
            }
        },
        "set_specific_ringtone": {
            "name": "set_specific_ringtone",
            "description": "Set a specific ringtone for an alarm at a specific time and frequency",
            "arguments": {
                "type": "object",
                "properties": {
                    "alarm_time": {
                        "type": "string",
                        "description": "Alarm time"
                    },
                    "alarm_frequency": {
                        "type": "string",
                        "description": "Alarm frequency"
                    },
                    "ringtone": {
                        "type": "string",
                        "description": "Name of the ringtone to set"
                    }
                }
            },
            "results": {
                "type": "object",
                "properties": {
                    "status": {
                        "type": "string",
                        "description": "Result of the ringtone setting"
                    }
                }
            }
        },
        "read_agenda": {
            "name": "read_agenda",
            "description": "Read agenda information",
            "arguments": {
                "type": "object",
                "properties": {
                    "agenda_id": {
                        "type": "string",
                        "description": "The ID of the agenda"
                    },
                    "time_zone": {
                        "type": "string",
                        "description": "The time zone for the query"
                    },
                    "date": {
                        "type": "string",
                        "description": "The date being queried"
                    }
                }
            },
            "results": {
                "type": "object",
                "properties": {
                    "outcome": {
                        "description": "Whether the read was successful",
                        "type": "string"
                    },
                    "agenda": {
                        "description": "Details of the agenda",
                        "type": "string"
                    }
                }
            }
        },
        "add_periodic_event": {
            "name": "add_periodic_event",
            "description": "Add periodic event",
            "arguments": {
                "type": "object",
                "properties": {
                    "event_id": {
                        "type": "string",
                        "description": "Event ID"
                    },
                    "event_name": {
                        "type": "string",
                        "description": "Event name"
                    },
                    "start_time": {
                        "type": "string",
                        "description": "Event start time"
                    },
                    "duration": {
                        "type": "string",
                        "description": "Event duration"
                    },
                    "end_time": {
                        "type": "string",
                        "description": "Event end time"
                    },
                    "start_date": {
                        "type": "string",
                        "description": "Event start date"
                    },
                    "location": {
                        "type": "string",
                        "description": "Event location"
                    },
                    "frequency": {
                        "type": "integer",
                        "description": "Event frequency (days)"
                    }
                }
            },
            "results": {
                "type": "object",
                "properties": {
                    "status": {
                        "description": "Whether the event was successfully added",
                        "type": "string"
                    }
                }
            }
        },
        "contact_restaurant": {
            "name": "contact_restaurant",
            "description": "Contact the restaurant a specified number of days in advance to inquire about special family gathering meal packages or services, and to obtain a menu and price list",
            "arguments": {
                "type": "object",
                "properties": {
                    "restaurant_type": {
                        "type": "string",
                        "description": "Type of restaurant"
                    },
                    "days_before_event": {
                        "type": "integer",
                        "description": "Number of days to contact in advance"
                    }
                }
            },
            "results": {
                "type": "object",
                "properties": {
                    "contact_status": {
                        "type": "string",
                        "description": "Whether the restaurant was successfully contacted and information obtained"
                    },
                    "menu": {
                        "type": "string",
                        "description": "Menu information obtained"
                    },
                    "pricing": {
                        "type": "string",
                        "description": "Pricing information obtained"
                    }
                }
            }
        },
        "order_flowers": {
            "name": "order_flowers",
            "description": "Reserve specific types and quantities of fresh flowers, and arrange delivery",
            "arguments": {
                "type": "object",
                "properties": {
                    "supplier": {
                        "type": "string",
                        "description": "Supplier"
                    },
                    "flower_type": {
                        "type": "string",
                        "description": "Type of flower"
                    },
                    "quantity": {
                        "type": "string",
                        "description": "Quantity of flowers"
                    },
                    "delivery_time": {
                        "type": "string",
                        "description": "Flower delivery time"
                    },
                    "florist_info": {
                        "type": "string",
                        "description": "Selected florist information"
                    },
                    "days_before_event": {
                        "type": "integer",
                        "description": "Days to reserve in advance"
                    }
                }
            },
            "results": {
                "type": "object",
                "properties": {
                    "order_status": {
                        "description": "Whether the reservation is successful",
                        "type": "string"
                    }
                }
            }
        },
        "schedule_flower_delivery": {
            "name": "schedule_flower_delivery",
            "description": "Arrange for flowers to be delivered at a specified time and address",
            "arguments": {
                "type": "object",
                "properties": {
                    "delivery_time": {
                        "type": "string",
                        "description": "Delivery time"
                    },
                    "delivery_address": {
                        "type": "string",
                        "description": "Delivery address"
                    }
                }
            },
            "results": {
                "type": "object",
                "properties": {
                    "delivery_status": {
                        "type": "string",
                        "description": "Whether the flower delivery was successful"
                    }
                }
            }
        },
        "export_calendar": {
            "name": "export_calendar",
            "description": "Export calendar events",
            "arguments": {
                "type": "object",
                "properties": {
                    "event_id": {
                        "type": "string",
                        "description": "The ID of the event"
                    },
                    "event_title": {
                        "type": "string",
                        "description": "Event name"
                    },
                    "event_start_time": {
                        "type": "string",
                        "description": "Event start time"
                    },
                    "event_end_time": {
                        "type": "string",
                        "description": "Event end time"
                    },
                    "event_location": {
                        "type": "string",
                        "description": "Geographical location of the event"
                    },
                    "event_description": {
                        "type": "string",
                        "description": "Event description information"
                    }
                }
            },
            "results": {
                "type": "object",
                "properties": {
                    "outcome": {
                        "description": "Whether the event was successfully exported",
                        "type": "string"
                    }
                }
            }
        },
        "create_document_with_events": {
            "name": "create_document_with_events",
            "description": "Create a document and insert event information",
            "arguments": {
                "type": "object",
                "properties": {
                    "event1_info": {
                        "type": "string",
                        "description": "Detailed information of the first event"
                    },
                    "event2_info": {
                        "type": "string",
                        "description": "Detailed information of the second event"
                    }
                }
            },
            "results": {
                "type": "object",
                "properties": {
                    "document": {
                        "description": "The created document object",
                        "type": "object"
                    }
                }
            }
        },
        "export_document_to_pdf": {
            "name": "export_document_to_pdf",
            "description": "Export the document to PDF format",
            "arguments": {
                "type": "object",
                "properties": {
                    "document": {
                        "type": "object",
                        "description": "The document object to be exported"
                    },
                    "format": {
                        "type": "string",
                        "description": "The file format to export"
                    }
                }
            },
            "results": {
                "type": "object",
                "properties": {
                    "outcome": {
                        "description": "Whether the export was successful",
                        "type": "string"
                    }
                }
            }
        },
        "set_todo": {
            "name": "set_todo",
            "description": "Set To-Do Item",
            "arguments": {
                "type": "object",
                "properties": {
                    "todo_id": {
                        "type": "string",
                        "description": "ID of the to-do item"
                    },
                    "task_title": {
                        "type": "string",
                        "description": "Task title"
                    },
                    "due_date": {
                        "type": "string",
                        "description": "Due date"
                    },
                    "priority_level": {
                        "type": "string",
                        "description": "Priority level: High, Medium, Low"
                    },
                    "task_status": {
                        "type": "string",
                        "description": "Task status: Not Started, In Progress, Completed"
                    }
                }
            },
            "results": {
                "type": "object",
                "properties": {
                    "outcome": {
                        "description": "Whether the to-do item was successfully created",
                        "type": "string"
                    }
                }
            }
        },
        "create_and_send_email_reminders": {
            "name": "create_and_send_email_reminders",
            "description": "Create and send email reminders for specified events",
            "arguments": {
                "type": "object",
                "properties": {
                    "email_address": {
                        "type": "string",
                        "description": "Email address to receive reminders"
                    },
                    "reminders": {
                        "type": "array",
                        "description": "List of reminder events",
                        "items": {
                            "type": "object",
                            "properties": {
                                "event_name": {
                                    "type": "string",
                                    "description": "Event name"
                                },
                                "event_time": {
                                    "type": "string",
                                    "description": "Specific time of the event"
                                },
                                "reminder_time": {
                                    "type": "string",
                                    "description": "Time to send the reminder"
                                }
                            },
                            "required": [
                                "event_name",
                                "event_time",
                                "reminder_time"
                            ]
                        }
                    }
                }
            },
            "results": {
                "type": "object",
                "properties": {
                    "send_status": {
                        "type": "array",
                        "description": "Sending status of each reminder",
                        "items": {
                            "type": "object",
                            "properties": {
                                "event_name": {
                                    "type": "string",
                                    "description": "Event name"
                                },
                                "status": {
                                    "type": "string",
                                    "description": "Success or failure of sending"
                                }
                            }
                        }
                    }
                }
            }
        },
        "import_schedule": {
            "name": "import_schedule",
            "description": "Import schedule",
            "arguments": {
                "type": "object",
                "properties": {
                    "schedule_id": {
                        "type": "string",
                        "description": "ID of the schedule"
                    },
                    "event_name": {
                        "type": "string",
                        "description": "Name of the event"
                    },
                    "start_time": {
                        "type": "string",
                        "description": "Start time"
                    },
                    "end_time": {
                        "type": "string",
                        "description": "End time"
                    },
                    "location": {
                        "type": "string",
                        "description": "Location of the event"
                    },
                    "reminders": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Reminder settings (e.g., '10 minutes before', '1 hour before')"
                    }
                }
            },
            "results": {
                "type": "object",
                "properties": {
                    "outcome": {
                        "description": "Whether the schedule was successfully imported",
                        "type": "string"
                    }
                }
            }
        },
        "import_agenda": {
            "name": "import_agenda",
            "description": "Import agenda tool",
            "arguments": {
                "type": "object",
                "properties": {
                    "agenda_id": {
                        "type": "string",
                        "description": "The ID of the agenda"
                    },
                    "agenda_title": {
                        "type": "string",
                        "description": "The title of the agenda"
                    },
                    "agenda_start_time": {
                        "type": "string",
                        "description": "The start time of the agenda"
                    },
                    "agenda_end_time": {
                        "type": "string",
                        "description": "The end time of the agenda"
                    },
                    "agenda_participants": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The participants of the agenda"
                    }
                }
            },
            "results": {
                "type": "object",
                "properties": {
                    "outcome": {
                        "description": "Whether the agenda was successfully imported",
                        "type": "string"
                    }
                }
            }
        },
        "generate_unique_id": {
            "name": "generate_unique_id",
            "description": "Generate a unique identifier ID",
            "arguments": {
                "type": "object",
                "properties": {
                    "event_name": {
                        "type": "string",
                        "description": "Event name"
                    },
                    "start_time": {
                        "type": "string",
                        "description": "Start time"
                    }
                }
            },
            "results": {
                "type": "object",
                "properties": {
                    "event_id": {
                        "description": "Generated unique identifier ID",
                        "type": "string"
                    }
                }
            }
        },
        "view_schedule": {
            "name": "view_schedule",
            "description": "View existing schedules",
            "arguments": {
                "type": "object",
                "properties": {
                    "schedule_id": {
                        "type": "string",
                        "description": "The schedule id for viewing"
                    },
                    "user_id": {
                        "type": "string",
                        "description": "The user's id"
                    },
                    "date": {
                        "type": "string",
                        "description": "The date to view"
                    },
                    "time_range": {
                        "type": "string",
                        "description": "The time range to view"
                    }
                }
            },
            "results": {
                "type": "object",
                "properties": {
                    "schedule_details": {
                        "description": "The returned schedule details",
                        "type": "string"
                    }
                }
            }
        },
        "create_shared_calendar": {
            "name": "create_shared_calendar",
            "description": "Create shared calendar",
            "arguments": {
                "type": "object",
                "properties": {
                    "calendar_id": {
                        "type": "string",
                        "description": "ID of the calendar"
                    },
                    "event_title": {
                        "type": "string",
                        "description": "Event title"
                    },
                    "event_date": {
                        "type": "string",
                        "description": "Event date"
                    },
                    "event_time": {
                        "type": "string",
                        "description": "Event time"
                    },
                    "event_location": {
                        "type": "string",
                        "description": "Event geographic location"
                    },
                    "participants": {
                        "type": "array",
                        "description": "Email addresses of participants"
                    },
                    "duration": {
                        "type": "integer",
                        "description": "Duration of the event (minutes)"
                    }
                }
            },
            "results": {
                "type": "object",
                "properties": {
                    "outcome": {
                        "description": "Whether the shared calendar was created successfully",
                        "type": "string"
                    }
                }
            }
        },
        "shared_calendar": {
            "name": "shared_calendar",
            "description": "Create and share calendar events",
            "arguments": {
                "type": "object",
                "properties": {
                    "event_id": {
                        "type": "string",
                        "description": "The id of the event"
                    },
                    "event_title": {
                        "type": "string",
                        "description": "The name of the event"
                    },
                    "event_date": {
                        "type": "string",
                        "description": "The date of the event"
                    },
                    "event_location": {
                        "type": "string",
                        "description": "The location of the event"
                    },
                    "event_duration": {
                        "type": "integer",
                        "description": "The duration of the event (minutes)"
                    },
                    "shared_with": {
                        "type": "array",
                        "description": "List of users the event is shared with",
                        "items": {
                            "type": "string"
                        }
                    }
                }
            },
            "results": {
                "type": "object",
                "properties": {
                    "outcome": {
                        "description": "Whether the event was successfully created and shared",
                        "type": "string"
                    }
                }
            }
        },
        "schedule_planner": {
            "name": "schedule_planner",
            "description": "Arrange and manage personal schedules",
            "arguments": {
                "type": "object",
                "properties": {
                    "event_id": {
                        "type": "string",
                        "description": "The id of the event"
                    },
                    "task_name": {
                        "type": "string",
                        "description": "Task name"
                    },
                    "start_time": {
                        "type": "string",
                        "description": "Start time"
                    },
                    "end_time": {
                        "type": "string",
                        "description": "End time"
                    },
                    "location": {
                        "type": "string",
                        "description": "The geographical location of the event"
                    },
                    "priority": {
                        "type": "string",
                        "description": "The priority of the task (low, medium, high)"
                    }
                }
            },
            "results": {
                "type": "object",
                "properties": {
                    "status": {
                        "description": "Whether the schedule is successfully arranged",
                        "type": "string"
                    }
                }
            }
        },
        "email_reminder": {
            "name": "email_reminder",
            "description": "Set up email reminder",
            "arguments": {
                "type": "object",
                "properties": {
                    "participants": {
                        "type": "string",
                        "description": "Email addresses of participants"
                    },
                    "content": {
                        "type": "string",
                        "description": "Email content"
                    },
                    "send_time": {
                        "type": "string",
                        "description": "Email sending time"
                    },
                    "reminder_time": {
                        "type": "string",
                        "description": "Reminder time"
                    },
                    "email_template": {
                        "type": "string",
                        "description": "Email template content"
                    },
                    "subject": {
                        "type": "string",
                        "description": "Email subject"
                    }
                }
            },
            "results": {
                "type": "object",
                "properties": {
                    "email_status": {
                        "description": "Whether the email was sent successfully",
                        "type": "string"
                    },
                    "setup_status": {
                        "type": "boolean",
                        "description": "Whether the email reminder was set up successfully"
                    }
                }
            }
        },
        "book_meeting_room": {
            "name": "book_meeting_room",
            "description": "Complete meeting room reservation",
            "arguments": {
                "type": "object",
                "properties": {
                    "date": {
                        "type": "string",
                        "description": "Reservation date"
                    },
                    "start_time": {
                        "type": "string",
                        "description": "Meeting start time"
                    },
                    "duration": {
                        "type": "string",
                        "description": "Meeting duration, in hours"
                    },
                    "capacity": {
                        "type": "string",
                        "description": "Meeting room capacity"
                    },
                    "room_id": {
                        "type": "string",
                        "description": "Meeting room ID"
                    },
                    "city": {
                        "type": "string",
                        "description": "City where the meeting room is located"
                    },
                    "equipment": {
                        "type": "array",
                        "description": "Meeting room equipment requirements",
                        "items": {
                            "type": "string"
                        }
                    },
                    "meeting_name": {
                        "type": "string",
                        "description": "Meeting name"
                    },
                    "location": {
                        "type": "string",
                        "description": "Meeting room location"
                    },
                    "department": {
                        "type": "string",
                        "description": "Department name"
                    },
                    "room_type": {
                        "type": "string",
                        "description": "Meeting room type"
                    },
                    "recurrence_pattern": {
                        "type": "string",
                        "description": "Event recurrence pattern"
                    },
                    "end_recurrence": {
                        "type": "string",
                        "description": "End date of recurrence"
                    },
                    "user_name": {
                        "type": "string",
                        "description": "User name"
                    },
                    "contact": {
                        "type": "string",
                        "description": "User contact information"
                    },
                    "room": {
                        "type": "string",
                        "description": "Meeting room name"
                    },
                    "booker_info": {
                        "type": "string",
                        "description": "Booker information"
                    }
                }
            },
            "results": {
                "type": "object",
                "properties": {
                    "booking_status": {
                        "type": "string",
                        "description": "Meeting room booking status"
                    },
                    "room_id": {
                        "type": "string",
                        "description": "Booked meeting room ID"
                    },
                    "notification_status": {
                        "type": "string",
                        "description": "Meeting notification sending status"
                    },
                    "outcome": {
                        "description": "Whether the reservation was successful",
                        "type": "string"
                    },
                    "meeting_id": {
                        "description": "Meeting ID of the successful reservation",
                        "type": "string"
                    },
                    "confirmation_info": {
                        "type": "string",
                        "description": "Reservation confirmation information"
                    }
                }
            }
        },
        "send_meeting_invitations": {
            "name": "send_meeting_invitations",
            "description": "Send meeting invitations",
            "arguments": {
                "type": "object",
                "properties": {
                    "email_list": {
                        "type": "array",
                        "description": "List of attendees' emails",
                        "items": {
                            "type": "string"
                        }
                    },
                    "invitation_content": {
                        "type": "string",
                        "description": "Content of the invitation letter"
                    },
                    "event_name": {
                        "type": "string",
                        "description": "Event name"
                    },
                    "start_time": {
                        "type": "string",
                        "description": "Event start time"
                    },
                    "end_time": {
                        "type": "string",
                        "description": "Event end time"
                    },
                    "location": {
                        "type": "string",
                        "description": "Event location"
                    },
                    "agenda_title": {
                        "type": "string",
                        "description": "Agenda title"
                    },
                    "organizer": {
                        "type": "string",
                        "description": "Organizer's name"
                    },
                    "meeting_topic": {
                        "type": "string",
                        "description": "Meeting topic"
                    },
                    "meeting_location": {
                        "type": "string",
                        "description": "Meeting location"
                    },
                    "organizer_name": {
                        "type": "string",
                        "description": "Meeting initiator's name"
                    },
                    "organizer_email": {
                        "type": "string",
                        "description": "Meeting initiator's email"
                    },
                    "content": {
                        "type": "string",
                        "description": "Meeting content"
                    },
                    "meeting_name": {
                        "type": "string",
                        "description": "Meeting name"
                    },
                    "meeting_id": {
                        "type": "string",
                        "description": "Meeting ID"
                    },
                    "meeting_link": {
                        "type": "string",
                        "description": "Online meeting link"
                    },
                    "meeting_end_time": {
                        "type": "string",
                        "description": "Meeting end time"
                    },
                    "email_content": {
                        "type": "string",
                        "description": "Content of the meeting notification email"
                    },
                    "meeting_time": {
                        "type": "string",
                        "description": "Meeting time"
                    },
                    "account_info": {
                        "type": "string",
                        "description": "Online meeting tool account information"
                    }
                }
            },
            "results": {
                "type": "object",
                "properties": {
                    "send_status": {
                        "type": "string",
                        "description": "Status of the invitation sent"
                    },
                    "outcome": {
                        "description": "Whether the invitation was successfully sent",
                        "type": "string"
                    },
                    "sending_status": {
                        "description": "Whether the invitation was successfully sent",
                        "type": "boolean"
                    }
                }
            }
        },
        "view_agenda": {
            "name": "view_agenda",
            "description": "View schedule",
            "arguments": {
                "type": "object",
                "properties": {
                    "agenda_id": {
                        "type": "string",
                        "description": "ID of the agenda"
                    },
                    "user_id": {
                        "type": "string",
                        "description": "ID of the user"
                    },
                    "date": {
                        "type": "string",
                        "description": "The date to view the agenda"
                    }
                }
            },
            "results": {
                "type": "object",
                "properties": {
                    "agenda_title": {
                        "type": "string",
                        "description": "Agenda title"
                    },
                    "agenda_time": {
                        "type": "string",
                        "description": "Agenda time"
                    },
                    "agenda_location": {
                        "type": "string",
                        "description": "Agenda location"
                    },
                    "agenda_duration": {
                        "type": "integer",
                        "description": "Agenda duration (minutes)"
                    },
                    "view_status": {
                        "type": "string",
                        "description": "Agenda view status"
                    }
                }
            }
        },
        "calendar_note": {
            "name": "calendar_note",
            "description": "Add calendar note",
            "arguments": {
                "type": "object",
                "properties": {
                    "note_id": {
                        "type": "string",
                        "description": "ID of the note"
                    },
                    "event_title": {
                        "type": "string",
                        "description": "Title of the event"
                    },
                    "note_date": {
                        "type": "string",
                        "description": "Date of the note"
                    },
                    "note_content": {
                        "type": "string",
                        "description": "Content of the note"
                    },
                    "priority_level": {
                        "type": "integer",
                        "description": "Priority level of the note (1-5)"
                    }
                }
            },
            "results": {
                "type": "object",
                "properties": {
                    "status": {
                        "description": "Whether the note was successfully added",
                        "type": "string"
                    }
                }
            }
        },
        "calendar_annotation": {
            "name": "calendar_annotation",
            "description": "Add annotations in the calendar",
            "arguments": {
                "type": "object",
                "properties": {
                    "annotation_id": {
                        "type": "string",
                        "description": "The id of the annotation"
                    },
                    "date": {
                        "type": "string",
                        "description": "The date the annotation is added"
                    },
                    "annotation_time": {
                        "type": "string",
                        "description": "The time of the annotation"
                    },
                    "annotation_location": {
                        "type": "string",
                        "description": "The geographical location of the annotation"
                    },
                    "annotation_content": {
                        "type": "string",
                        "description": "The content of the annotation"
                    }
                }
            },
            "results": {
                "type": "object",
                "properties": {
                    "outcome": {
                        "description": "Whether the annotation was successfully added",
                        "type": "string"
                    }
                }
            }
        },
        "share_schedule_permission": {
            "name": "share_schedule_permission",
            "description": "Share Schedule Permission",
            "arguments": {
                "type": "object",
                "properties": {
                    "schedule_id": {
                        "type": "string",
                        "description": "ID of the schedule"
                    },
                    "user_id": {
                        "type": "string",
                        "description": "ID of the user"
                    },
                    "permission_level": {
                        "type": "string",
                        "description": "Permission level"
                    },
                    "expiration_date": {
                        "type": "string",
                        "description": "Expiration date of the permission"
                    }
                }
            },
            "results": {
                "type": "object",
                "properties": {
                    "status": {
                        "description": "Whether the permission was successfully shared",
                        "type": "string"
                    }
                }
            }
        },
        "edit_agenda": {
            "name": "edit_agenda",
            "description": "Edit Agenda",
            "arguments": {
                "type": "object",
                "properties": {
                    "agenda_id": {
                        "type": "string",
                        "description": "ID of the agenda"
                    },
                    "new_agenda_title": {
                        "type": "string",
                        "description": "New title of the agenda"
                    },
                    "new_agenda_time": {
                        "type": "string",
                        "description": "New time of the agenda"
                    },
                    "new_agenda_location": {
                        "type": "string",
                        "description": "New geographical location of the agenda"
                    },
                    "new_agenda_duration": {
                        "type": "integer",
                        "description": "New duration of the agenda (minutes)"
                    },
                    "schedule_description": {
                        "type": "string",
                        "description": "Detailed description of the agenda"
                    }
                }
            },
            "results": {
                "type": "object",
                "properties": {
                    "outcome": {
                        "description": "Whether the agenda was successfully edited",
                        "type": "string"
                    }
                }
            }
        },
        "set_schedule_date_range": {
            "name": "set_schedule_date_range",
            "description": "Set the start and end dates of the schedule",
            "arguments": {
                "type": "object",
                "properties": {
                    "schedule_title": {
                        "type": "string",
                        "description": "Title of the schedule"
                    },
                    "start_date": {
                        "type": "string",
                        "description": "Start date of the schedule"
                    },
                    "end_date": {
                        "type": "string",
                        "description": "End date of the schedule"
                    }
                }
            },
            "results": {
                "type": "object",
                "properties": {
                    "date_range_status": {
                        "description": "Whether the date range was successfully set",
                        "type": "string"
                    }
                }
            }
        },
        "set_schedule_repetition": {
            "name": "set_schedule_repetition",
            "description": "Set the repetition type and end date of the schedule",
            "arguments": {
                "type": "object",
                "properties": {
                    "schedule_title": {
                        "type": "string",
                        "description": "Title of the schedule"
                    },
                    "repetition_type": {
                        "type": "string",
                        "description": "Type of repetition"
                    },
                    "end_date": {
                        "type": "string",
                        "description": "End date of repetition"
                    }
                }
            },
            "results": {
                "type": "object",
                "properties": {
                    "repetition_status": {
                        "description": "Whether the repetition setting is successful",
                        "type": "string"
                    }
                }
            }
        },
        "set_schedule_tag": {
            "name": "set_schedule_tag",
            "description": "Set a tag for the schedule",
            "arguments": {
                "type": "object",
                "properties": {
                    "tag_id": {
                        "type": "string",
                        "description": "The ID of the tag"
                    },
                    "schedule_title": {
                        "type": "string",
                        "description": "The title of the schedule"
                    },
                    "tag_name": {
                        "type": "string",
                        "description": "The name of the tag"
                    },
                    "tag_color": {
                        "type": "string",
                        "description": "The color of the tag"
                    },
                    "tag_description": {
                        "type": "string",
                        "description": "The description of the tag"
                    }
                }
            },
            "results": {
                "type": "object",
                "properties": {
                    "outcome": {
                        "description": "Whether the tag was successfully set",
                        "type": "string"
                    }
                }
            }
        },
        "set_schedule_priority": {
            "name": "set_schedule_priority",
            "description": "Set priority for schedule",
            "arguments": {
                "type": "object",
                "properties": {
                    "schedule_title": {
                        "type": "string",
                        "description": "Title of the schedule"
                    },
                    "priority": {
                        "type": "string",
                        "description": "Priority of the schedule"
                    }
                }
            },
            "results": {
                "type": "object",
                "properties": {
                    "priority_status": {
                        "description": "Whether the priority was successfully set",
                        "type": "string"
                    }
                }
            }
        },
        "save_schedule": {
            "name": "save_schedule",
            "description": "Save schedule settings",
            "arguments": {
                "type": "object",
                "properties": {
                    "schedule_title": {
                        "type": "string",
                        "description": "Title of the schedule"
                    }
                }
            },
            "results": {
                "type": "object",
                "properties": {
                    "save_status": {
                        "description": "Whether the schedule was saved successfully",
                        "type": "string"
                    }
                }
            }
        },
        "manage_schedule": {
            "name": "manage_schedule",
            "description": "Manage and arrange schedules",
            "arguments": {
                "type": "object",
                "properties": {
                    "schedule_id": {
                        "type": "string",
                        "description": "The ID of the schedule"
                    },
                    "event_name": {
                        "type": "string",
                        "description": "Event name"
                    },
                    "event_time": {
                        "type": "string",
                        "description": "Event time"
                    },
                    "event_location": {
                        "type": "string",
                        "description": "Event geographical location"
                    },
                    "event_priority": {
                        "type": "integer",
                        "description": "Event priority (starting from 1, the smaller the number, the higher the priority)"
                    }
                }
            },
            "results": {
                "type": "object",
                "properties": {
                    "outcome": {
                        "description": "Whether the schedule was successfully arranged",
                        "type": "string"
                    }
                }
            }
        },
        "agenda_sorting": {
            "name": "agenda_sorting",
            "description": "Sort the agenda",
            "arguments": {
                "type": "object",
                "properties": {
                    "agenda_id": {
                        "type": "string",
                        "description": "The ID of the agenda"
                    },
                    "agenda_title": {
                        "type": "string",
                        "description": "The name of the agenda"
                    },
                    "start_time": {
                        "type": "string",
                        "description": "The start time of the agenda"
                    },
                    "end_time": {
                        "type": "string",
                        "description": "The end time of the agenda"
                    },
                    "priority": {
                        "type": "integer",
                        "description": "The priority of the agenda"
                    }
                }
            },
            "results": {
                "type": "object",
                "properties": {
                    "outcome": {
                        "description": "Whether the agenda was successfully sorted",
                        "type": "string"
                    }
                }
            }
        },
        "check_room_availability": {
            "name": "check_room_availability",
            "description": "Check the availability and price of room types at a specified hotel on specific dates",
            "arguments": {
                "type": "object",
                "properties": {
                    "hotel_name": {
                        "type": "string",
                        "description": "Hotel Name"
                    },
                    "check_in_date": {
                        "type": "string",
                        "description": "Check-in Date"
                    },
                    "check_out_date": {
                        "type": "string",
                        "description": "Check-out Date"
                    },
                    "location": {
                        "type": "string",
                        "description": "Hotel Location"
                    },
                    "room_type": {
                        "type": "string",
                        "description": "Room Type"
                    },
                    "hotel_id": {
                        "type": "string",
                        "description": "Hotel Identifier ID"
                    },
                    "number_of_rooms": {
                        "type": "integer",
                        "description": "Number of Rooms"
                    },
                    "location_preference": {
                        "type": "string",
                        "description": "Location Preference"
                    }
                }
            },
            "results": {
                "type": "object",
                "properties": {
                    "availability": {
                        "type": "boolean",
                        "description": "Whether the room is available"
                    },
                    "price": {
                        "type": "number",
                        "description": "Room Price"
                    },
                    "availability_status": {
                        "type": "string",
                        "description": "Hotel Room Availability Status"
                    },
                    "hotel_id": {
                        "type": "string",
                        "description": "Hotel Identifier ID"
                    },
                    "available_rooms": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of Available Rooms"
                    },
                    "offers": {
                        "type": "array",
                        "description": "List of Available Promotions"
                    },
                    "selected_option": {
                        "type": "string",
                        "description": "Selected Booking Option"
                    }
                }
            }
        },
        "schedule_sorter": {
            "name": "schedule_sorter",
            "description": "Schedule Sorting Tool",
            "arguments": {
                "type": "object",
                "properties": {
                    "event_id": {
                        "type": "string",
                        "description": "ID of the event"
                    },
                    "event_name": {
                        "type": "string",
                        "description": "Name of the event"
                    },
                    "start_time": {
                        "type": "string",
                        "description": "Start time of the event"
                    },
                    "end_time": {
                        "type": "string",
                        "description": "End time of the event"
                    },
                    "location": {
                        "type": "string",
                        "description": "Geographical location of the event"
                    },
                    "priority": {
                        "type": "integer",
                        "description": "Priority of the event"
                    }
                }
            },
            "results": {
                "type": "object",
                "properties": {
                    "sort_results": {
                        "description": "Sorted schedule",
                        "type": "array"
                    }
                }
            }
        },
        "delete_schedule": {
            "name": "delete_schedule",
            "description": "Delete the specified schedule event",
            "arguments": {
                "type": "object",
                "properties": {
                    "schedule_id": {
                        "type": "string",
                        "description": "The ID of the schedule"
                    },
                    "confirm_deletion": {
                        "type": "boolean",
                        "description": "Confirm the deletion of this schedule"
                    },
                    "user_id": {
                        "type": "string",
                        "description": "User ID"
                    },
                    "start_date": {
                        "type": "string",
                        "description": "Start date"
                    },
                    "end_date": {
                        "type": "string",
                        "description": "End date"
                    }
                }
            },
            "results": {
                "type": "object",
                "properties": {
                    "outcome": {
                        "description": "Whether the schedule was successfully deleted",
                        "type": "string"
                    }
                }
            }
        }
    },
    "Health": {
        "medicine_info_search": {
            "name": "medicine_info_search",
            "description": "Medicine Information Query Tool",
            "arguments": {
                "type": "object",
                "properties": {
                    "medicineName": {
                        "description": "Name of the medicine",
                        "type": "string"
                    },
                    "manufacturer": {
                        "description": "Manufacturer",
                        "type": "string"
                    },
                    "expiryDate": {
                        "description": "Expiry date",
                        "type": "string"
                    }
                }
            },
            "results": {
                "type": "object",
                "properties": {
                    "ingredients": {
                        "description": "Ingredients of the medicine",
                        "type": "string"
                    },
                    "indication": {
                        "description": "Indications",
                        "type": "string"
                    },
                    "sideEffects": {
                        "description": "Possible side effects",
                        "type": "string"
                    }
                }
            }
        },
        "weather_query": {
            "name": "weather_query",
            "description": "Get the weather forecast for a specified location and date",
            "arguments": {
                "type": "object",
                "properties": {
                    "date": {
                        "type": "string",
                        "description": "The date for which to obtain the weather forecast"
                    },
                    "location": {
                        "type": "string",
                        "description": "The location for which to query the weather"
                    },
                    "forecast_hours": {
                        "type": "integer",
                        "description": "Forecast time (hours)",
                        "minimum": 1,
                        "maximum": 24
                    }
                }
            },
            "results": {
                "type": "object",
                "properties": {
                    "weather_info": {
                        "type": "string",
                        "description": "Weather forecast information"
                    },
                    "weather_data": {
                        "type": "object",
                        "description": "The obtained weather data, including temperature, probability of precipitation, wind speed, etc."
                    },
                    "status": {
                        "type": "boolean",
                        "description": "Whether the retrieval operation was successful"
                    },
                    "temperature": {
                        "type": "string",
                        "description": "Temperature information"
                    },
                    "humidity": {
                        "type": "string",
                        "description": "Humidity information"
                    },
                    "weather_status": {
                        "type": "string",
                        "description": "Current weather condition description"
                    }
                }
            }
        },
        "sport_activity_recorder": {
            "name": "sport_activity_recorder",
            "description": "Record and track users' sports data, including running, swimming, and cycling",
            "arguments": {
                "type": "object",
                "properties": {
                    "username": {
                        "description": "User name",
                        "type": "string",
                        "example": "JohnDoe"
                    },
                    "activity_type": {
                        "description": "Type of activity",
                        "type": "string",
                        "enum": [
                            "running",
                            "swimming",
                            "cycling"
                        ],
                        "example": "running"
                    },
                    "date": {
                        "description": "Date of activity",
                        "type": "string",
                        "format": "date",
                        "example": "2021-07-11"
                    },
                    "duration": {
                        "description": "Duration of the activity in minutes",
                        "type": "number",
                        "minimum": 10,
                        "maximum": 600,
                        "example": 60
                    },
                    "intensity": {
                        "description": "Intensity level, from 1 to 3, with 3 being the highest intensity",
                        "type": "number",
                        "minimum": 1,
                        "maximum": 3,
                        "example": 2
                    },
                    "distance": {
                        "description": "Distance of the activity in kilometers",
                        "type": "number",
                        "minimum": 1,
                        "example": 10
                    },
                    "weather": {
                        "description": "Weather on the day of the activity",
                        "type": "string",
                        "enum": [
                            "clear",
                            "partly cloudy",
                            "light rain",
                            "heavy rain",
                            "snow"
                        ],
                        "example": "clear"
                    }
                }
            },
            "results": {
                "type": "object",
                "properties": {
                    "record_status": {
                        "description": "Feedback information of the activity record",
                        "type": "string"
                    }
                }
            }
        },
        "personal_tax_calculator": {
            "name": "personal_tax_calculator",
            "description": "Personal Income Tax Calculator, calculates the tax rate for various types of income. Applicable to wages, self-employed individuals, etc.",
            "arguments": {
                "type": "object",
                "properties": {
                    "income": {
                        "type": "number",
                        "description": "Income, must be a reasonable value, cannot be negative, cannot be null, and cannot be non-numeric characters",
                        "example": 5000
                    },
                    "incomeType": {
                        "type": "string",
                        "enum": [
                            "salary",
                            "freelance",
                            "invest"
                        ],
                        "description": "Type of income, can be salary, freelance, or investment income"
                    },
                    "residencyStatus": {
                        "type": "string",
                        "enum": [
                            "resident",
                            "nonresident"
                        ],
                        "description": "Residency status, can be resident or non-resident"
                    },
                    "deductions": {
                        "type": "number",
                        "description": "The amount to be deducted, must be a reasonable value, cannot be negative, cannot be null, and cannot be non-numeric characters",
                        "example": 1500
                    }
                }
            },
            "results": {
                "type": "object",
                "properties": {
                    "taxAmount": {
                        "type": "number",
                        "description": "The tax amount calculated based on income and deductions"
                    },
                    "effectiveTaxRate": {
                        "type": "number",
                        "description": "The effective tax rate, which is the ratio of tax amount to income"
                    }
                }
            }
        },
        "vision_protection_tool": {
            "name": "vision_protection_tool",
            "description": "Vision protection tool, helps to control internet usage time and provides users with appropriate suggestions for protecting their eyesight",
            "arguments": {
                "type": "object",
                "properties": {
                    "age": {
                        "description": "User's age, only integer values from 1 to 99 are allowed",
                        "type": "integer",
                        "example": 25
                    },
                    "eyeCondition": {
                        "description": "User's eye condition, options include good, general, and poor",
                        "type": "string",
                        "enum": [
                            "good",
                            "general",
                            "poor"
                        ]
                    },
                    "dailyInternetUse": {
                        "description": "Daily internet usage time, in hours",
                        "type": "integer",
                        "example": 8
                    },
                    "eyesight": {
                        "description": "User's eyesight index, represented as a decimal",
                        "type": "number",
                        "example": 0.8
                    },
                    "fingerEyeCoordinationGrade": {
                        "description": "Finger-eye coordination grade, rated from A to E",
                        "type": "string",
                        "enum": [
                            "A",
                            "B",
                            "C",
                            "D",
                            "E"
                        ]
                    },
                    "nightlightUsage": {
                        "description": "Nightlight mode usage rate",
                        "type": "number",
                        "example": 0.5
                    }
                }
            },
            "results": {
                "type": "object",
                "properties": {
                    "sightProtectionPlan": {
                        "description": "Eyesight protection plan",
                        "type": "object"
                    }
                }
            }
        },
        "special_recipe_search": {
            "name": "special_recipe_search",
            "description": "A tool for searching various recipes, which can search by dish name, cuisine, ingredients, cooking method, and personal taste",
            "arguments": {
                "type": "object",
                "properties": {
                    "dish_name": {
                        "description": "Dish Name",
                        "type": "string",
                        "example": "Braised Pork"
                    },
                    "cuisine_type": {
                        "description": "Cuisine",
                        "type": "string",
                        "enum": [
                            "Sichuan Cuisine",
                            "Hunan Cuisine",
                            "Cantonese Cuisine",
                            "Shandong Cuisine",
                            "Jiangsu Cuisine",
                            "Zhejiang Cuisine",
                            "Fujian Cuisine",
                            "Anhui Cuisine",
                            "Beijing Cuisine",
                            "Northeastern Cuisine",
                            "Northwestern Cuisine",
                            "Henan Cuisine",
                            "Jiangxi Cuisine",
                            "Hubei Cuisine",
                            "Yunnan Cuisine",
                            "Guizhou Cuisine",
                            "Xinjiang Cuisine",
                            "Hainan Cuisine"
                        ]
                    },
                    "ingredients": {
                        "description": "Ingredients",
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "cooking_method": {
                        "description": "Cooking Method",
                        "type": "string",
                        "enum": [
                            "Stir-fry",
                            "Stew",
                            "Steam",
                            "Boil",
                            "Bake",
                            "Roast",
                            "Mix",
                            "Cook in a pot",
                            "Braise",
                            "Deep-fry",
                            "Smoke",
                            "Salt-bake",
                            "Simmer",
                            "Cook down",
                            "Soak",
                            "Smoke",
                            "Quick-fry",
                            "Sauce",
                            "Put out the fire",
                            "Stew",
                            "Deep-fry"
                        ]
                    },
                    "taste": {
                        "description": "Taste",
                        "type": "string",
                        "enum": [
                            "Salty",
                            "Sweet",
                            "Sour",
                            "Spicy",
                            "Fragrant",
                            "Bitter",
                            "Numbing Spicy",
                            "Five-spice",
                            "Curry",
                            "Sauce",
                            "Mellow",
                            "Light",
                            "Seafood",
                            "Oil-braised",
                            "Sweet and Sour",
                            "Fresh"
                        ]
                    }
                }
            },
            "results": {
                "type": "object",
                "properties": {
                    "recipe_information": {
                        "description": "Recipe Details",
                        "type": "string"
                    }
                }
            }
        },
        "medical_knowledge_search": {
            "name": "medical_knowledge_search",
            "description": "Search for possible diseases, nursing advice, suitable medication, and recommended dosage based on symptoms and patient information",
            "arguments": {
                "type": "object",
                "properties": {
                    "diseaseName": {
                        "description": "Disease name",
                        "type": "string"
                    },
                    "symptom": {
                        "description": "List of symptoms, separated by commas",
                        "type": "string"
                    },
                    "medication": {
                        "description": "Medication name",
                        "type": "string"
                    },
                    "age": {
                        "description": "Patient's age",
                        "type": "string"
                    },
                    "weight": {
                        "description": "Patient's weight",
                        "type": "string"
                    }
                }
            },
            "results": {
                "type": "object",
                "properties": {
                    "medical_advice": {
                        "description": "Medical advice",
                        "type": "string"
                    },
                    "possible_diseases": {
                        "description": "List of possible diseases",
                        "type": "array"
                    },
                    "care_advice": {
                        "description": "Nursing advice",
                        "type": "string"
                    },
                    "medication_options": {
                        "description": "Medication options and recommended dosages",
                        "type": "array"
                    }
                }
            }
        },
        "pharmacy_search": {
            "name": "pharmacy_search",
            "description": "Search for pharmacies in a specified area",
            "arguments": {
                "type": "object",
                "properties": {
                    "location": {
                        "type": "string",
                        "description": "The geographic location information to search for"
                    }
                }
            },
            "results": {
                "type": "object",
                "properties": {
                    "pharmacies": {
                        "type": "array",
                        "description": "List of nearby pharmacies"
                    }
                }
            }
        },
        "nutrition_analysis": {
            "name": "nutrition_analysis",
            "description": "Food Nutrition Analysis Tool",
            "arguments": {
                "type": "object",
                "properties": {
                    "foodName": {
                        "description": "Food Name",
                        "type": "string"
                    },
                    "quantity": {
                        "description": "Food Quantity",
                        "type": "integer"
                    },
                    "date": {
                        "description": "Analysis Date",
                        "type": "string",
                        "pattern": "\\d{4}-\\d{2}-\\d{2} \\d{2}:\\d{2}"
                    }
                }
            },
            "results": {
                "type": "object",
                "properties": {
                    "calories": {
                        "description": "Energy; Calories",
                        "type": "number"
                    },
                    "protein": {
                        "description": "Protein",
                        "type": "number"
                    },
                    "carbohydrate": {
                        "description": "Carbohydrates",
                        "type": "number"
                    },
                    "fat": {
                        "description": "Fat",
                        "type": "number"
                    }
                }
            }
        },
        "self_care_advice_search": {
            "name": "self_care_advice_search",
            "description": "Self-care Advice Query Tool",
            "arguments": {
                "type": "object",
                "properties": {
                    "symptom": {
                        "description": "Symptom",
                        "type": "string"
                    }
                }
            },
            "results": {
                "type": "object",
                "properties": {
                    "self_care_advice": {
                        "description": "Self-care Advice",
                        "type": "string"
                    }
                }
            }
        },
        "calculate_percentage": {
            "name": "calculate_percentage",
            "description": "Calculate proportion",
            "arguments": {
                "type": "object",
                "properties": {
                    "part": {
                        "type": "integer",
                        "description": "Part value"
                    },
                    "whole": {
                        "type": "integer",
                        "description": "Whole value"
                    }
                }
            },
            "results": {
                "type": "object",
                "properties": {
                    "percentage": {
                        "type": "string",
                        "description": "Calculated percentage"
                    }
                }
            }
        }
    },
    "Other": {
        "ssh_connect": {
            "name": "ssh_connect",
            "description": "Connect to a server using SSH protocol",
            "arguments": {
                "type": "object",
                "properties": {
                    "server_address": {
                        "type": "string",
                        "description": "The IP address or domain name of the server"
                    },
                    "username": {
                        "type": "string",
                        "description": "The username to log in to the server"
                    },
                    "password": {
                        "type": "string",
                        "description": "The password to log in to the server"
                    },
                    "key": {
                        "type": "string",
                        "description": "The key"
                    }
                }
            },
            "results": {
                "type": "object",
                "properties": {
                    "connection_status": {
                        "type": "string",
                        "description": "Whether the connection to the server was successful"
                    },
                    "status": {
                        "type": "boolean",
                        "description": "Whether the connection operation was successful"
                    }
                }
            }
        },
        "file_modify": {
            "name": "file_modify",
            "description": "Used to modify the content of an existing file.",
            "arguments": {
                "type": "object",
                "properties": {
                    "file_path": {
                        "description": "The file path of the content to be modified",
                        "type": "string"
                    },
                    "new_file_path": {
                        "description": "The new file path",
                        "type": "string"
                    },
                    "content": {
                        "description": "The new content to be modified to",
                        "type": "string"
                    },
                    "append_content": {
                        "description": "The new content to be appended",
                        "type": "string"
                    },
                    "original_content": {
                        "description": "The original text to be modified",
                        "type": "string"
                    },
                    "section": {
                        "description": "The section position to be modified",
                        "type": "string"
                    },
                    "new_title": {
                        "description": "The new title after modification",
                        "type": "string"
                    }
                }
            },
            "results": {
                "type": "object",
                "properties": {
                    "status": {
                        "description": "Whether the modification operation was successful",
                        "type": "boolean"
                    }
                }
            }
        },
        "verify_file_content": {
            "name": "verify_file_content",
            "description": "Verify if the content of the specified file matches the expectation",
            "arguments": {
                "type": "object",
                "properties": {
                    "file_path": {
                        "type": "string",
                        "description": "The path of the file"
                    },
                    "expected_content": {
                        "type": "string",
                        "description": "The expected content of the file"
                    },
                    "required_contents": {
                        "type": "array",
                        "description": "List of contents that must be included in the file",
                        "items": {
                            "type": "string"
                        }
                    }
                }
            },
            "results": {
                "type": "object",
                "properties": {
                    "match": {
                        "type": "boolean",
                        "description": "Whether the file content matches the expectation"
                    },
                    "verification_status": {
                        "type": "string",
                        "description": "The verification status of the file content"
                    }
                }
            }
        },
        "file_delete": {
            "name": "file_delete",
            "description": "Used to delete a file at a specified path. After performing file_write or file_modify operations, if the related file is no longer needed, this API can be executed to delete it.",
            "arguments": {
                "type": "object",
                "properties": {
                    "file_path": {
                        "description": "The file path to be deleted",
                        "type": "string"
                    }
                }
            },
            "results": {
                "type": "object",
                "properties": {
                    "status": {
                        "description": "Whether the delete operation was successful",
                        "type": "boolean"
                    }
                }
            }
        },
        "check_file_deleted": {
            "name": "check_file_deleted",
            "description": "Used to check if the file has been successfully deleted.",
            "arguments": {
                "type": "object",
                "properties": {
                    "file_path": {
                        "type": "string",
                        "description": "The path of the file"
                    }
                }
            },
            "results": {
                "type": "object",
                "properties": {
                    "deletion_status": {
                        "type": "string",
                        "description": "The deletion status of the file"
                    }
                }
            }
        },
        "query_sales_status": {
            "name": "query_sales_status",
            "description": "Query the sales status of a specified product in a specific region",
            "arguments": {
                "type": "object",
                "properties": {
                    "location": {
                        "type": "string",
                        "description": "The region to be queried, such as 'Beijing' or 'Shanghai'"
                    },
                    "product_brand": {
                        "type": "string",
                        "description": "Product brand"
                    },
                    "product_model": {
                        "type": "string",
                        "description": "Product model"
                    }
                }
            },
            "results": {
                "type": "object",
                "properties": {
                    "sales_info": {
                        "type": "string",
                        "description": "Detailed information about the sales status"
                    }
                }
            }
        },
        "account_login": {
            "name": "account_login",
            "description": "Account Login Tool",
            "arguments": {
                "type": "object",
                "properties": {
                    "account_id": {
                        "description": "Account ID",
                        "type": "integer"
                    },
                    "verification_code": {
                        "description": "Verification Code",
                        "type": "string"
                    },
                    "username": {
                        "description": "Username",
                        "type": "string"
                    },
                    "password": {
                        "description": "User Password",
                        "type": "string"
                    }
                }
            },
            "results": {
                "type": "object",
                "properties": {
                    "login_status": {
                        "description": "Login Status",
                        "type": "string"
                    }
                }
            }
        },
        "vulnerability_search": {
            "name": "vulnerability_search",
            "description": "Search for known vulnerabilities of specific phone models and system versions",
            "arguments": {
                "type": "object",
                "properties": {
                    "phone_model": {
                        "type": "string",
                        "description": "Phone model"
                    },
                    "system_version": {
                        "type": "string",
                        "description": "System version"
                    }
                }
            },
            "results": {
                "type": "object",
                "properties": {
                    "vulnerabilities": {
                        "type": "array",
                        "description": "List of known vulnerabilities"
                    }
                }
            }
        },
        "system_update_check": {
            "name": "system_update_check",
            "description": "Check for system updates for specific phone models and system versions",
            "arguments": {
                "type": "object",
                "properties": {
                    "phone_model": {
                        "type": "string",
                        "description": "Phone model"
                    },
                    "system_version": {
                        "type": "string",
                        "description": "System version"
                    }
                }
            },
            "results": {
                "type": "object",
                "properties": {
                    "update_available": {
                        "type": "boolean",
                        "description": "Whether there is an available system update"
                    },
                    "update_details": {
                        "type": "string",
                        "description": "Detailed information about the system update"
                    }
                }
            }
        },
        "update_guide_retrieve": {
            "name": "update_guide_retrieve",
            "description": "Retrieve the system update download and installation guide for a specific phone model and system version",
            "arguments": {
                "type": "object",
                "properties": {
                    "phone_model": {
                        "type": "string",
                        "description": "Phone model"
                    },
                    "system_version": {
                        "type": "string",
                        "description": "System version"
                    }
                }
            },
            "results": {
                "type": "object",
                "properties": {
                    "guide": {
                        "type": "string",
                        "description": "Guide for system update download and installation"
                    }
                }
            }
        },
        "find_config_line": {
            "name": "find_config_line",
            "description": "Find a specific configuration line in the configuration file.",
            "arguments": {
                "type": "object",
                "properties": {
                    "file_path": {
                        "type": "string",
                        "description": "The path to the configuration file"
                    },
                    "search_pattern": {
                        "type": "string",
                        "description": "The content of the configuration line to search for"
                    }
                }
            },
            "results": {
                "type": "object",
                "properties": {
                    "line": {
                        "description": "The configuration line found",
                        "type": "string"
                    },
                    "status": {
                        "description": "Whether the search operation was successful",
                        "type": "boolean"
                    }
                }
            }
        },
        "test_db_connection": {
            "name": "test_db_connection",
            "description": "Run the database connection test command.",
            "arguments": {
                "type": "object",
                "properties": {
                    "db_address": {
                        "type": "string",
                        "description": "The new address of the database"
                    }
                }
            },
            "results": {
                "type": "object",
                "properties": {
                    "status": {
                        "description": "Whether the database connection test is successful",
                        "type": "boolean"
                    }
                }
            }
        },
        "postal_code_search": {
            "name": "postal_code_search",
            "description": "Postal Code Lookup Tool",
            "arguments": {
                "type": "object",
                "properties": {
                    "country": {
                        "description": "Country Name",
                        "type": "string"
                    },
                    "state": {
                        "description": "State or Province Name",
                        "type": "string"
                    },
                    "city": {
                        "description": "City Name",
                        "type": "string"
                    },
                    "district": {
                        "description": "District or County Name",
                        "type": "string"
                    }
                }
            },
            "results": {
                "type": "object",
                "properties": {
                    "postal_code": {
                        "description": "Postal Code",
                        "type": "string"
                    }
                }
            }
        },
        "postal_code_lookup": {
            "name": "postal_code_lookup",
            "description": "Postal Code Lookup Tool",
            "arguments": {
                "type": "object",
                "properties": {
                    "country": {
                        "description": "Country Name",
                        "type": "string"
                    },
                    "city": {
                        "description": "City Name",
                        "type": "string"
                    },
                    "district": {
                        "description": "District or County Name",
                        "type": "string"
                    },
                    "street": {
                        "description": "Street Name",
                        "type": "string"
                    }
                }
            },
            "results": {
                "type": "object",
                "properties": {
                    "postal_code": {
                        "description": "Postal Code",
                        "type": "string"
                    }
                }
            }
        },
        "website_design_tool": {
            "name": "website_design_tool",
            "description": "Help users create and design web pages",
            "arguments": {
                "type": "object",
                "properties": {
                    "template_type": {
                        "description": "Template type",
                        "type": "string",
                        "enum": [
                            "Business",
                            "Running Blog",
                            "Personal Blog",
                            "Photography",
                            "E-commerce"
                        ]
                    },
                    "color_theme": {
                        "description": "Color theme",
                        "type": "string",
                        "enum": [
                            "Light",
                            "Dark"
                        ]
                    },
                    "features_required": {
                        "description": "Required features",
                        "type": "array",
                        "items": {
                            "type": "string",
                            "enum": [
                                "Responsive design",
                                "SEO optimization",
                                "Embedded video",
                                "Online store",
                                "Interactive features"
                            ]
                        }
                    },
                    "page_layout": {
                        "description": "Page layout",
                        "type": "string",
                        "enum": [
                            "Single column",
                            "Double column",
                            "Triple column"
                        ]
                    },
                    "navigation_menu": {
                        "description": "Navigation menu position",
                        "type": "string",
                        "enum": [
                            "Header",
                            "Footer",
                            "Sidebar",
                            "Floating"
                        ]
                    },
                    "website_title": {
                        "description": "Website title",
                        "type": "string"
                    },
                    "website_description": {
                        "description": "Website description",
                        "type": "string"
                    }
                }
            },
            "results": {
                "type": "object",
                "properties": {
                    "design_status": {
                        "description": "Design status",
                        "type": "string"
                    }
                }
            }
        },
        "geo_location_finder": {
            "name": "geo_location_finder",
            "description": "Geographic Location Finder Tool",
            "arguments": {
                "type": "object",
                "properties": {
                    "country": {
                        "description": "Country Name",
                        "type": "string"
                    },
                    "city": {
                        "description": "City Name",
                        "type": "string"
                    },
                    "landmark": {
                        "description": "Landmark or Specific Address",
                        "type": "string"
                    },
                    "latitude": {
                        "description": "Latitude Value",
                        "type": "number"
                    },
                    "longitude": {
                        "description": "Longitude Value",
                        "type": "number"
                    },
                    "dateTime": {
                        "description": "Time of Inquiry",
                        "type": "string",
                        "format": "date-time"
                    },
                    "locationName": {
                        "description": "Location Name",
                        "type": "string"
                    }
                }
            },
            "results": {
                "type": "object",
                "properties": {
                    "latitude": {
                        "description": "Latitude",
                        "type": "number"
                    },
                    "longitude": {
                        "description": "Longitude",
                        "type": "number"
                    },
                    "location_name": {
                        "description": "Geographic Location Name",
                        "type": "string"
                    },
                    "timezone": {
                        "description": "Local Time Zone",
                        "type": "string"
                    },
                    "address": {
                        "description": "Specific Address",
                        "type": "string"
                    }
                }
            }
        },
        "user_feedback_tool": {
            "name": "user_feedback_tool",
            "description": "User Feedback Collection Tool",
            "arguments": {
                "type": "object",
                "properties": {
                    "userId": {
                        "description": "User ID",
                        "type": "string"
                    },
                    "feedbackType": {
                        "description": "Feedback Type",
                        "type": "string",
                        "enum": [
                            "bug report",
                            "feature suggestion",
                            "general comment"
                        ]
                    },
                    "dateProvided": {
                        "description": "Date and Time of Feedback Provided",
                        "type": "string"
                    }
                }
            },
            "results": {
                "type": "object",
                "properties": {
                    "feedbackId": {
                        "description": "Feedback ID",
                        "type": "string"
                    }
                }
            }
        },
        "user_feedback_analysis": {
            "name": "user_feedback_analysis",
            "description": "User Feedback Analysis Tool",
            "arguments": {
                "type": "object",
                "properties": {
                    "userName": {
                        "description": "Name of the User",
                        "type": "string"
                    },
                    "feedbackContent": {
                        "description": "Content of the User's Feedback",
                        "type": "string"
                    },
                    "submissionTime": {
                        "description": "Submission Time of the User Feedback",
                        "type": "string"
                    }
                }
            },
            "results": {
                "type": "object",
                "properties": {
                    "sentiment_score": {
                        "description": "Sentiment Score of the User Feedback",
                        "type": "number"
                    },
                    "key_issues": {
                        "description": "Key Issues Keywords of the User Feedback",
                        "type": "array"
                    }
                }
            }
        },
        "current_time_service": {
            "name": "current_time_service",
            "description": "Provides the current date and time",
            "arguments": {
                "type": "object",
                "properties": {
                    "timezone": {
                        "type": "string",
                        "description": "The timezone to query"
                    }
                }
            },
            "results": {
                "type": "object",
                "properties": {
                    "current_time": {
                        "type": "string",
                        "description": "The current time"
                    }
                }
            }
        },
        "generate_comprehensive_report": {
            "name": "generate_comprehensive_report",
            "description": "Generate a comprehensive report on user feedback",
            "arguments": {
                "type": "object",
                "properties": {
                    "user_feedback": {
                        "description": "A summary of user feedback and case analysis",
                        "type": "string"
                    },
                    "sentiment_data": {
                        "description": "Data from sentiment analysis",
                        "type": "string"
                    },
                    "prevalence_data": {
                        "description": "Data from prevalence analysis",
                        "type": "string"
                    }
                }
            },
            "results": {
                "type": "object",
                "properties": {
                    "report_status": {
                        "description": "The status of whether the report was generated successfully",
                        "type": "boolean"
                    },
                    "report_content": {
                        "description": "The content of the generated comprehensive report",
                        "type": "string"
                    }
                }
            }
        },
        "population_info_search": {
            "name": "population_info_search",
            "description": "Population Information Query Tool",
            "arguments": {
                "type": "object",
                "properties": {
                    "country": {
                        "description": "Country Name",
                        "type": "string"
                    },
                    "year": {
                        "description": "Query Year",
                        "type": "string"
                    },
                    "gender": {
                        "description": "Gender, 'male' for male, 'female' for female",
                        "type": "string"
                    }
                }
            },
            "results": {
                "type": "object",
                "properties": {
                    "population": {
                        "description": "Population Quantity",
                        "type": "integer"
                    }
                }
            }
        },
        "calculate_population_sum": {
            "name": "calculate_population_sum",
            "description": "Calculate the sum of two population numbers",
            "arguments": {
                "type": "object",
                "properties": {
                    "male_population": {
                        "type": "integer",
                        "description": "Male population number"
                    },
                    "female_population": {
                        "type": "integer",
                        "description": "Female population number"
                    }
                }
            },
            "results": {
                "type": "object",
                "properties": {
                    "sum": {
                        "type": "integer",
                        "description": "Sum of population numbers"
                    }
                }
            }
        },
        "compare_population": {
            "name": "compare_population",
            "description": "Compare whether two population numbers are consistent",
            "arguments": {
                "type": "object",
                "properties": {
                    "total_population": {
                        "type": "integer",
                        "description": "Total population number"
                    },
                    "calculated_sum": {
                        "type": "integer",
                        "description": "Sum of calculated population numbers"
                    }
                }
            },
            "results": {
                "type": "object",
                "properties": {
                    "match": {
                        "type": "boolean",
                        "description": "Whether it matches"
                    }
                }
            }
        },
        "file_write": {
            "name": "file_write",
            "description": "Used to write content to a specified file. If the file does not exist, a new file will be created.",
            "arguments": {
                "type": "object",
                "properties": {
                    "file_path": {
                        "description": "The file path where the content will be written",
                        "type": "string"
                    },
                    "content": {
                        "description": "The content to be written",
                        "type": "string"
                    }
                }
            },
            "results": {
                "type": "object",
                "properties": {
                    "status": {
                        "description": "Whether the write operation was successful",
                        "type": "boolean"
                    }
                }
            }
        },
        "legal_regulation_search": {
            "name": "legal_regulation_search",
            "description": "Legal Regulation Search Tool",
            "arguments": {
                "type": "object",
                "properties": {
                    "jurisdiction": {
                        "description": "Legal Jurisdiction Area",
                        "type": "string"
                    },
                    "issueDate": {
                        "description": "Issue Date",
                        "type": "string",
                        "format": "date-time"
                    },
                    "keyword": {
                        "description": "Regulation Keyword",
                        "type": "string"
                    }
                }
            },
            "results": {
                "type": "object",
                "properties": {
                    "regulation_details": {
                        "description": "Specific Regulation Content",
                        "type": "string"
                    }
                }
            }
        },
        "legal_compliance_check": {
            "name": "legal_compliance_check",
            "description": "Company Regulatory Compliance Check Tool",
            "arguments": {
                "type": "object",
                "properties": {
                    "user_id": {
                        "type": "string",
                        "description": "User ID for request tracking"
                    },
                    "employee_name": {
                        "type": "string",
                        "description": "Name of the employee being tracked"
                    },
                    "employee_phone": {
                        "type": "string",
                        "description": "Phone number of the employee being tracked"
                    },
                    "country_code": {
                        "type": "string",
                        "description": "Country code of the employee's location"
                    },
                    "companyName": {
                        "type": "string",
                        "description": "Name of the company"
                    },
                    "industryType": {
                        "type": "string",
                        "description": "Industry type of the company"
                    },
                    "checkDate": {
                        "type": "string",
                        "description": "Date of the regulatory compliance check"
                    }
                }
            },
            "results": {
                "type": "object",
                "properties": {
                    "compliance_status": {
                        "type": "string",
                        "description": "Compliance status"
                    }
                }
            }
        },
        "labor_law_guide": {
            "name": "labor_law_guide",
            "description": "Labor Law Inquiry Tool",
            "arguments": {
                "type": "object",
                "properties": {
                    "region": {
                        "description": "Administrative Region",
                        "type": "string"
                    },
                    "employmentType": {
                        "description": "Employment Type",
                        "type": "string"
                    },
                    "inquiryDate": {
                        "description": "Inquiry Date",
                        "type": "string"
                    }
                }
            },
            "results": {
                "type": "object",
                "properties": {
                    "labor_laws": {
                        "description": "Relevant Labor Laws",
                        "type": "array"
                    }
                }
            }
        },
        "smart_home_control": {
            "name": "smart_home_control",
            "description": "A tool that can control smart home devices such as air conditioners, lights, etc. Users can set to turn on or off these devices at specific times or under certain conditions, but cannot control non-smart devices",
            "arguments": {
                "type": "object",
                "properties": {
                    "device_type": {
                        "description": "Device type",
                        "type": "string",
                        "enum": [
                            "Air conditioner",
                            "Light",
                            "Smart socket",
                            "Smart TV",
                            "Smart curtain"
                        ]
                    },
                    "action": {
                        "description": "Operation",
                        "type": "string",
                        "enum": [
                            "On",
                            "Off"
                        ]
                    },
                    "time": {
                        "description": "Operation time",
                        "type": "string",
                        "format": "date-time",
                        "example": "2022-01-01T00:00:00Z"
                    },
                    "condition": {
                        "description": "Specific conditions such as temperature",
                        "type": "string"
                    }
                }
            },
            "results": {
                "type": "object",
                "properties": {
                    "control_status": {
                        "description": "Control information",
                        "type": "string"
                    }
                }
            }
        },
        "user_review_tracker": {
            "name": "user_review_tracker",
            "description": "Track user reviews for a specified product ID and time range",
            "arguments": {
                "type": "object",
                "properties": {
                    "productID": {
                        "description": "The unique identifier of the product",
                        "type": "string"
                    },
                    "reviewDate": {
                        "description": "The date range of the review up to 'now'",
                        "type": "string"
                    },
                    "userName": {
                        "description": "The name of the user",
                        "type": "string"
                    }
                }
            },
            "results": {
                "type": "object",
                "properties": {
                    "review_content": {
                        "description": "The content of the user's review",
                        "type": "string"
                    },
                    "rating": {
                        "description": "The rating given by the user for the product",
                        "type": "integer"
                    }
                }
            }
        },
        "user_review_analysis": {
            "name": "user_review_analysis",
            "description": "User Review Content Analysis Tool",
            "arguments": {
                "type": "object",
                "properties": {
                    "reviewText": {
                        "description": "The content of the user's review",
                        "type": "string"
                    },
                    "userName": {
                        "description": "The name of the user",
                        "type": "string"
                    },
                    "reviewDate": {
                        "description": "The date of the user's review",
                        "type": "string"
                    }
                }
            },
            "results": {
                "type": "object",
                "properties": {
                    "sentiment": {
                        "description": "The sentiment tendency of the review content",
                        "type": "string"
                    },
                    "keywords": {
                        "description": "Keywords in the review content",
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "customer_review_analysis": {
            "name": "customer_review_analysis",
            "description": "Analysis tool for customer reviews",
            "arguments": {
                "type": "object",
                "properties": {
                    "reviewText": {
                        "description": "The text content of the customer review",
                        "type": "string"
                    },
                    "userName": {
                        "description": "The name of the user who submitted the review",
                        "type": "string"
                    },
                    "reviewDate": {
                        "description": "The date and time of the review",
                        "type": "string",
                        "format": "date-time"
                    }
                }
            },
            "results": {
                "type": "object",
                "properties": {
                    "sentiment": {
                        "description": "The sentiment direction of the review",
                        "type": "string"
                    },
                    "keyPoints": {
                        "description": "Key information in the review",
                        "type": "string"
                    },
                    "reviewImportance": {
                        "description": "The importance rating of the review",
                        "type": "integer"
                    }
                }
            }
        },
        "global_population_search": {
            "name": "global_population_search",
            "description": "Global Population Information Query Tool",
            "arguments": {
                "type": "object",
                "properties": {
                    "year": {
                        "description": "Query Year",
                        "type": "string"
                    }
                }
            },
            "results": {
                "type": "object",
                "properties": {
                    "population": {
                        "description": "Global Population Count",
                        "type": "integer"
                    }
                }
            }
        },
        "background_check": {
            "name": "background_check",
            "description": "Background Check Tool",
            "arguments": {
                "type": "object",
                "properties": {
                    "FirstName": {
                        "description": "First Name",
                        "type": "string"
                    },
                    "LastName": {
                        "description": "Last Name",
                        "type": "string"
                    },
                    "DateOfBirth": {
                        "description": "Date of Birth",
                        "type": "string"
                    },
                    "address": {
                        "description": "Address of the individual being checked",
                        "type": "string"
                    },
                    "survey_id": {
                        "description": "Survey ID",
                        "type": "string"
                    },
                    "participant_id": {
                        "description": "Participant ID",
                        "type": "string"
                    },
                    "date_time": {
                        "description": "Date and time of participation in the survey",
                        "type": "string",
                        "format": "date-time"
                    }
                }
            },
            "results": {
                "type": "object",
                "properties": {
                    "background_info": {
                        "description": "Background Information",
                        "type": "string"
                    },
                    "status": {
                        "description": "Investigation Status",
                        "type": "string"
                    }
                }
            }
        },
        "online_appointment_booking": {
            "name": "online_appointment_booking",
            "description": "Online Appointment Booking Tool",
            "arguments": {
                "type": "object",
                "properties": {
                    "businessType": {
                        "description": "Type of Business",
                        "type": "string"
                    },
                    "branchLocation": {
                        "description": "Branch Location",
                        "type": "string"
                    },
                    "date": {
                        "description": "Date of Appointment",
                        "type": "string"
                    },
                    "timeSlot": {
                        "description": "Appointment Time Slot",
                        "type": "string"
                    },
                    "mobileNumber": {
                        "description": "Mobile Number",
                        "type": "string"
                    },
                    "verificationCode": {
                        "description": "Verification Code",
                        "type": "string"
                    },
                    "acceptServiceAgreement": {
                        "description": "Accept the 'Appointment Service Agreement'",
                        "type": "boolean"
                    }
                }
            },
            "results": {
                "type": "object",
                "properties": {
                    "appointment_number": {
                        "description": "Appointment Number",
                        "type": "integer"
                    }
                }
            }
        },
        "confirm_appointment": {
            "name": "confirm_appointment",
            "description": "Confirm appointment information",
            "arguments": {
                "type": "object",
                "properties": {
                    "requestID": {
                        "type": "string",
                        "description": "Maintenance request number"
                    },
                    "confirmation": {
                        "description": "Whether to confirm the appointment",
                        "type": "string",
                        "enum": [
                            "Yes",
                            "No"
                        ]
                    },
                    "date": {
                        "type": "string",
                        "description": "Appointment date"
                    },
                    "time": {
                        "type": "string",
                        "description": "Appointment time"
                    },
                    "technician_name": {
                        "type": "string",
                        "description": "Technician's name"
                    },
                    "contact_method": {
                        "type": "string",
                        "description": "User's contact method"
                    },
                    "company": {
                        "type": "string",
                        "description": "Maintenance company name"
                    },
                    "serviceAddress": {
                        "type": "string",
                        "description": "Service address"
                    },
                    "toolList": {
                        "type": "array",
                        "description": "List of tools the technician needs to carry",
                        "items": {
                            "type": "string"
                        }
                    }
                }
            },
            "results": {
                "type": "object",
                "properties": {
                    "confirmation_details": {
                        "description": "Appointment confirmation details",
                        "type": "string"
                    },
                    "confirmation_status": {
                        "description": "Appointment confirmation status",
                        "type": "string"
                    },
                    "appointment_status": {
                        "description": "Appointment status",
                        "type": "string"
                    },
                    "arrival_time": {
                        "type": "string",
                        "description": "Estimated technician arrival time"
                    }
                }
            }
        },
        "appointment_info_submission": {
            "name": "appointment_info_submission",
            "description": "Appointment Information Filling Tool",
            "arguments": {
                "type": "object",
                "properties": {
                    "appointment_info": {
                        "description": "Appointment Information",
                        "type": "string"
                    }
                }
            },
            "results": {
                "type": "object",
                "properties": {
                    "submission_result": {
                        "description": "Appointment Information Submission Result",
                        "type": "boolean"
                    }
                }
            }
        },
        "social_media_activity_analyzer": {
            "name": "social_media_activity_analyzer",
            "description": "Analyzes a specified user's activity level on social media, including posting frequency and number of interactions",
            "arguments": {
                "type": "object",
                "properties": {
                    "fullName": {
                        "type": "string",
                        "description": "The full name of the user to be analyzed"
                    }
                }
            },
            "results": {
                "type": "object",
                "properties": {
                    "activity_report": {
                        "type": "object",
                        "description": "Social media activity report of the user",
                        "properties": {
                            "post_frequency": {
                                "type": "integer",
                                "description": "Posting frequency"
                            },
                            "interaction_count": {
                                "type": "integer",
                                "description": "Number of interactions, such as likes, comments, shares"
                            }
                        }
                    }
                }
            }
        },
        "pet_care_tool": {
            "name": "pet_care_tool",
            "description": "Pet care tool, used to help owners take better care of their pets",
            "arguments": {
                "type": "object",
                "properties": {
                    "petType": {
                        "type": "string",
                        "description": "Type of pet, supports both cat and dog",
                        "enum": [
                            "cat",
                            "dog"
                        ],
                        "example": "cat"
                    },
                    "petAge": {
                        "type": "integer",
                        "description": "Age of the pet in months, must be greater than 0 and less than 200",
                        "minimum": 0,
                        "maximum": 200,
                        "example": 12
                    },
                    "petWeight": {
                        "type": "integer",
                        "description": "Weight of the pet in grams, must be greater than 0",
                        "minimum": 0,
                        "example": 5000
                    },
                    "feedFrequency": {
                        "type": "string",
                        "description": "Feeding frequency, such as twice a day, three times a week, etc."
                    },
                    "walkFrequency": {
                        "type": "string",
                        "description": "Dog walking frequency, such as once a day, twice a week, etc., only valid for dog type pets"
                    },
                    "vaccineStatus": {
                        "type": "boolean",
                        "description": "Whether the pet has been vaccinated"
                    }
                }
            },
            "results": {
                "type": "object",
                "properties": {
                    "carePlan": {
                        "type": "object",
                        "description": "Pet care plan",
                        "properties": {
                            "feedingSchedule": {
                                "type": "string",
                                "description": "Recommended feeding schedule"
                            },
                            "walkingSchedule": {
                                "type": "string",
                                "description": "Recommended dog walking schedule, only valid for dog type pets"
                            },
                            "vaccineRecommendations": {
                                "type": "array",
                                "description": "Recommended vaccination schedule"
                            },
                            "weightManagement": {
                                "type": "string",
                                "description": "Weight management suggestions"
                            }
                        }
                    }
                }
            }
        },
        "set_reminder": {
            "name": "set_reminder",
            "description": "Set Reminder",
            "arguments": {
                "type": "object",
                "properties": {
                    "time": {
                        "type": "string",
                        "description": "Reminder Time"
                    },
                    "content": {
                        "type": "string",
                        "description": "Reminder Content"
                    },
                    "reminder_title": {
                        "type": "string",
                        "description": "Reminder Title"
                    },
                    "agenda_id": {
                        "type": "string",
                        "description": "Agenda ID"
                    },
                    "recipient": {
                        "type": "string",
                        "description": "Recipient of Reminder"
                    },
                    "reminder_date": {
                        "type": "string",
                        "description": "Reminder Date"
                    },
                    "action": {
                        "type": "string",
                        "description": "Action to perform after reminder"
                    },
                    "contactInformation": {
                        "type": "string",
                        "description": "User's Contact Information"
                    },
                    "frequency": {
                        "description": "Frequency of reminder setting, options: once, daily, weekly Monday to Sunday, default is once",
                        "type": "string"
                    }
                }
            },
            "results": {
                "type": "object",
                "properties": {
                    "reminder_status": {
                        "type": "string",
                        "description": "Reminder Setting Status"
                    },
                    "reminder_set": {
                        "description": "Whether the reminder was set successfully",
                        "type": "boolean"
                    }
                }
            }
        },
        "search_information": {
            "name": "search_information",
            "description": "Search for information on a specific topic",
            "arguments": {
                "type": "object",
                "properties": {
                    "topic": {
                        "type": "string",
                        "description": "The topic being searched"
                    }
                }
            },
            "results": {
                "type": "object",
                "properties": {
                    "search_status": {
                        "description": "Whether the search was successful",
                        "type": "string"
                    },
                    "information": {
                        "description": "The content of the information obtained",
                        "type": "string"
                    }
                }
            }
        },
        "special_foreign_currency_purchase": {
            "name": "special_foreign_currency_purchase",
            "description": "A tool for purchasing foreign currency at the current exchange rate, limited to US dollars, Euros, and Australian dollars",
            "arguments": {
                "type": "object",
                "properties": {
                    "currency_type": {
                        "description": "Currency type",
                        "type": "string",
                        "enum": [
                            "US dollar",
                            "Euro",
                            "Australian dollar"
                        ]
                    },
                    "purchased_amount": {
                        "description": "Amount purchased",
                        "type": "number"
                    },
                    "account_balance": {
                        "description": "Account balance",
                        "type": "number"
                    }
                }
            },
            "results": {
                "type": "object",
                "properties": {
                    "purchased_status": {
                        "description": "Purchase information",
                        "type": "string"
                    }
                }
            }
        },
        "archive_file_tool": {
            "name": "archive_file_tool",
            "description": "File Archiving Tool",
            "arguments": {
                "type": "object",
                "properties": {
                    "filePath": {
                        "type": "string",
                        "description": "The path of the file or folder to be archived"
                    },
                    "archivePath": {
                        "type": "string",
                        "description": "The path where the archived file will be stored"
                    },
                    "archiveType": {
                        "type": "string",
                        "description": "The type of the archive file (e.g., zip, rar, etc.)"
                    }
                }
            },
            "results": {
                "type": "object",
                "properties": {
                    "archiveStatus": {
                        "type": "boolean",
                        "description": "Whether the archiving operation was successful"
                    },
                    "archiveFilePath": {
                        "type": "string",
                        "description": "The full path of the archived file"
                    }
                }
            }
        },
        "internal_person_search": {
            "name": "internal_person_search",
            "description": "Internal Staff Information Query Tool",
            "arguments": {
                "type": "object",
                "properties": {
                    "name": {
                        "description": "Employee name, must be two to four characters",
                        "type": "string"
                    },
                    "mobile": {
                        "description": "Employee mobile number, must start with 1 and be 11 digits long",
                        "type": "integer",
                        "example": 13312340987
                    },
                    "level": {
                        "description": "Employee level, can only query employees between levels 10 to 20",
                        "type": "integer",
                        "example": 16
                    },
                    "firstOrganization": {
                        "description": "Employee's first-level department",
                        "type": "string"
                    },
                    "secondOrganization": {
                        "description": "Employee's second-level department",
                        "type": "string"
                    },
                    "thirdOrganization": {
                        "description": "Employee's third-level department",
                        "type": "string"
                    },
                    "fourthOrganization": {
                        "description": "Employee's fourth-level department",
                        "type": "string"
                    }
                }
            },
            "results": {
                "type": "object",
                "properties": {
                    "person_info": {
                        "description": "Internal Staff Information",
                        "type": "object"
                    }
                }
            }
        },
        "inventory_check": {
            "name": "inventory_check",
            "description": "Inventory Check Tool",
            "arguments": {
                "type": "object",
                "properties": {
                    "productName": {
                        "description": "Product Name",
                        "type": "string"
                    },
                    "storeId": {
                        "description": "Store ID",
                        "type": "integer"
                    },
                    "checkDate": {
                        "description": "Check Date",
                        "type": "string"
                    }
                }
            },
            "results": {
                "type": "object",
                "properties": {
                    "inventory_status": {
                        "description": "Inventory Status",
                        "type": "string"
                    }
                }
            }
        },
        "product_catalog_search": {
            "name": "product_catalog_search",
            "description": "Product Catalog Search Tool",
            "arguments": {
                "type": "object",
                "properties": {
                    "product_type": {
                        "description": "Product Type",
                        "type": "string"
                    },
                    "product_name": {
                        "description": "Product Name",
                        "type": "string"
                    },
                    "start_time": {
                        "description": "Query Start Time",
                        "type": "string"
                    },
                    "productID": {
                        "description": "Product ID",
                        "type": "integer"
                    },
                    "releaseDate": {
                        "description": "Product Release Date",
                        "type": "string",
                        "pattern": "^\\d{4}-\\d{2}-\\d{2} \\d{2}:\\d{2}$"
                    },
                    "category": {
                        "description": "Product Category",
                        "type": "string"
                    }
                }
            },
            "results": {
                "type": "object",
                "properties": {
                    "product_catalog": {
                        "description": "Product Catalog List",
                        "type": "array"
                    },
                    "product_status": {
                        "description": "Product Status",
                        "type": "string"
                    }
                }
            }
        },
        "flight_info_query": {
            "name": "flight_info_query",
            "description": "Flight Information Query",
            "arguments": {
                "type": "object",
                "properties": {
                    "flight_number": {
                        "type": "string",
                        "description": "Flight Number"
                    },
                    "departureDate": {
                        "description": "Departure Date",
                        "type": "string"
                    },
                    "airlineName": {
                        "description": "Airline Name",
                        "type": "string"
                    }
                }
            },
            "results": {
                "type": "object",
                "properties": {
                    "arrival_time": {
                        "type": "string",
                        "description": "Arrival Time"
                    },
                    "terminal": {
                        "type": "string",
                        "description": "Terminal Information"
                    },
                    "boarding_time": {
                        "description": "Boarding Time",
                        "type": "string"
                    },
                    "boarding_gate": {
                        "description": "Boarding Gate Information",
                        "type": "string"
                    },
                    "flight_status": {
                        "description": "Flight Status",
                        "type": "string"
                    }
                }
            }
        },
        "flight_detail_search": {
            "name": "flight_detail_search",
            "description": "Flight Detail Information Query Tool",
            "arguments": {
                "type": "object",
                "properties": {
                    "flightNumber": {
                        "description": "Flight Number",
                        "type": "string"
                    },
                    "date": {
                        "description": "Flight Date",
                        "type": "string"
                    },
                    "airport": {
                        "description": "Airport Name",
                        "type": "string"
                    }
                }
            },
            "results": {
                "type": "object",
                "properties": {
                    "flight_detail": {
                        "description": "Flight Detailed Information",
                        "type": "object"
                    }
                }
            }
        }
    },
    "News": {
        "headline_news_search": {
            "name": "headline_news_search",
            "description": "Headline News Search Tool",
            "arguments": {
                "type": "object",
                "properties": {
                    "keywords": {
                        "description": "Keywords",
                        "type": "string"
                    },
                    "category": {
                        "description": "News Category",
                        "type": "string"
                    },
                    "date": {
                        "description": "News Release Date",
                        "type": "string"
                    },
                    "location": {
                        "description": "Geographical Location of the News",
                        "type": "string"
                    }
                }
            },
            "results": {
                "type": "object",
                "properties": {
                    "headline_news": {
                        "description": "Headline News",
                        "type": "array"
                    }
                }
            }
        },
        "news_headlines_generator": {
            "name": "news_headlines_generator",
            "description": "News Headlines Generation Tool",
            "arguments": {
                "type": "object",
                "properties": {
                    "keyword": {
                        "description": "News Keyword",
                        "type": "string"
                    },
                    "publishDate": {
                        "description": "News Publish Date",
                        "type": "string"
                    },
                    "publisher": {
                        "description": "News Publishing Agency",
                        "type": "string"
                    },
                    "category": {
                        "description": "News Category",
                        "type": "string"
                    },
                    "region": {
                        "description": "Region of News Release",
                        "type": "string"
                    }
                }
            },
            "results": {
                "type": "object",
                "properties": {
                    "headline": {
                        "description": "Generated News Headline",
                        "type": "string"
                    }
                }
            }
        },
        "wsj_article_search": {
            "name": "wsj_article_search",
            "description": "Search for expert analysis articles in The Wall Street Journal about specific keywords",
            "arguments": {
                "type": "object",
                "properties": {
                    "keyword": {
                        "type": "string",
                        "description": "The keyword to search for"
                    },
                    "date": {
                        "type": "string",
                        "description": "The date the article was published",
                        "pattern": "^[0-9]{4}-[0-9]{2}-[0-9]{2}$"
                    }
                }
            },
            "results": {
                "type": "object",
                "properties": {
                    "articles": {
                        "type": "array",
                        "description": "List of expert analysis articles found"
                    }
                }
            }
        }
    },
    "Cleaning": {
        "home_cleaning_booking": {
            "name": "home_cleaning_booking",
            "description": "Home Cleaning Booking Tool",
            "arguments": {
                "type": "object",
                "properties": {
                    "cleaningDate": {
                        "description": "Cleaning Date",
                        "type": "string"
                    },
                    "cleaningTime": {
                        "description": "Cleaning Time",
                        "type": "string"
                    },
                    "city": {
                        "description": "City where the home is located",
                        "type": "string"
                    },
                    "address": {
                        "description": "Address of the house to be cleaned",
                        "type": "string"
                    },
                    "contact_info": {
                        "description": "User's contact information",
                        "type": "string"
                    },
                    "payment_info": {
                        "description": "User's payment information",
                        "type": "string"
                    },
                    "cleaning_details": {
                        "description": "Scope and special requirements of the cleaning service",
                        "type": "string"
                    }
                }
            },
            "results": {
                "type": "object",
                "properties": {
                    "cleaning_status": {
                        "description": "Home Cleaning Booking Status",
                        "type": "string"
                    }
                }
            }
        },
        "home_cleaning_changing": {
            "name": "home_cleaning_changing",
            "description": "Home Cleaning Reservation Change Tool",
            "arguments": {
                "type": "object",
                "properties": {
                    "originalCleaningDate": {
                        "description": "The cleaning date that needs to be changed",
                        "type": "string"
                    },
                    "originalCleaningTime": {
                        "description": "The cleaning time that needs to be changed",
                        "type": "string"
                    },
                    "originalAddress": {
                        "description": "The home address that needs to be changed",
                        "type": "string"
                    },
                    "originalCity": {
                        "description": "The city of the home that needs to be changed",
                        "type": "string"
                    },
                    "newCleaningDate": {
                        "description": "The new cleaning date. If not provided, the default is that the cleaning date remains unchanged.",
                        "type": "string"
                    },
                    "newCleaningTime": {
                        "description": "The new cleaning time. If not provided, the default is that the cleaning time remains unchanged.",
                        "type": "string"
                    },
                    "newAddress": {
                        "description": "The new home address. If not provided, the default is that the address remains unchanged.",
                        "type": "string"
                    },
                    "newCity": {
                        "description": "The city of the home after the change. If not provided, the default is that the city remains unchanged.",
                        "type": "string"
                    }
                }
            },
            "results": {
                "type": "object",
                "properties": {
                    "cleaning_status": {
                        "description": "Home Cleaning Change Status",
                        "type": "string"
                    }
                }
            }
        },
        "home_cleaning_query": {
            "name": "home_cleaning_query",
            "description": "Home Cleaning Booking Inquiry Tool",
            "arguments": {
                "type": "object",
                "properties": {
                    "cleaningDate": {
                        "description": "The cleaning date to inquire about",
                        "type": "string"
                    },
                    "cleaningTime": {
                        "description": "The cleaning time to inquire about",
                        "type": "string"
                    },
                    "address": {
                        "description": "The home address to inquire about",
                        "type": "string"
                    },
                    "city": {
                        "description": "The city where the home is located to inquire about",
                        "type": "string"
                    }
                }
            },
            "results": {
                "type": "object",
                "properties": {
                    "cleaning_status": {
                        "description": "List of home cleaning bookings that meet the inquiry criteria",
                        "type": "string"
                    }
                }
            }
        },
        "home_cleaning_cancelling": {
            "name": "home_cleaning_cancelling",
            "description": "Home Cleaning Booking Cancellation Tool",
            "arguments": {
                "type": "object",
                "properties": {
                    "cleaningDate": {
                        "description": "The cleaning date to be cancelled",
                        "type": "string"
                    },
                    "cleaningTime": {
                        "description": "The cleaning time to be cancelled",
                        "type": "string"
                    },
                    "address": {
                        "description": "The address of the house where cleaning is to be cancelled",
                        "type": "string"
                    },
                    "city": {
                        "description": "The city where the home to be cleaned is located",
                        "type": "string"
                    }
                }
            },
            "results": {
                "type": "object",
                "properties": {
                    "cleaning_status": {
                        "description": "Home cleaning cancellation status",
                        "type": "string"
                    }
                }
            }
        },
        "filter_cleaning_service": {
            "name": "filter_cleaning_service",
            "description": "Filter home cleaning service providers offering eco-friendly cleaning options in specific cities and districts",
            "arguments": {
                "type": "object",
                "properties": {
                    "city": {
                        "type": "string",
                        "description": "The city where the service is located"
                    },
                    "district": {
                        "type": "string",
                        "description": "The district where the service is located"
                    },
                    "eco_friendly": {
                        "type": "boolean",
                        "description": "Whether eco-friendly cleaning options are provided"
                    }
                }
            },
            "results": {
                "type": "object",
                "properties": {
                    "service_providers": {
                        "type": "array",
                        "description": "List of qualified service providers"
                    }
                }
            }
        },
        "send_email": {
            "name": "send_email",
            "description": "Email notification sending tool",
            "arguments": {
                "type": "object",
                "properties": {
                    "recipient_list": {
                        "type": "array",
                        "description": "Recipient email list"
                    },
                    "document": {
                        "type": "string",
                        "description": "Email attachment content"
                    },
                    "send_time": {
                        "type": "string",
                        "description": "Email sending time"
                    },
                    "subject": {
                        "type": "string",
                        "description": "Email subject"
                    },
                    "body": {
                        "type": "string",
                        "description": "Email body content"
                    },
                    "attachment": {
                        "type": "string",
                        "description": "Email attachment"
                    },
                    "sender": {
                        "type": "string",
                        "description": "Sender email address"
                    },
                    "attachment_path": {
                        "type": "string",
                        "description": "Attachment file path"
                    }
                }
            },
            "results": {
                "type": "object",
                "properties": {
                    "send_status": {
                        "description": "Email sending status",
                        "type": "string"
                    },
                    "email_sent": {
                        "type": "boolean",
                        "description": "Confirmation whether the email has been sent"
                    }
                }
            }
        },
        "weather_query": {
            "name": "weather_query",
            "description": "Get the weather forecast for a specified location and date",
            "arguments": {
                "type": "object",
                "properties": {
                    "date": {
                        "type": "string",
                        "description": "The date for which to obtain the weather forecast"
                    },
                    "location": {
                        "type": "string",
                        "description": "The location for which to query the weather"
                    },
                    "forecast_hours": {
                        "type": "integer",
                        "description": "Forecast time (hours)",
                        "minimum": 1,
                        "maximum": 24
                    }
                }
            },
            "results": {
                "type": "object",
                "properties": {
                    "weather_info": {
                        "type": "string",
                        "description": "Weather forecast information"
                    },
                    "weather_data": {
                        "type": "object",
                        "description": "The obtained weather data, including temperature, probability of precipitation, wind speed, etc."
                    },
                    "status": {
                        "type": "boolean",
                        "description": "Whether the retrieval operation was successful"
                    },
                    "temperature": {
                        "type": "string",
                        "description": "Temperature information"
                    },
                    "humidity": {
                        "type": "string",
                        "description": "Humidity information"
                    },
                    "weather_status": {
                        "type": "string",
                        "description": "Current weather condition description"
                    }
                }
            }
        },
        "filter_good_reputation_cleaners": {
            "name": "filter_good_reputation_cleaners",
            "description": "Filter service providers with good reputation within a specified location range",
            "arguments": {
                "type": "object",
                "properties": {
                    "address": {
                        "type": "string",
                        "description": "Address of the service provider"
                    }
                }
            },
            "results": {
                "type": "object",
                "properties": {
                    "providers": {
                        "type": "array",
                        "description": "List of qualified service providers"
                    }
                }
            }
        },
        "confirm_cleaning_availability": {
            "name": "confirm_cleaning_availability",
            "description": "Confirm the booking availability of the service provider for the specified date and time slot",
            "arguments": {
                "type": "object",
                "properties": {
                    "provider": {
                        "type": "string",
                        "description": "Service provider"
                    },
                    "date": {
                        "type": "string",
                        "description": "Booking date"
                    },
                    "time": {
                        "type": "string",
                        "description": "Booking time slot"
                    }
                }
            },
            "results": {
                "type": "object",
                "properties": {
                    "availability_status": {
                        "type": "string",
                        "description": "Booking availability status of the service provider"
                    }
                }
            }
        },
        "check_provider_reputation": {
            "name": "check_provider_reputation",
            "description": "Check the reputation score of the service provider",
            "arguments": {
                "type": "object",
                "properties": {
                    "provider": {
                        "type": "string",
                        "description": "Service provider"
                    }
                }
            },
            "results": {
                "type": "object",
                "properties": {
                    "reputation_score": {
                        "type": "string",
                        "description": "Reputation score of the service provider"
                    }
                }
            }
        }
    },
    "Rental": {
        "car_rental_booking": {
            "name": "car_rental_booking",
            "description": "Car Rental Booking Tool",
            "arguments": {
                "type": "object",
                "properties": {
                    "carType": {
                        "description": "Vehicle Type",
                        "type": "string"
                    },
                    "rentalPeriod": {
                        "description": "Rental Period",
                        "type": "integer"
                    },
                    "pickupDate": {
                        "description": "Pick-up Date",
                        "type": "string"
                    },
                    "location": {
                        "description": "Pick-up Location",
                        "type": "string"
                    },
                    "startDate": {
                        "description": "Start Date of Car Rental (Date + Time)",
                        "type": "string"
                    },
                    "endDate": {
                        "description": "End Date of Car Rental (Date + Time)",
                        "type": "string"
                    },
                    "carID": {
                        "description": "Car ID",
                        "type": "string"
                    },
                    "city": {
                        "description": "Pick-up City",
                        "type": "string"
                    },
                    "dropOffCity": {
                        "description": "Drop-off City",
                        "type": "string"
                    },
                    "contactInfo": {
                        "description": "Customer Contact Information",
                        "type": "string"
                    },
                    "customerName": {
                        "description": "Customer Name",
                        "type": "string"
                    },
                    "contact": {
                        "description": "Customer Contact Method",
                        "type": "string"
                    },
                    "driverLicense": {
                        "description": "Customer Driver's License Information",
                        "type": "string"
                    },
                    "carModel": {
                        "description": "Car Model",
                        "type": "string"
                    }
                }
            },
            "results": {
                "type": "object",
                "properties": {
                    "totalCost": {
                        "description": "Total Rental Cost",
                        "type": "number"
                    },
                    "booking_status": {
                        "description": "Car Rental Booking Status",
                        "type": "string"
                    },
                    "price": {
                        "description": "Car Rental Price",
                        "type": "string"
                    },
                    "confirmation_status": {
                        "description": "Booking Confirmation Status",
                        "type": "string"
                    },
                    "contract": {
                        "description": "Rental Contract Information",
                        "type": "string"
                    },
                    "pickup_info": {
                        "description": "Vehicle Pickup Information",
                        "type": "string"
                    },
                    "rental_company": {
                        "description": "Car Rental Company Name",
                        "type": "string"
                    },
                    "car_model": {
                        "description": "Vehicle Model",
                        "type": "string"
                    },
                    "confirmation_info": {
                        "description": "Booking Confirmation Information",
                        "type": "string"
                    },
                    "rental_confirmation": {
                        "description": "Rental Confirmation",
                        "type": "string"
                    }
                }
            }
        },
        "car_rental_changing": {
            "name": "car_rental_changing",
            "description": "Car Rental Reservation Modification Tool",
            "arguments": {
                "type": "object",
                "properties": {
                    "originalStartDate": {
                        "description": "The original car rental start date (date + time) that needs to be changed",
                        "type": "string"
                    },
                    "originalEndDate": {
                        "description": "The original car rental end date (date + time) that needs to be changed",
                        "type": "string"
                    },
                    "originalCarID": {
                        "description": "The car ID that needs to be changed",
                        "type": "string"
                    },
                    "originalCity": {
                        "description": "The city where the car was originally picked up that needs to be changed",
                        "type": "string"
                    },
                    "newStartDate": {
                        "description": "The new car rental start date (date + time) after change. If not provided, the original start date remains unchanged.",
                        "type": "string"
                    },
                    "newEndDate": {
                        "description": "The new car rental end date (date + time) after change. If not provided, the original end date remains unchanged.",
                        "type": "string"
                    },
                    "newCarID": {
                        "description": "The new car ID after change. If not provided, the original car ID remains unchanged.",
                        "type": "string"
                    },
                    "newCity": {
                        "description": "The city for picking up the car after change. If not provided, the original city remains unchanged.",
                        "type": "string"
                    }
                }
            },
            "results": {
                "type": "object",
                "properties": {
                    "booking_status": {
                        "description": "Car rental modification status",
                        "type": "string"
                    }
                }
            }
        },
        "car_rental_query": {
            "name": "car_rental_query",
            "description": "Car Rental Query Tool",
            "arguments": {
                "type": "object",
                "properties": {
                    "startDate": {
                        "description": "Car rental start date (date+time)",
                        "type": "string"
                    },
                    "endDate": {
                        "description": "Car rental end date (date+time)",
                        "type": "string"
                    },
                    "carID": {
                        "description": "Car ID",
                        "type": "string"
                    },
                    "city": {
                        "description": "City of car pickup",
                        "type": "string"
                    },
                    "rental_location": {
                        "description": "Car rental location",
                        "type": "string"
                    },
                    "return_location": {
                        "description": "Car return location",
                        "type": "string"
                    },
                    "car_type": {
                        "description": "Car type",
                        "type": "string"
                    }
                }
            },
            "results": {
                "type": "object",
                "properties": {
                    "car_rental_status": {
                        "description": "List of car rental reservations that meet the search criteria",
                        "type": "string"
                    },
                    "available_cars": {
                        "description": "List of available cars",
                        "type": "array"
                    },
                    "rental_companies": {
                        "description": "List of rental companies",
                        "type": "string"
                    }
                }
            }
        },
        "car_rental_cancelling": {
            "name": "car_rental_cancelling",
            "description": "Car Rental Reservation Cancellation Tool",
            "arguments": {
                "type": "object",
                "properties": {
                    "startDate": {
                        "description": "Start date (date + time) of the car rental to be cancelled",
                        "type": "string"
                    },
                    "endDate": {
                        "description": "End date (date + time) of the car rental to be cancelled",
                        "type": "string"
                    },
                    "carID": {
                        "description": "Car identification number to be cancelled",
                        "type": "string"
                    },
                    "city": {
                        "description": "City where the car rental pickup is to be cancelled",
                        "type": "string"
                    }
                }
            },
            "results": {
                "type": "object",
                "properties": {
                    "booking_status": {
                        "description": "Car rental cancellation status",
                        "type": "string"
                    }
                }
            }
        }
    },
    "Job": {
        "part_time_job_tool": {
            "name": "part_time_job_tool",
            "description": "Part-time job information collection and management tool, only applicable to college students",
            "arguments": {
                "type": "object",
                "properties": {
                    "jobType": {
                        "type": "string",
                        "enum": [
                            "Education",
                            "Sales",
                            "Media",
                            "Service Industry",
                            "IT"
                        ],
                        "description": "Type of part-time job, only supports five types: Education, Sales, Media, Service Industry, IT",
                        "example": "Education"
                    },
                    "hourlyWage": {
                        "type": "number",
                        "min": 1,
                        "description": "Hourly wage, must be a number greater than or equal to 1",
                        "example": 15
                    },
                    "workingHours": {
                        "type": "string",
                        "pattern": "^([01]\\d|2[0-3]):([0-5]\\d)-([01]\\d|2[0-3]):([0-5]\\d)$",
                        "description": "Working hours, format 'HH:MM-HH:MM'",
                        "example": "09:00-18:00"
                    },
                    "jobLocation": {
                        "type": "string",
                        "description": "Job location",
                        "example": "No. 888, West Zhongshan Road, Xuhui District, Shanghai"
                    },
                    "experienceRequired": {
                        "type": "boolean",
                        "description": "Whether experience is required"
                    },
                    "studentIdentityRequired": {
                        "type": "boolean",
                        "description": "Whether it is required to be a current student"
                    },
                    "jobDescription": {
                        "type": "string",
                        "description": "Job description"
                    },
                    "contact": {
                        "type": "string",
                        "description": "Contact information, such as phone or email, etc."
                    },
                    "postDate": {
                        "type": "string",
                        "format": "date",
                        "description": "Date of information posting",
                        "example": "2022-02-24"
                    }
                }
            },
            "results": {
                "type": "object",
                "properties": {
                    "success": {
                        "type": "boolean",
                        "description": "Whether the information was successfully collected and saved"
                    },
                    "jobId": {
                        "type": "string",
                        "description": "Unique identifier of the successfully created part-time job information"
                    }
                }
            }
        },
        "email_marketing_tool": {
            "name": "email_marketing_tool",
            "description": "Email marketing tool that can send marketing emails to specified recipients",
            "arguments": {
                "type": "object",
                "properties": {
                    "senderEmail": {
                        "type": "string",
                        "description": "The sender's email address, must conform to the email address format",
                        "format": "email"
                    },
                    "receiverEmails": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "description": "The recipient's email address, must conform to the email address format",
                            "format": "email"
                        },
                        "description": "The email addresses of the recipients, can be one or multiple",
                        "example": [
                            "example1@gmail.com",
                            "example2@gmail.com"
                        ]
                    },
                    "subject": {
                        "type": "string",
                        "description": "The subject of the email"
                    },
                    "content": {
                        "type": "string",
                        "description": "The content of the email"
                    },
                    "attachment": {
                        "type": "string",
                        "description": "The attachment of the email, a full file path is required",
                        "example": "D:/example.docx"
                    },
                    "isHtml": {
                        "type": "boolean",
                        "description": "Whether the email is an HTML email",
                        "default": false
                    }
                }
            },
            "results": {
                "type": "object",
                "properties": {
                    "outcome": {
                        "description": "Whether the email was sent successfully",
                        "type": "string"
                    }
                }
            }
        },
        "job_info_search": {
            "name": "job_info_search",
            "description": "Job Information Query Tool",
            "arguments": {
                "type": "object",
                "properties": {
                    "jobTitle": {
                        "description": "Job Title",
                        "type": "string"
                    },
                    "industry": {
                        "description": "Industry Type",
                        "type": "string"
                    },
                    "location": {
                        "description": "Work Location",
                        "type": "string"
                    },
                    "postDate": {
                        "description": "Date of Job Posting",
                        "type": "string",
                        "format": "date-time"
                    }
                }
            },
            "results": {
                "type": "object",
                "properties": {
                    "job_descriptions": {
                        "description": "Job Descriptions Summary",
                        "type": "string"
                    },
                    "companyName": {
                        "description": "Company Name Posting the Job",
                        "type": "string"
                    },
                    "jobDescription": {
                        "description": "Job Responsibilities and Requirements",
                        "type": "string"
                    },
                    "salaryRange": {
                        "description": "Salary Range",
                        "type": "string"
                    }
                }
            }
        },
        "cover_letter_creator": {
            "name": "cover_letter_creator",
            "description": "Generate a customized cover letter based on the provided job title, company name, and applicant's name",
            "arguments": {
                "type": "object",
                "properties": {
                    "jobTitle": {
                        "type": "string",
                        "description": "Job Title"
                    },
                    "companyName": {
                        "type": "string",
                        "description": "Company Name"
                    },
                    "applicantName": {
                        "type": "string",
                        "description": "Applicant's Name"
                    }
                }
            },
            "results": {
                "type": "object",
                "properties": {
                    "cover_letter": {
                        "type": "string",
                        "description": "Generated Cover Letter"
                    }
                }
            }
        },
        "grammar_and_spelling_checker": {
            "name": "grammar_and_spelling_checker",
            "description": "Check the grammar and spelling errors in the document",
            "arguments": {
                "type": "object",
                "properties": {
                    "document": {
                        "type": "string",
                        "description": "The document to be checked"
                    }
                }
            },
            "results": {
                "type": "object",
                "properties": {
                    "corrections": {
                        "type": "array",
                        "description": "Suggested grammar and spelling corrections"
                    }
                }
            }
        },
        "convert_document_to_pdf": {
            "name": "convert_document_to_pdf",
            "description": "Convert document to PDF format",
            "arguments": {
                "type": "object",
                "properties": {
                    "document": {
                        "description": "The document object to be converted",
                        "type": "object"
                    },
                    "input_format": {
                        "description": "The format of the input file",
                        "type": "string"
                    },
                    "output_format": {
                        "description": "The format of the output file",
                        "type": "string"
                    },
                    "editable": {
                        "type": "string",
                        "description": "Whether the converted PDF file is editable"
                    }
                }
            },
            "results": {
                "type": "object",
                "properties": {
                    "pdf": {
                        "description": "The converted PDF file",
                        "type": "object"
                    },
                    "status": {
                        "description": "Whether the conversion operation was successful",
                        "type": "boolean"
                    }
                }
            }
        },
        "job_hiring_tool": {
            "name": "job_hiring_tool",
            "description": "Job hiring tool, used for posting job vacancies and filtering qualified candidates",
            "arguments": {
                "type": "object",
                "properties": {
                    "jobPosition": {
                        "type": "string",
                        "description": "Recruitment position, e.g.: Java Developer",
                        "example": "Java Developer"
                    },
                    "educationRequirement": {
                        "type": "string",
                        "description": "Educational background requirement",
                        "enum": [
                            "Doctorate",
                            "Master's",
                            "Bachelor's",
                            "Associate",
                            "Other"
                        ]
                    },
                    "workExperience": {
                        "type": "string",
                        "description": "Work experience requirement, e.g.: More than 2 years, no work experience, etc.",
                        "format": "number range",
                        "example": "More than 2 years"
                    },
                    "salaryRange": {
                        "type": "string",
                        "description": "Salary range, e.g.: 5k-10k, negotiable, etc.",
                        "example": "5k-10k"
                    },
                    "jobLocation": {
                        "type": "string",
                        "description": "Job location, e.g.: Beijing, Shanghai, etc.",
                        "example": "Beijing"
                    },
                    "companySize": {
                        "type": "string",
                        "description": "Company size, e.g.: 50-100 people, 100-500 people, etc.",
                        "example": "50-100 people"
                    },
                    "requiredSkills": {
                        "type": "string",
                        "description": "Required skills, e.g.: Java, Python, etc., separate multiple skills with commas",
                        "example": "Java,Python"
                    }
                }
            },
            "results": {
                "type": "object",
                "properties": {
                    "candidates": {
                        "type": "array",
                        "description": "List of candidates who meet the requirements",
                        "items": {
                            "type": "object",
                            "properties": {
                                "name": {
                                    "type": "string",
                                    "description": "Candidate's name"
                                },
                                "contact": {
                                    "type": "string",
                                    "description": "Candidate's contact information"
                                },
                                "education": {
                                    "type": "string",
                                    "description": "Candidate's educational background"
                                },
                                "experience": {
                                    "type": "string",
                                    "description": "Candidate's work experience"
                                },
                                "skills": {
                                    "type": "array",
                                    "description": "List of candidate's skills",
                                    "items": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    },
                    "jobPosted": {
                        "type": "boolean",
                        "description": "Whether the job position has been posted"
                    }
                }
            }
        },
        "verify_employment": {
            "name": "verify_employment",
            "description": "Verify an individual's employment record",
            "arguments": {
                "type": "object",
                "properties": {
                    "fullName": {
                        "type": "string",
                        "description": "Full name of the person to be verified"
                    },
                    "employmentDetails": {
                        "type": "string",
                        "description": "Employment history information provided by the candidate"
                    }
                }
            },
            "results": {
                "type": "object",
                "properties": {
                    "verification_status": {
                        "type": "string",
                        "description": "Employment record verification status"
                    }
                }
            }
        },
        "background_check": {
            "name": "background_check",
            "description": "Background Check Tool",
            "arguments": {
                "type": "object",
                "properties": {
                    "FirstName": {
                        "description": "First Name",
                        "type": "string"
                    },
                    "LastName": {
                        "description": "Last Name",
                        "type": "string"
                    },
                    "DateOfBirth": {
                        "description": "Date of Birth",
                        "type": "string"
                    },
                    "address": {
                        "description": "Address of the individual being checked",
                        "type": "string"
                    },
                    "survey_id": {
                        "description": "Survey ID",
                        "type": "string"
                    },
                    "participant_id": {
                        "description": "Participant ID",
                        "type": "string"
                    },
                    "date_time": {
                        "description": "Date and time of participation in the survey",
                        "type": "string",
                        "format": "date-time"
                    }
                }
            },
            "results": {
                "type": "object",
                "properties": {
                    "background_info": {
                        "description": "Background Information",
                        "type": "string"
                    },
                    "status": {
                        "description": "Investigation Status",
                        "type": "string"
                    }
                }
            }
        },
        "verify_education": {
            "name": "verify_education",
            "description": "Verify educational background information",
            "arguments": {
                "type": "object",
                "properties": {
                    "fullName": {
                        "type": "string",
                        "description": "Candidate's full name"
                    },
                    "educationDetails": {
                        "type": "string",
                        "description": "Education information"
                    },
                    "dateOfBirth": {
                        "type": "string",
                        "description": "Date of birth"
                    },
                    "degree": {
                        "type": "string",
                        "description": "Degree"
                    },
                    "school": {
                        "type": "string",
                        "description": "Graduated school"
                    }
                }
            },
            "results": {
                "type": "object",
                "properties": {
                    "verification_status": {
                        "type": "string",
                        "description": "Education information verification status"
                    }
                }
            }
        }
    },
    "Movie": {
        "movie_recommendation_tool": {
            "name": "movie_recommendation_tool",
            "description": "Personalized Movie Recommendation Tool",
            "arguments": {
                "type": "object",
                "properties": {
                    "preferredGenres": {
                        "type": "array",
                        "description": "User's Preferred Movie Genres",
                        "items": {
                            "type": "string",
                            "enum": [
                                "action",
                                "drama",
                                "comedy",
                                "thriller",
                                "romance"
                            ]
                        }
                    },
                    "ratingRange": {
                        "type": "string",
                        "description": "Acceptable Movie Rating Range for User",
                        "pattern": "^\\d+(\\.\\d+)?-\\d+(\\.\\d+)?$",
                        "example": "7-9"
                    },
                    "yearRange": {
                        "type": "string",
                        "description": "Acceptable Movie Era Range for User",
                        "pattern": "^\\d{4}-\\d{4}$",
                        "example": "2000-2020"
                    },
                    "language": {
                        "type": "string",
                        "description": "User's Preferred Movie Language",
                        "enum": [
                            "English",
                            "Spanish",
                            "Chinese",
                            "Hindi",
                            "Japanese"
                        ]
                    },
                    "durationRange": {
                        "type": "string",
                        "description": "Acceptable Movie Duration Range for User",
                        "pattern": "^\\d+-\\d+$",
                        "example": "90-120"
                    }
                }
            },
            "results": {
                "type": "object",
                "properties": {
                    "outcome": {
                        "description": "Whether the Recommendation Operation was Successful",
                        "type": "string"
                    },
                    "recommended_movies": {
                        "description": "List of Recommended Movies",
                        "type": "array"
                    }
                }
            }
        },
        "ai_search_tool": {
            "name": "ai_search_tool",
            "description": "An intelligent search tool capable of fuzzy and deep search",
            "arguments": {
                "type": "object",
                "properties": {
                    "query": {
                        "description": "Search keywords, must be between 2 to 50 characters",
                        "type": "string"
                    },
                    "language": {
                        "description": "The language used for searching, such as English, Chinese, etc.",
                        "type": "string",
                        "enum": [
                            "English",
                            "Chinese",
                            "Japanese",
                            "Spanish",
                            "French",
                            "German"
                        ]
                    },
                    "type": {
                        "description": "Type of search, includes fuzzy search and deep search",
                        "type": "string",
                        "enum": [
                            "fuzzy",
                            "deep"
                        ]
                    },
                    "region": {
                        "description": "Search region, must be an ISO 3166-1 alpha-2 country code",
                        "type": "string",
                        "format": "ISO 3166-1 alpha-2",
                        "example": "US"
                    },
                    "category": {
                        "description": "Search category, such as books, movies, people, etc.",
                        "type": "string"
                    },
                    "start_date": {
                        "description": "Search start date, must not be earlier than 1990-01-01",
                        "type": "string",
                        "format": "date",
                        "example": "2010-01-01"
                    },
                    "end_date": {
                        "description": "Search end date, must not be later than the current date",
                        "type": "string",
                        "format": "date",
                        "example": "2022-12-30"
                    }
                }
            },
            "results": {
                "type": "object",
                "properties": {
                    "search_results": {
                        "description": "Search results",
                        "type": "object"
                    }
                }
            }
        },
        "advance_ticket_booking": {
            "name": "advance_ticket_booking",
            "description": "This tool is used for booking tickets for various events, such as concerts, plays, movies, etc.",
            "arguments": {
                "type": "object",
                "properties": {
                    "event_type": {
                        "description": "Event type",
                        "type": "string",
                        "enum": [
                            "concert",
                            "play",
                            "movie"
                        ]
                    },
                    "date": {
                        "description": "Booking date",
                        "type": "string",
                        "format": "date-time",
                        "example": "2022-01-01T18:30:00.000Z"
                    },
                    "number_of_tickets": {
                        "description": "Number of tickets",
                        "type": "integer",
                        "minimum": 1
                    },
                    "seat_preference": {
                        "description": "Seat preference (e.g., front row, middle row, back row)",
                        "type": "string"
                    },
                    "vip": {
                        "description": "Whether VIP",
                        "type": "boolean"
                    }
                }
            },
            "results": {
                "type": "object",
                "properties": {
                    "booking_status": {
                        "description": "Booking status",
                        "type": "string"
                    }
                }
            }
        },
        "daily_schedule_manager": {
            "name": "daily_schedule_manager",
            "description": "Schedule Management Tool",
            "arguments": {
                "type": "object",
                "properties": {
                    "event_name": {
                        "description": "Event name, must be 1 to 40 characters",
                        "type": "string"
                    },
                    "event_start": {
                        "description": "Event start time:ss",
                        "type": "string",
                        "format": "date-time",
                        "example": "2022-07-12 14:30:00"
                    },
                    "event_end": {
                        "description": "Event end time:ss",
                        "type": "string",
                        "format": "date-time",
                        "example": "2022-07-12 16:30:00"
                    },
                    "event_location": {
                        "description": "Event location",
                        "type": "string"
                    },
                    "category": {
                        "description": "Event category, can be 'Work', 'Personal', 'Leisure', 'Other'",
                        "type": "string",
                        "enum": [
                            "Work",
                            "Personal",
                            "Leisure",
                            "Other"
                        ]
                    },
                    "importance": {
                        "description": "Event importance level, ranging from 1 to 5, where 1 is the most important",
                        "type": "integer",
                        "minimum": 1,
                        "maximum": 5
                    },
                    "note": {
                        "description": "Note",
                        "type": "string"
                    }
                }
            },
            "results": {
                "type": "object",
                "properties": {
                    "schedule_info": {
                        "description": "Schedule information",
                        "type": "object"
                    }
                }
            }
        }
    },
    "Music": {
        "music_playback": {
            "name": "music_playback",
            "description": "Music Player Tool",
            "arguments": {
                "type": "object",
                "properties": {
                    "songName": {
                        "description": "The song name must consist of 1 to 30 characters made up of letters, numbers, spaces, or '-'",
                        "type": "string",
                        "pattern": "^[a-zA-Z0-9 -]{1,30}$",
                        "example": "Hello world"
                    },
                    "artistName": {
                        "description": "Artist name is optional and should be less than 50 characters",
                        "type": "string",
                        "maxLength": 50
                    },
                    "albumName": {
                        "description": "Album name, if known",
                        "type": "string",
                        "maxLength": 100
                    },
                    "genre": {
                        "description": "The genre of the music, such as rock, pop, classic, etc.",
                        "type": "string",
                        "enum": [
                            "rock",
                            "pop",
                            "classic",
                            "jazz",
                            "hiphop",
                            "country"
                        ]
                    },
                    "year": {
                        "description": "The release year of the song",
                        "type": "integer",
                        "minimum": 1900,
                        "maximum": 2022
                    },
                    "startTime": {
                        "description": "The start time of playback, in the format mm:ss, between 0 to 5 minutes",
                        "type": "string",
                        "pattern": "^([0-4]:[0-5][0-9]|5:00)$"
                    },
                    "volume": {
                        "description": "The volume, from 0 (mute) to 100 (maximum volume)",
                        "type": "integer",
                        "minimum": 0,
                        "maximum": 100,
                        "example": 75
                    }
                }
            },
            "results": {
                "type": "object",
                "properties": {
                    "music_info": {
                        "description": "Music playback information",
                        "type": "object"
                    }
                }
            }
        },
        "timer_stop_music": {
            "name": "timer_stop_music",
            "description": "Set the music player to automatically stop playing after a specified time",
            "arguments": {
                "type": "object",
                "properties": {
                    "duration": {
                        "type": "integer",
                        "description": "The duration before automatic stop of playback, in minutes",
                        "minimum": 1
                    }
                }
            },
            "results": {
                "type": "object",
                "properties": {
                    "status": {
                        "description": "Whether the timer stop was successfully set",
                        "type": "boolean"
                    }
                }
            }
        },
        "free_reading_tool": {
            "name": "free_reading_tool",
            "description": "Free reading tool, supports multiple document formats such as doc, pdf, txt, and provides various page-turning modes",
            "arguments": {
                "type": "object",
                "properties": {
                    "filePath": {
                        "type": "string",
                        "description": "The document path to be read, currently supports documents in formats such as doc, pdf, txt, and must be a file under the C drive",
                        "example": "C:/Documents/book.doc"
                    },
                    "pageSize": {
                        "type": "integer",
                        "description": "The number of text lines displayed per page, ranging between 10-50, any number beyond or below will be adjusted to the default value of 25 lines",
                        "minimum": 10,
                        "maximum": 50
                    },
                    "flipMode": {
                        "type": "string",
                        "description": "Page-turning mode, including: 'normal' regular page-turning; 'roll' scrolling page-turning",
                        "enum": [
                            "normal",
                            "roll"
                        ]
                    },
                    "fontSize": {
                        "type": "integer",
                        "description": "Font size, ranging between 10-20",
                        "minimum": 10,
                        "maximum": 20
                    },
                    "colorMode": {
                        "type": "string",
                        "description": "Color mode, including: 'dark' dark mode; 'light' light mode",
                        "enum": [
                            "dark",
                            "light"
                        ]
                    }
                }
            },
            "results": {
                "type": "object",
                "properties": {
                    "currentPageContent": {
                        "type": "string",
                        "description": "The content of the current page"
                    },
                    "totalPages": {
                        "type": "integer",
                        "description": "The total number of pages in the document"
                    },
                    "status": {
                        "type": "string",
                        "description": "The status of the reader, for example: 'ready' ready; 'error' error"
                    }
                }
            }
        },
        "music_discovery": {
            "name": "music_discovery",
            "description": "Music discovery tool that provides recommendations based on the user's music taste, current time, and location",
            "arguments": {
                "type": "object",
                "properties": {
                    "genre": {
                        "description": "Music genre",
                        "type": "string"
                    },
                    "period": {
                        "description": "Time period when the music was released",
                        "type": "string",
                        "format": "date-time"
                    },
                    "artist": {
                        "description": "Name of the artist",
                        "type": "string"
                    },
                    "musicTaste": {
                        "description": "User's music taste",
                        "type": "string"
                    },
                    "current_time": {
                        "description": "Current time",
                        "type": "string",
                        "format": "date-time"
                    },
                    "location": {
                        "description": "User's location",
                        "type": "string"
                    }
                }
            },
            "results": {
                "type": "object",
                "properties": {
                    "new_music": {
                        "description": "Newly discovered music",
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "get_artist_from_song": {
            "name": "get_artist_from_song",
            "description": "Get artist information based on the song name",
            "arguments": {
                "type": "object",
                "properties": {
                    "song_name": {
                        "type": "string",
                        "description": "Song name"
                    }
                }
            },
            "results": {
                "type": "object",
                "properties": {
                    "artist_name": {
                        "description": "Artist name",
                        "type": "string"
                    }
                }
            }
        },
        "get_popular_songs_by_artist": {
            "name": "get_popular_songs_by_artist",
            "description": "Query other popular songs by a specified artist",
            "arguments": {
                "type": "object",
                "properties": {
                    "artist_name": {
                        "type": "string",
                        "description": "Artist name"
                    }
                }
            },
            "results": {
                "type": "object",
                "properties": {
                    "popular_songs": {
                        "description": "List of popular songs by the artist",
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                }
            }
        }
    }
}